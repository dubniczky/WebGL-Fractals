(()=>{var n={792:function(e){e.exports=function(){"use strict";var h=function(){var n=0,r=document.createElement("div");function e(e){return r.appendChild(e.dom),e}function t(e){for(var t=0;t<r.children.length;t++)r.children[t].style.display=t===e?"block":"none";n=e}r.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",r.addEventListener("click",function(e){e.preventDefault(),t(++n%r.children.length)},!1);var i=(performance||Date).now(),a=i,s=0,o=e(new h.Panel("FPS","#0ff","#002")),l=e(new h.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=e(new h.Panel("MB","#f08","#201"));return t(0),{REVISION:16,dom:r,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){s++;var e=(performance||Date).now();if(l.update(e-i,200),a+1e3<=e&&(o.update(1e3*s/(e-a),100),a=e,s=0,c)){var t=performance.memory;c.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:r,setMode:t}};return h.Panel=function(n,r,i){var a=1/0,s=0,o=Math.round,l=o(window.devicePixelRatio||1),c=80*l,e=48*l,h=3*l,u=2*l,d=3*l,p=15*l,f=74*l,m=30*l,g=document.createElement("canvas");g.width=c,g.height=e,g.style.cssText="width:80px;height:48px";var v=g.getContext("2d");return v.font="bold "+9*l+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=i,v.fillRect(0,0,c,e),v.fillStyle=r,v.fillText(n,h,u),v.fillRect(d,p,f,m),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(d,p,f,m),{dom:g,update:function(e,t){a=Math.min(a,e),s=Math.max(s,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,c,p),v.fillStyle=r,v.fillText(o(e)+" "+n+" ("+o(a)+"-"+o(s)+")",h,u),v.drawImage(g,d+l,p,f-l,m,d,p,f-l,m),v.fillRect(d+f-l,p,l,m),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(d+f-l,p,l,o((1-e/t)*m))}}},h}()},316:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;\n#define A 3.14159265359\n#define B 6.28318530718\nvoid main(){vec2 st=gl_FragCoord.xy/Resolution.xy;st.x*=Resolution.x/Resolution.y;vec3 color=vec3(0.);st=(st*2.)-1.;float a=atan(st.x,st.y)+A;float r=B/Time;float d=cos((floor(.5+(a/r))*r)-a)*length(st);color=vec3(1.-smoothstep(.4,.401,d));gl_FragColor=vec4(color,1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},573:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;vec2 random2(vec2 p){return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);}void main(){vec2 st=gl_FragCoord.xy/Resolution.xy;st.x*=Resolution.x/Resolution.y;float intensity=0.;st*=10.*Zoom.x;vec2 sti=floor(st);vec2 stf=fract(st);float minDistance=2.;for(int y=-1;y<=1;y++){for(int x=-1;x<=1;x++){vec2 neighbor=vec2(float(x),float(y));vec2 point=random2(sti+neighbor);point=0.5+0.1*sin(Time+6.2831*point);vec2 diff=neighbor+point-stf;float dist=length(diff);minDistance=min(minDistance,dist);}}intensity+=minDistance;float col=0.;for(int i=0;i<10;i++){if(col<intensity)col+=0.1;}vec4 texLayer=texture2D(Palette,vec2(1.-col,1));gl_FragColor=texLayer;}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},640:e=>{e.exports={sourceCode:"varying vec3 pos;void main(){pos=position;gl_Position=vec4(position,1);}",uniforms:{},consts:{}}},870:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;void main(){float t=(sin(Time/1000.)+1.)*0.5;vec2 off=Offset.xy;vec2 pos=(gl_FragCoord.xy/Resolution.xy-vec2(.5));pos.x/=(Resolution.y/Resolution.x);float x0=off.x+(pos.x)*Zoom.y;float y0=off.y+(pos.y)*Zoom.y;float x=0.;float y=0.;int i=0;int limit=100;while(x*x+y*y<=4.&&i<limit){float temp=x*x-y*y+x0;y=2.*x*y+y0;x=temp;i++;}const float speed=.3;float percent=float(i)/float(limit);float percentr=(ReversePalette)?percent:1.-percent;vec4 texLayer=texture2D(Palette,vec2(percentr,1.));if(i!=limit){float timePercent=sin(fract((Time)*speed));float reverse=1.-timePercent;if(timePercent-percent<0.05&&timePercent-percent>0.){texLayer+=vec4(vec3(0.1)*reverse,1.);}if(abs(timePercent-percent)<0.01){texLayer+=vec4(vec3(0.2)*reverse,1.);}}gl_FragColor=texLayer;}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},229:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;\n#define A 30\n#define B 2.\n#define C .2\n#define D vec3(-1.0, 0.0, 0.0)\n#define E 128\n#define F 0.0001\n#define G 50.\n#define H .5\n#define I -.5\n#define J vec3(0.)\nvec3 polToCar(vec2 polar){float x=sin(polar.x)*cos(polar.y);float y=sin(polar.y)*sin(polar.x);float z=cos(polar.x);return vec3(x,y,z);}vec2 carToPol(vec3 carte,float radius){float x=acos(carte.z/radius);float y=atan(carte.y,carte.x);return vec2(x,y);}float mandelbrotDifferential(vec3 pos,float time,inout float totalLength){const int DifferentialLimit=A;const float RadiusLimit=B;const float WarpSpeed=C;vec3 z=pos;float power=(9.+sin(time*WarpSpeed)*5.);float rad=length(z);float drad=1.;for(int i=0;i<DifferentialLimit&&rad<RadiusLimit;i++){vec2 polar=carToPol(z,rad);polar.x=polar.x*power;polar.y=polar.y*power;vec3 cart=polToCar(polar);z=pow(rad,power)*cart+pos;drad=pow(rad,power-1.)*power*drad+1.;rad=length(z);totalLength+=rad;}return log(rad)*rad/drad/2.;}vec3 cameraRayDirection3(vec2 uv,vec3 camera,vec3 target,float fov){vec3 forward=normalize(target-camera);vec3 up=normalize(cross(forward,vec3(1.,0.,0.)));vec3 right=normalize(cross(up,forward));float perspective=.5/tan(radians(fov)/2.);return normalize(uv.x*right+uv.y*up+forward*perspective);}float marchMandelbrot(vec3 pos,vec3 dir,float close,float far,float time,inout int i,inout float lengthMin){float depth=close;float minDist=100.;float dist=F+1.;float totalLength=0.;for(i=0;i<E&&depth<far&&dist>F;i++){dist=mandelbrotDifferential(pos+dir*depth,time,totalLength);depth+=dist;if(dist<minDist){minDist=dist;}if(lengthMin>totalLength)lengthMin=totalLength;}return totalLength;}void main(){const float CameraOffset=I;const vec3 TargetOffset=J;const float zoom=H;const float fov=G;vec2 uv=(gl_FragCoord.xy/Resolution.xy+CameraOffset)/zoom;uv.x*=Resolution.x/Resolution.y;float t=Time+6.;vec3 campos=vec3(cos(t/10.)*1.5,sin(t/15.),sin(t/10.)*1.5);vec3 direction=cameraRayDirection3(uv,campos,TargetOffset,fov);int i=0;float len=10000.;float dist=marchMandelbrot(campos,direction,0.f,200.f,t,i,len);float d=1.-(dist*50.);len/=300.;vec3 col=vec3(d,0.,float(i)/float(E));gl_FragColor=vec4(col,1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},644:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;in vec3 pos;vec2 random2(vec2 p){return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);}void main(){vec2 st=gl_FragCoord.xy/Resolution.xy;st.x*=Resolution.x/Resolution.y;float intensity=0.;st*=8.*(1.+Time/10.);vec2 i_st=floor(st);vec2 f_st=fract(st);float minDistance=1.;for(int y=-1;y<=1;y++){for(int x=-1;x<=1;x++){vec2 neighbor=vec2(float(x),float(y));vec2 point=random2(i_st+neighbor);point=0.5+0.5*sin(Time+6.2831*point);vec2 diff=neighbor+point-f_st;float dist=length(diff);minDistance=min(minDistance,dist);}}intensity+=minDistance;vec4 texLayer=texture2D(Palette,vec2(1.-intensity,1));gl_FragColor=texLayer;}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},835:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;float random(in vec2 st){return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);}float noise(in vec2 st){vec2 i=floor(st);vec2 f=fract(st);float a=random(i);float b=random(i+vec2(1.,0.));float c=random(i+vec2(0.,1.));float d=random(i+vec2(1.,1.));vec2 u=f*f*f*(f*(f*6.-15.)+10.);return mix(a,b,u.x)+(c-a)*u.y*(1.-u.x)+(d-b)*u.x*u.y;}void main(){vec2 st=gl_FragCoord.xy/Resolution.xy*5.;float intensity;intensity+=smoothstep(.15,.2,noise(st*10.+Time));intensity-=smoothstep(.35,.4,noise(st*10.+Time));intensity+=smoothstep(.55,.8,noise(st*10.+Time));intensity+=smoothstep(.65,1.,noise(st*10.+Time));vec4 color=texture2D(Palette,vec2(intensity,1.));gl_FragColor=vec4(vec3(color),1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},826:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;\n#define A 6.28318530718\nvec3 hsb2rgb(in vec3 c){vec3 rgb=clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);rgb=rgb*rgb*(3.-2.*rgb);return c.z*mix(vec3(1.),rgb,c.y);}float sinw(in float x){return(1.*sin(x))/2.;}void main(){vec2 st=gl_FragCoord.xy/Resolution;st.x*=Resolution.x/Resolution.y;vec2 toCenter=vec2(0.5)-st;float angle=atan(toCenter.y,toCenter.x);float radius=length(toCenter)*2.;float morph=1.+sinw(Time);float f=abs(cos(angle*18.)*sin(angle*3.*morph))*.8*morph+.1;vec3 color=hsb2rgb(vec3((angle/A)+.5+Time/5.,radius*4.,1.));color*=1.-smoothstep(f,f+0.02,radius);gl_FragColor=vec4(color,1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},898:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;\n#define A 3.14159265358979323846\nfloat random(in vec2 _st){return fract(sin(dot(_st.xy,vec2(12.9898,78.233)))*43758.5453123);}vec2 truchet(in vec2 _st,in float _index){_index=fract(((_index-0.5)*2.));if(_index>0.75){_st=vec2(1.)-_st;}else if(_index>0.5){_st=vec2(1.-_st.x,_st.y);}else if(_index>0.25){_st=1.-vec2(1.-_st.x,_st.y);}return _st;}void main(){const int steps=10;vec2 coord=gl_FragCoord.xy/Resolution.xy;vec2 pcoord=coord*20.;pcoord.x+=Time*1.;float intensity=0.;for(int i=0;i<steps;i++){vec2 ipos=floor(pcoord);vec2 fpos=fract(pcoord);vec2 tile=truchet(fpos,random(ipos));float trustep=smoothstep(tile.x-0.1,tile.x,tile.y)-smoothstep(tile.x,tile.x+0.1,tile.y);if(i==0){intensity+=trustep;}else{intensity+=trustep*.2/float(i)*3.;}pcoord.y+=.05;}vec3 color=vec3(intensity);float mouseDistance=distance(MousePosition,coord.xy);if(mouseDistance<.1&&intensity>=0.9){color.xyz=vec3(0.);}gl_FragColor=vec4(vec3(color),1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}},64:e=>{e.exports={sourceCode:"#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform vec2 Resolution;uniform vec2 Offset;uniform vec2 Zoom;uniform float Time;uniform sampler2D Palette;uniform bool ReversePalette;uniform vec2 MousePosition;uniform bool MouseLeftDown;uniform bool MouseRightDown;\n#define A 0.005\nfloat modulation1(float x,float time){return sin(x*5.+time);}float modulation2(float x,float time){return sin(x*5.+time)*cos(x*3.+time);}float modulation3(float x,float time){return sin(x*5.+time)*cos(x*.5+time);}float modulation4(float x,float time){return sin(x*58934.23546+time)*cos(x*94.14653+time);}float modulation5(float x,float time){return fract(sin(x*5389934.23546+time+2.9820384)*sin(x*42358.0912783+time+2.9820384));}float modulation6(float x,float time){return fract(sin(x*58934.23546+time));}float random(vec2 point,float time){return fract(sin(dot(point.xy,vec2(7.12734,799.1235)))*612356.123964);}void main(){vec2 pos=gl_FragCoord.xy;pos=pos/vec2(Resolution.x,Resolution.y);pos=(pos-.5)*2.;float s1=modulation1(pos.x,Time);float s2=modulation4(pos.x,Time);vec3 color=vec3(0.);if(abs(s1-pos.y)<A){color=vec3(.25);}if(abs(s2-pos.y)<A){color=vec3(1.);}gl_FragColor=vec4(color,1.);}",uniforms:{Resolution:{variableType:"vec2",variableName:"Resolution"},Offset:{variableType:"vec2",variableName:"Offset"},Zoom:{variableType:"vec2",variableName:"Zoom"},Time:{variableType:"float",variableName:"Time"},Palette:{variableType:"sampler2D",variableName:"Palette"},ReversePalette:{variableType:"bool",variableName:"ReversePalette"},MousePosition:{variableType:"vec2",variableName:"MousePosition"},MouseLeftDown:{variableType:"bool",variableName:"MouseLeftDown"},MouseRightDown:{variableType:"bool",variableName:"MouseRightDown"}},consts:{}}}},r={};function Xh(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return n[e].call(t.exports,t,t.exports,Xh),t.exports}Xh.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return Xh.d(t,{a:t}),t},Xh.d=(e,t)=>{for(var n in t)Xh.o(t,n)&&!Xh.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},Xh.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);(()=>{"use strict";const k=0,j=1,q=2;const T=1,E=3,Ae=0,Re=1,Ce=2;const X=0,Z=1,J=2,Y=3,Q=4,K=5,$=100,ee=101,te=102,ne=103,re=104,ie=200,ae=201,se=202,oe=203,le=204,ce=205,he=206,ue=207,de=208,pe=209,fe=210,me=0,ge=1,ve=2,xe=3,ye=4,_e=5,be=6,Me=7,Pe=0,M=301,w=302,l=303,c=304,C=306,P=307,G=1e3,De=1001,V=1002,Ne=1003,W=1004;const we=1005;const Se=1006,e=1007;const Ie=1008;const ze=1009,i=1010,a=1011,Te=1012,s=1013,Ee=1014,Oe=1015,Ue=1016,o=1017,h=1018,u=1019,Le=1020,d=1021,Fe=1022,He=1023,p=1024,f=1025,Be=1026,Ge=1027,m=1028,g=1029,v=1030,x=1031,y=1032,_=1033,b=33776,S=33777,L=33778,A=33779,R=35840,D=35841,N=35842,I=35843,z=36196,O=37492,U=37496,F=37808,H=37809,B=37810,Ve=37811,We=37812,ke=37813,je=37814,qe=37815,Xe=37816,Ze=37817,Je=37818,Ye=37819,Qe=37820,Ke=37821,$e=36492,et=37840,tt=37841,nt=37842,rt=37843,it=37844,at=37845,st=37846,ot=37847,lt=37848,ct=37849,ht=37850,ut=37851,dt=37852,pt=37853,ft=2400,mt=2401;const gt=3e3,vt=3001,n=3201,xt=0,yt=1;const r=35044,t=35048;const _t="300 es";class bt{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const n=this._listeners[e];void 0===n||-1!==(t=n.indexOf(t))&&n.splice(t,1)}}dispatchEvent(n){if(void 0!==this._listeners){const e=this._listeners[n.type];if(void 0!==e){n.target=this;const r=e.slice(0);for(let e=0,t=r.length;e<t;e++)r[e].call(this,n);n.target=null}}}}const Mt=[];for(let e=0;e<256;e++)Mt[e]=(e<16?"0":"")+e.toString(16);const wt=Math.PI/180,St=180/Math.PI;function Tt(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;const i=Mt[255&e]+Mt[e>>8&255]+Mt[e>>16&255]+Mt[e>>24&255]+"-"+Mt[255&t]+Mt[t>>8&255]+"-"+Mt[t>>16&15|64]+Mt[t>>24&255]+"-"+Mt[63&n|128]+Mt[n>>8&255]+"-"+Mt[n>>16&255]+Mt[n>>24&255]+Mt[255&r]+Mt[r>>8&255]+Mt[r>>16&255]+Mt[r>>24&255];return i.toUpperCase()}function Et(e,t,n){return Math.max(t,Math.min(n,e))}function Lt(e,t){return(e%t+t)%t}function At(e,t,n){return(1-n)*e+n*t}function Rt(e){return 0==(e&e-1)&&0!==e}function Ct(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}wt,St;class Pt{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,n=this.y,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6],this.y=e[1]*t+e[4]*n+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,t=this.y-e.y;return this.x=i*n-t*r+e.x,this.y=i*r+t*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Pt.prototype.isVector2=!0;class Dt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){const c=this.elements;return c[0]=e,c[1]=r,c[2]=s,c[3]=t,c[4]=i,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,r=t.elements;const i=this.elements;var a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],v=r[1],x=r[4],e=r[7],t=r[2],n=r[5],r=r[8];return i[0]=a*f+s*v+o*t,i[3]=a*m+s*x+o*n,i[6]=a*g+s*e+o*r,i[1]=l*f+c*v+h*t,i[4]=l*m+c*x+h*n,i[7]=l*g+c*e+h*r,i[2]=u*f+d*v+p*t,i[5]=u*m+d*x+p*n,i[8]=u*g+d*e+p*r,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-n*i*e+n*s*o+r*i*l-r*a*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=c*a-s*l,u=s*o-c*i,d=l*i-a*o,p=t*h+n*u+r*d;if(0==p)return this.set(0,0,0,0,0,0,0,0,0);var f=1/p;return e[0]=h*f,e[1]=(r*l-c*n)*f,e[2]=(s*n-r*a)*f,e[3]=u*f,e[4]=(c*t-r*o)*f,e[5]=(r*i-s*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(a*t-n*i)*f,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(n*o,n*i,-n*(o*a+i*s)+a+e,-r*i,r*o,-r*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){var t=Math.cos(e),n=Math.sin(e);const r=this.elements;var i=r[0],a=r[3],s=r[6],o=r[1],l=r[4],e=r[7];return r[0]=t*i+n*o,r[3]=t*a+n*l,r[6]=t*s+n*e,r[1]=-n*i+t*o,r[4]=-n*a+t*l,r[7]=-n*s+t*e,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<9;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function Nt(n){if(0===n.length)return-1/0;let r=n[0];for(let e=1,t=n.length;e<t;++e)n[e]>r&&(r=n[e]);return r}Dt.prototype.isMatrix3=!0;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function It(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}let zt;class Ot{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===zt&&(zt=It("canvas")),zt.width=e.width,zt.height=e.height;const n=zt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=zt}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let Ut=0;class Ft extends bt{constructor(e=Ft.DEFAULT_IMAGE,t=Ft.DEFAULT_MAPPING,n=De,r=De,i=Se,a=Ie,s=He,o=ze,l=1,c=gt){super(),Object.defineProperty(this,"id",{value:Ut++}),this.uuid=Tt(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Pt(0,0),this.repeat=new Pt(1,1),this.center=new Pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Dt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Tt()),!t&&void 0===e.images[r.uuid]){let n;if(Array.isArray(r)){n=[];for(let e=0,t=r.length;e<t;e++)r[e].isDataTexture?n.push(Ht(r[e].image)):n.push(Ht(r[e]))}else n=Ht(r);e.images[r.uuid]={uuid:r.uuid,url:n}}n.image=r.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case G:e.x=e.x-Math.floor(e.x);break;case De:e.x=e.x<0?0:1;break;case V:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case G:e.y=e.y-Math.floor(e.y);break;case De:e.y=e.y<0?0:1;break;case V:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function Ht(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Ot.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Ft.DEFAULT_IMAGE=void 0,Ft.DEFAULT_MAPPING=300,Ft.prototype.isTexture=!0;class Bt{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i,this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i,this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i,this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;var a=e.elements,s=a[0],o=a[4],l=a[8],c=a[1],h=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(o-c)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(o+c)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(s+1)/2,g=(h+1)/2,v=(f+1)/2,x=(o+c)/4,e=(l+d)/4,a=(u+p)/4;return g<m&&v<m?i=m<.01?(n=0,r=.707106781):(n=Math.sqrt(m),r=x/n,e/n):v<g?i=g<.01?(n=.707106781,r=0,.707106781):(r=Math.sqrt(g),n=x/r,a/r):v<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(v),n=e/i,r=a/i),this.set(n,r,i,t),this}let y=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(c-o)*(c-o));return Math.abs(y)<.001&&(y=1),this.x=(p-u)/y,this.y=(l-d)/y,this.z=(c-o)/y,this.w=Math.acos((s+h+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Bt.prototype.isVector4=!0;class Gt extends bt{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Bt(0,0,e,t),this.scissorTest=!1,this.viewport=new Bt(0,0,e,t),this.texture=new Ft(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Se,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Gt.prototype.isWebGLRenderTarget=!0;(class extends Gt{});class Vt extends Gt{constructor(e,t,n={}){super(e,t,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}Vt.prototype.isWebGLMultisampleRenderTarget=!0;class Wt{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,i,a,s){let o=n[r+0],l=n[r+1],c=n[r+2],h=n[r+3];var u=i[a+0],d=i[a+1],p=i[a+2],n=i[a+3];if(0===s)return e[t+0]=o,e[t+1]=l,e[t+2]=c,void(e[t+3]=h);if(1===s)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=n);if(h!==n||o!==u||l!==d||c!==p){let e=1-s;var r=o*u+l*d+c*p+h*n,i=0<=r?1:-1,a=1-r*r;a>Number.EPSILON&&(a=Math.sqrt(a),r=Math.atan2(a,r*i),e=Math.sin(e*r)/a,s=Math.sin(s*r)/a);i=s*i;o=o*e+u*i,l=l*e+d*i,c=c*e+p*i,h=h*e+n*i,e===1-s&&(s=1/Math.sqrt(o*o+l*l+c*c+h*h),o*=s,l*=s,c*=s,h*=s)}e[t]=o,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,i,a){var s=n[r],o=n[r+1],l=n[r+2],c=n[r+3],h=i[a],n=i[a+1],r=i[a+2],a=i[a+3];return e[t]=s*a+c*h+o*r-l*n,e[t+1]=o*a+c*n+l*h-s*r,e[t+2]=l*a+c*r+s*n-o*h,e[t+3]=c*a-s*h-o*n-l*r,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e._order;const s=Math.cos,o=Math.sin;var l=s(n/2),c=s(r/2),h=s(i/2),u=o(n/2),d=o(r/2),p=o(i/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var n=t/2,t=Math.sin(n);return this._x=e.x*t,this._y=e.y*t,this._z=e.z*t,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){var t,n=e.elements,r=n[0],i=n[4],a=n[8],s=n[1],o=n[5],l=n[9],c=n[2],h=n[6],e=n[10],n=r+o+e;return 0<n?(n=.5/Math.sqrt(n+1),this._w=.25/n,this._x=(h-l)*n,this._y=(a-c)*n,this._z=(s-i)*n):o<r&&e<r?(t=2*Math.sqrt(1+r-o-e),this._w=(h-l)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(a+c)/t):e<o?(t=2*Math.sqrt(1+o-r-e),this._w=(a-c)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(l+h)/t):(o=2*Math.sqrt(1+e-r-o),this._w=(s-i)/o,this._x=(a+c)/o,this._y=(l+h)/o,this._z=.25*o),this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Et(this.dot(e),-1,1)))}rotateTowards(e,t){var n=this.angleTo(e);if(0===n)return this;n=Math.min(1,t/n);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,s=t._x,o=t._y,e=t._z,t=t._w;return this._x=n*t+a*s+r*e-i*o,this._y=r*t+a*o+i*s-n*e,this._z=i*t+a*e+n*o-r*s,this._w=a*t-n*s-r*o-i*e,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w;let s=a*e._w+n*e._x+r*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=n,this._y=r,this._z=i,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}e=Math.sqrt(o),l=Math.atan2(e,s),o=Math.sin((1-t)*l)/e,e=Math.sin(t*l)/e;return this._w=a*o+this._w*e,this._x=n*o+this._x*e,this._y=r*o+this._y*e,this._z=i*o+this._z*e,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}random(){var e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(e),n*Math.cos(e),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Wt.prototype.isQuaternion=!0;class kt{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(qt.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qt.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*r,this.y=e[1]*t+e[4]*n+e[7]*r,this.z=e[2]*t+e[5]*n+e[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=e.elements,e=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*e,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*e,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*e,this}applyQuaternion(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*n,c=o*n+s*t-i*r,e=o*r+i*n-a*t,r=-i*t-a*n-s*r;return this.x=l*o+r*-i+c*-s-e*-a,this.y=c*o+r*-a+e*-i-l*-s,this.z=e*o+r*-s+l*-a-c*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r,this.y=e[1]*t+e[5]*n+e[9]*r,this.z=e[2]*t+e[6]*n+e[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,e=t.y,t=t.z;return this.x=r*t-i*e,this.y=i*a-n*t,this.z=n*e-r*a,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return jt.copy(this).projectOnVector(e),this.sub(jt)}reflect(e){return this.sub(jt.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;t=this.dot(e)/t;return Math.acos(Et(t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}kt.prototype.isVector3=!0;const jt=new kt,qt=new Wt;class Xt{constructor(e=new kt(1/0,1/0,1/0),t=new kt(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.length;e<t;e+=3){var c=n[e],h=n[e+1],u=n[e+2];c<r&&(r=c),h<i&&(i=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.count;e<t;e++){var c=n.getX(e),h=n.getY(e),u=n.getZ(e);c<r&&(r=c),h<i&&(i=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=Jt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),Yt.copy(t.boundingBox),Yt.applyMatrix4(e.matrixWorld),this.union(Yt));var n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Jt),Jt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return n=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(rn),an.subVectors(this.max,rn),Qt.subVectors(e.a,rn),Kt.subVectors(e.b,rn),$t.subVectors(e.c,rn),en.subVectors(Kt,Qt),tn.subVectors($t,Kt),nn.subVectors(Qt,$t),!!ln([0,-en.z,en.y,0,-tn.z,tn.y,0,-nn.z,nn.y,en.z,0,-en.x,tn.z,0,-tn.x,nn.z,0,-nn.x,-en.y,en.x,0,-tn.y,tn.x,0,-nn.y,nn.x,0],Qt,Kt,$t,an)&&(!!ln([1,0,0,0,1,0,0,0,1],Qt,Kt,$t,an)&&(sn.crossVectors(en,tn),ln([sn.x,sn.y,sn.z],Qt,Kt,$t,an))))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Jt.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Jt).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Zt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zt)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Xt.prototype.isBox3=!0;const Zt=[new kt,new kt,new kt,new kt,new kt,new kt,new kt,new kt],Jt=new kt,Yt=new Xt,Qt=new kt,Kt=new kt,$t=new kt,en=new kt,tn=new kt,nn=new kt,rn=new kt,an=new kt,sn=new kt,on=new kt;function ln(n,r,i,a,s){for(let e=0,t=n.length-3;e<=t;e+=3){on.fromArray(n,e);var o=s.x*Math.abs(on.x)+s.y*Math.abs(on.y)+s.z*Math.abs(on.z),l=r.dot(on),c=i.dot(on),h=a.dot(on);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const cn=new Xt,hn=new kt,un=new kt,dn=new kt;class pn{constructor(e=new kt,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(n,e){const r=this.center;void 0!==e?r.copy(e):cn.setFromPoints(n).getCenter(r);let i=0;for(let e=0,t=n.length;e<t;e++)i=Math.max(i,r.distanceToSquared(n[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){dn.subVectors(e,this.center);var t=dn.lengthSq();return t>this.radius*this.radius&&(t=.5*((e=Math.sqrt(t))-this.radius),this.center.add(dn.multiplyScalar(t/e)),this.radius+=t),this}union(e){return(!0===this.center.equals(e.center)?un.set(0,0,1):un.subVectors(e.center,this.center).normalize()).multiplyScalar(e.radius),this.expandByPoint(hn.copy(e.center).add(un)),this.expandByPoint(hn.copy(e.center).sub(un)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const fn=new kt,mn=new kt,gn=new kt,vn=new kt,xn=new kt,yn=new kt,_n=new kt;class bn{constructor(e=new kt,t=new kt(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,fn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=fn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(fn.copy(this.direction).multiplyScalar(t).add(this.origin),fn.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){mn.copy(e).add(t).multiplyScalar(.5),gn.copy(t).sub(e).normalize(),vn.copy(this.origin).sub(mn);var i=.5*e.distanceTo(t),a=-this.direction.dot(gn),s=vn.dot(this.direction),o=-vn.dot(gn),e=vn.lengthSq(),t=Math.abs(1-a*a);let l,c,h,u;return h=0<t?(l=a*o-s,c=a*s-o,u=i*t,0<=l?c>=-u?c<=u?(t=1/t,l*=t,c*=t,l*(l+a*c+2*s)+c*(a*l+c+2*o)+e):(c=i,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e):(c=-i,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e):c<=-u?(l=Math.max(0,-(-a*i+s)),c=0<l?-i:Math.min(Math.max(-i,-o),i),-l*l+c*(c+2*o)+e):c<=u?(l=0,c=Math.min(Math.max(-i,-o),i),c*(c+2*o)+e):(l=Math.max(0,-(a*i+s)),c=0<l?i:Math.min(Math.max(-i,-o),i),-l*l+c*(c+2*o)+e)):(c=0<a?-i:i,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e),n&&n.copy(this.direction).multiplyScalar(l).add(this.origin),r&&r.copy(gn).multiplyScalar(c).add(mn),h}intersectSphere(e,t){fn.subVectors(e.center,this.origin);var n=fn.dot(this.direction),r=fn.dot(fn)-n*n,e=e.radius*e.radius;if(e<r)return null;e=Math.sqrt(e-r),r=n-e,e=n+e;return r<0&&e<0?null:r<0?this.at(e,t):this.at(r,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;t=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=t?t:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,a,s,o;var l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return r=0<=l?(n=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=c?(i=(e.min.y-u.y)*c,(e.max.y-u.y)*c):(i=(e.max.y-u.y)*c,(e.min.y-u.y)*c),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),o=0<=h?(s=(e.min.z-u.z)*h,(e.max.z-u.z)*h):(s=(e.max.z-u.z)*h,(e.min.z-u.z)*h),n>o||s>r?null:((s>n||n!=n)&&(n=s),(o<r||r!=r)&&(r=o),r<0?null:this.at(0<=n?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,fn)}intersectTriangle(e,t,n,r,i){xn.subVectors(t,e),yn.subVectors(n,e),_n.crossVectors(xn,yn);let a=this.direction.dot(_n),s;if(0<a){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}vn.subVectors(this.origin,e);r=s*this.direction.dot(yn.crossVectors(vn,yn));if(r<0)return null;e=s*this.direction.dot(xn.cross(vn));if(e<0)return null;if(r+e>a)return null;e=-s*vn.dot(_n);return e<0?null:this.at(e/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Mn{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Mn).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var n=e.elements,r=1/wn.setFromMatrixColumn(e,0).length(),i=1/wn.setFromMatrixColumn(e,1).length(),e=1/wn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements;var n,r,i,a,s,o,l,c,h,u,d,p=e.x,f=e.y,m=e.z,g=Math.cos(p),v=Math.sin(p),x=Math.cos(f),y=Math.sin(f),p=Math.cos(m),f=Math.sin(m);return"XYZ"===e.order?(n=g*p,i=g*f,r=v*p,m=v*f,t[0]=x*p,t[4]=-x*f,t[8]=y,t[1]=i+r*y,t[5]=n-m*y,t[9]=-v*x,t[2]=m-n*y,t[6]=r+i*y,t[10]=g*x):"YXZ"===e.order?(a=x*p,n=x*f,r=y*p,i=y*f,t[0]=a+i*v,t[4]=r*v-n,t[8]=g*y,t[1]=g*f,t[5]=g*p,t[9]=-v,t[2]=n*v-r,t[6]=i+a*v,t[10]=g*x):"ZXY"===e.order?(l=x*p,a=x*f,s=y*p,o=y*f,t[0]=l-o*v,t[4]=-g*f,t[8]=s+a*v,t[1]=a+s*v,t[5]=g*p,t[9]=o-l*v,t[2]=-g*y,t[6]=v,t[10]=g*x):"ZYX"===e.order?(s=g*p,o=g*f,c=v*p,l=v*f,t[0]=x*p,t[4]=c*y-o,t[8]=s*y+l,t[1]=x*f,t[5]=l*y+s,t[9]=o*y-c,t[2]=-y,t[6]=v*x,t[10]=g*x):"YZX"===e.order?(u=g*x,c=g*y,h=v*x,d=v*y,t[0]=x*p,t[4]=d-u*f,t[8]=h*f+c,t[1]=f,t[5]=g*p,t[9]=-v*p,t[2]=-y*p,t[6]=c*f+h,t[10]=u-d*f):"XZY"===e.order&&(h=g*x,u=g*y,d=v*x,e=v*y,t[0]=x*p,t[4]=-f,t[8]=y*p,t[1]=h*f+e,t[5]=g*p,t[9]=u*f-d,t[2]=d*f-u,t[6]=v*p,t[10]=e*f+h),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Tn,e,En)}lookAt(e,t,n){const r=this.elements;return Rn.subVectors(e,t),0===Rn.lengthSq()&&(Rn.z=1),Rn.normalize(),Ln.crossVectors(n,Rn),0===Ln.lengthSq()&&(1===Math.abs(n.z)?Rn.x+=1e-4:Rn.z+=1e-4,Rn.normalize(),Ln.crossVectors(n,Rn)),Ln.normalize(),An.crossVectors(Rn,Ln),r[0]=Ln.x,r[4]=An.x,r[8]=Rn.x,r[1]=Ln.y,r[5]=An.y,r[9]=Rn.y,r[2]=Ln.z,r[6]=An.z,r[10]=Rn.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,r=t.elements;const i=this.elements;var a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],x=n[7],y=n[11],_=n[15],b=r[0],M=r[4],w=r[8],S=r[12],T=r[1],E=r[5],L=r[9],A=r[13],R=r[2],C=r[6],P=r[10],D=r[14],e=r[3],t=r[7],n=r[11],r=r[15];return i[0]=a*b+s*T+o*R+l*e,i[4]=a*M+s*E+o*C+l*t,i[8]=a*w+s*L+o*P+l*n,i[12]=a*S+s*A+o*D+l*r,i[1]=c*b+h*T+u*R+d*e,i[5]=c*M+h*E+u*C+d*t,i[9]=c*w+h*L+u*P+d*n,i[13]=c*S+h*A+u*D+d*r,i[2]=p*b+f*T+m*R+g*e,i[6]=p*M+f*E+m*C+g*t,i[10]=p*w+f*L+m*P+g*n,i[14]=p*S+f*A+m*D+g*r,i[3]=v*b+x*T+y*R+_*e,i[7]=v*M+x*E+y*C+_*t,i[11]=v*w+x*L+y*P+_*n,i[15]=v*S+x*A+y*D+_*r,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+i*o*h-r*l*h-i*s*u+n*l*u+r*s*d-n*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-r*a*d+r*l*c-i*o*c)+e[11]*(+t*l*h-t*s*d-i*a*h+n*a*d+i*s*c-n*l*c)+e[15]*(-r*s*c-t*o*h+t*s*u+r*a*h-n*a*u+n*o*c)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=h*m*l-f*u*l+f*o*d-s*m*d-h*o*g+s*u*g,x=p*u*l-c*m*l-p*o*d+a*m*d+c*o*g-a*u*g,y=c*f*l-p*h*l+p*s*d-a*f*d-c*s*g+a*h*g,_=p*h*o-c*f*o-p*s*u+a*f*u+c*s*m-a*h*m;var b=t*v+n*x+r*y+i*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);b=1/b;return e[0]=v*b,e[1]=(f*u*i-h*m*i-f*r*d+n*m*d+h*r*g-n*u*g)*b,e[2]=(s*m*i-f*o*i+f*r*l-n*m*l-s*r*g+n*o*g)*b,e[3]=(h*o*i-s*u*i-h*r*l+n*u*l+s*r*d-n*o*d)*b,e[4]=x*b,e[5]=(c*m*i-p*u*i+p*r*d-t*m*d-c*r*g+t*u*g)*b,e[6]=(p*o*i-a*m*i-p*r*l+t*m*l+a*r*g-t*o*g)*b,e[7]=(a*u*i-c*o*i+c*r*l-t*u*l-a*r*d+t*o*d)*b,e[8]=y*b,e[9]=(p*h*i-c*f*i-p*n*d+t*f*d+c*n*g-t*h*g)*b,e[10]=(a*f*i-p*s*i+p*n*l-t*f*l-a*n*g+t*s*g)*b,e[11]=(c*s*i-a*h*i-c*n*l+t*h*l+a*n*d-t*s*d)*b,e[12]=_*b,e[13]=(c*f*r-p*h*r+p*n*u-t*f*u-c*n*m+t*h*m)*b,e[14]=(p*s*r-a*f*r-p*n*o+t*f*o+a*n*m-t*s*m)*b,e[15]=(a*h*r-c*s*r+c*n*o-t*h*o-a*n*u+t*s*u)*b,this}scale(e){const t=this.elements;var n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,e))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,s=e.y,o=e.z,t=i*a,e=i*s;return this.set(t*a+n,t*s-r*o,t*o+r*s,0,t*s+r*o,e*s+n,e*o-r*a,0,t*o-r*s,e*o+r*a,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements;var i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,c=a+a,h=s+s,u=i*l,d=i*c,p=i*h,t=a*c,i=a*h,a=s*h,s=o*l,l=o*c,c=o*h,o=n.x,h=n.y,n=n.z;return r[0]=(1-(t+a))*o,r[1]=(d+c)*o,r[2]=(p-l)*o,r[3]=0,r[4]=(d-c)*h,r[5]=(1-(u+a))*h,r[6]=(i+s)*h,r[7]=0,r[8]=(p+l)*n,r[9]=(i-s)*n,r[10]=(1-(u+t))*n,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){var r=this.elements;let i=wn.set(r[0],r[1],r[2]).length();var a=wn.set(r[4],r[5],r[6]).length(),s=wn.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Sn.copy(this);var o=1/i,e=1/a,r=1/s;return Sn.elements[0]*=o,Sn.elements[1]*=o,Sn.elements[2]*=o,Sn.elements[4]*=e,Sn.elements[5]*=e,Sn.elements[6]*=e,Sn.elements[8]*=r,Sn.elements[9]*=r,Sn.elements[10]*=r,t.setFromRotationMatrix(Sn),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*i/(n-r),l=(t+e)/(t-e),n=(n+r)/(n-r),r=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=n,s[13]=0,s[2]=0,s[6]=0,s[10]=r,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){const s=this.elements;var o=1/(t-e),l=1/(n-r),c=1/(a-i),e=(t+e)*o,r=(n+r)*l,i=(a+i)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-e,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-r,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-i,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<16;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Mn.prototype.isMatrix4=!0;const wn=new kt,Sn=new Mn,Tn=new kt(0,0,0),En=new kt(1,1,1),Ln=new kt,An=new kt,Rn=new kt,Cn=new Mn,Pn=new Wt;class Dn{constructor(e=0,t=0,n=0,r=Dn.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){var e=e.elements,r=e[0],i=e[4],a=e[8],s=e[1],o=e[5],l=e[9],c=e[2],h=e[6],u=e[10];switch(t){case"XYZ":this._y=Math.asin(Et(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-i,r)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Et(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(Et(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-i,o)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-Et(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-i,o));break;case"YZX":this._z=Math.asin(Et(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-Et(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Cn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Cn,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Pn.setFromEuler(this),this.setFromQuaternion(Pn,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new kt(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Dn.prototype.isEuler=!0,Dn.DefaultOrder="XYZ",Dn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Nn{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let In=0;const zn=new kt,On=new Wt,Un=new Mn,Fn=new kt,Hn=new kt,Bn=new kt,Gn=new Wt,Vn=new kt(1,0,0),Wn=new kt(0,1,0),kn=new kt(0,0,1),jn={type:"added"},qn={type:"removed"};class Xn extends bt{constructor(){super(),Object.defineProperty(this,"id",{value:In++}),this.uuid=Tt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xn.DefaultUp.clone();var e=new kt;const t=new Dn,n=new Wt;var r=new kt(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Mn},normalMatrix:{value:new Dt}}),this.matrix=new Mn,this.matrixWorld=new Mn,this.matrixAutoUpdate=Xn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Nn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return On.setFromAxisAngle(e,t),this.quaternion.multiply(On),this}rotateOnWorldAxis(e,t){return On.setFromAxisAngle(e,t),this.quaternion.premultiply(On),this}rotateX(e){return this.rotateOnAxis(Vn,e)}rotateY(e){return this.rotateOnAxis(Wn,e)}rotateZ(e){return this.rotateOnAxis(kn,e)}translateOnAxis(e,t){return zn.copy(e).applyQuaternion(this.quaternion),this.position.add(zn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Vn,e)}translateY(e){return this.translateOnAxis(Wn,e)}translateZ(e){return this.translateOnAxis(kn,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Un.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Fn.copy(e):Fn.set(e,t,n);n=this.parent;this.updateWorldMatrix(!0,!1),Hn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Un.lookAt(Hn,Fn,this.up):Un.lookAt(Fn,Hn,this.up),this.quaternion.setFromRotationMatrix(Un),n&&(Un.extractRotation(n.matrixWorld),On.setFromRotationMatrix(Un),this.quaternion.premultiply(On.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(jn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(qn)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(qn)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Un.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Un.multiply(e.parent.matrixWorld)),e.applyMatrix4(Un),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(n,r){if(this[n]===r)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var i=a.getObjectByProperty(n,r);if(void 0!==i)return i}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hn,e,Bn),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hn,Gn,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(n){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverse(n)}traverseVisible(n){if(!1!==this.visible){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverseVisible(n)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n=!(this.matrixWorldNeedsUpdate=!1));const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(n)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateWorldMatrix(!1,!0)}}toJSON(n){var e,t,r,i,a,s=void 0===n||"string"==typeof n;const o={};s&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},o.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const l={};function c(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(n)),t.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(l.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?l.background=this.background.toJSON():this.background.isTexture&&(l.background=this.background.toJSON(n).uuid)),this.environment&&this.environment.isTexture&&(l.environment=this.environment.toJSON(n).uuid);else if(this.isMesh||this.isLine||this.isPoints){l.geometry=c(n.geometries,this.geometry);var h=this.geometry.parameters;if(void 0!==h&&void 0!==h.shapes){var u=h.shapes;if(Array.isArray(u))for(let e=0,t=u.length;e<t;e++){var d=u[e];c(n.shapes,d)}else c(n.shapes,u)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(c(n.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const m=[];for(let e=0,t=this.material.length;e<t;e++)m.push(c(n.materials,this.material[e]));l.material=m}else l.material=c(n.materials,this.material);if(0<this.children.length){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(n).object)}if(0<this.animations.length){l.animations=[];for(let e=0;e<this.animations.length;e++){var p=this.animations[e];l.animations.push(c(n.animations,p))}}return s&&(e=f(n.geometries),t=f(n.materials),r=f(n.textures),i=f(n.images),a=f(n.shapes),h=f(n.skeletons),s=f(n.animations),0<e.length&&(o.geometries=e),0<t.length&&(o.materials=t),0<r.length&&(o.textures=r),0<i.length&&(o.images=i),0<a.length&&(o.shapes=a),0<h.length&&(o.skeletons=h),0<s.length&&(o.animations=s)),o.object=l,o;function f(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}Xn.DefaultUp=new kt(0,1,0),Xn.DefaultMatrixAutoUpdate=!0,Xn.prototype.isObject3D=!0;const Zn=new kt,Jn=new kt,Yn=new kt,Qn=new kt,Kn=new kt,$n=new kt,er=new kt,tr=new kt,nr=new kt,rr=new kt;class ir{constructor(e=new kt,t=new kt,n=new kt){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Zn.subVectors(e,t),r.cross(Zn);t=r.lengthSq();return 0<t?r.multiplyScalar(1/Math.sqrt(t)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){Zn.subVectors(r,t),Jn.subVectors(n,t),Yn.subVectors(e,t);var a=Zn.dot(Zn),s=Zn.dot(Jn),r=Zn.dot(Yn),n=Jn.dot(Jn),e=Jn.dot(Yn),t=a*n-s*s;if(0==t)return i.set(-2,-1,-1);t=1/t,n=(n*r-s*e)*t,t*=a*e-s*r;return i.set(1-n-t,t,n)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Qn),0<=Qn.x&&0<=Qn.y&&Qn.x+Qn.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,Qn),o.set(0,0),o.addScaledVector(i,Qn.x),o.addScaledVector(a,Qn.y),o.addScaledVector(s,Qn.z),o}static isFrontFacing(e,t,n,r){return Zn.subVectors(n,t),Jn.subVectors(e,t),Zn.cross(Jn).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Zn.subVectors(this.c,this.b),Jn.subVectors(this.a,this.b),.5*Zn.cross(Jn).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ir.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ir.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return ir.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return ir.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ir.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){var n=this.a,r=this.b,i=this.c;let a,s;Kn.subVectors(r,n),$n.subVectors(i,n),tr.subVectors(e,n);var o=Kn.dot(tr),l=$n.dot(tr);if(o<=0&&l<=0)return t.copy(n);nr.subVectors(e,r);var c=Kn.dot(nr),h=$n.dot(nr);if(0<=c&&h<=c)return t.copy(r);var u=o*h-c*l;if(u<=0&&0<=o&&c<=0)return a=o/(o-c),t.copy(n).addScaledVector(Kn,a);rr.subVectors(e,i);var d=Kn.dot(rr),e=$n.dot(rr);if(0<=e&&d<=e)return t.copy(i);o=d*l-o*e;if(o<=0&&0<=l&&e<=0)return s=l/(l-e),t.copy(n).addScaledVector($n,s);l=c*e-d*h;if(l<=0&&0<=h-c&&0<=d-e)return er.subVectors(i,r),s=(h-c)/(h-c+(d-e)),t.copy(r).addScaledVector(er,s);l=1/(l+o+u);return a=o*l,s=u*l,t.copy(n).addScaledVector(Kn,a).addScaledVector($n,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ar=0;class sr extends bt{constructor(){super(),Object.defineProperty(this,"id",{value:ar++}),this.uuid=Tt(),this.name="",this.type="Material",this.fog=!0,this.blending=Z,this.side=Ae,this.vertexColors=!1,this.opacity=1,this.format=He,this.transparent=!1,this.blendSrc=le,this.blendDst=ce,this.blendEquation=$,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=xe,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){0<this._alphaTest!=0<e&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const n in e){var t=e[n];if(void 0!==t)if("shading"!==n){const r=this[n];void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}}toJSON(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}return n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Z&&(n.blending=this.blending),this.side!==Ae&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==He&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t&&(t=r(e.textures),e=r(e.images),0<t.length&&(n.textures=t),0<e.length&&(n.images=e)),n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){var r=t.length;n=new Array(r);for(let e=0;e!==r;++e)n[e]=t[e].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}sr.prototype.isMaterial=!0;const or={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},lr={h:0,s:0,l:0},cr={h:0,s:0,l:0};function hr(e,t,n){return n<0&&(n+=1),1<n&&--n,n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function ur(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function dr(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class pr{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){return e=Lt(e,1),t=Et(t,0,1),n=Et(n,0,1),0===t?this.r=this.g=this.b=n:(this.r=hr(t=2*n-(n=n<=.5?n*(1+t):n+t-n*t),n,e+1/3),this.g=hr(t,n,e),this.b=hr(t,n,e-1/3)),this}setStyle(t){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i=r[1],a=r[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var s=parseFloat(e[1])/360,o=parseInt(e[2],10)/100,l=parseInt(e[3],10)/100;return n(e[4]),this.setHSL(s,o,l)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=r[1];i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=or[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ur(e.r),this.g=ur(e.g),this.b=ur(e.b),this}copyLinearToSRGB(e){return this.r=dr(e.r),this.g=dr(e.g),this.b=dr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r);let s,o;var l=(a+i)/2;if(a===i)s=0,o=0;else{var c=i-a;switch(o=l<=.5?c/(i+a):c/(2-i-a),i){case t:s=(n-r)/c+(n<r?6:0);break;case n:s=(r-t)/c+2;break;case r:s=(t-n)/c+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(lr),lr.h+=e,lr.s+=t,lr.l+=n,this.setHSL(lr.h,lr.s,lr.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(lr),e.getHSL(cr);var n=At(lr.h,cr.h,t),e=At(lr.s,cr.s,t),t=At(lr.l,cr.l,t);return this.setHSL(n,e,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}pr.NAMES=or,pr.prototype.isColor=!0,pr.prototype.r=1,pr.prototype.g=1,pr.prototype.b=1;class fr extends sr{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new pr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}fr.prototype.isMeshBasicMaterial=!0;const mr=new kt,gr=new Pt;class vr{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=r,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(n,r,i){n*=this.itemSize,i*=r.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[n+e]=r.array[i+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new pr),r[i++]=e.r,r[i++]=e.g,r[i++]=e.b}return this}copyVector2sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Pt),r[i++]=e.x,r[i++]=e.y}return this}copyVector3sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new kt),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z}return this}copyVector4sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Bt),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i++]=e.w}return this}applyMatrix3(n){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)gr.fromBufferAttribute(this,e),gr.applyMatrix3(n),this.setXY(e,gr.x,gr.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)mr.fromBufferAttribute(this,e),mr.applyMatrix3(n),this.setXYZ(e,mr.x,mr.y,mr.z);return this}applyMatrix4(n){for(let e=0,t=this.count;e<t;e++)mr.x=this.getX(e),mr.y=this.getY(e),mr.z=this.getZ(e),mr.applyMatrix4(n),this.setXYZ(e,mr.x,mr.y,mr.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)mr.x=this.getX(e),mr.y=this.getY(e),mr.z=this.getZ(e),mr.applyNormalMatrix(n),this.setXYZ(e,mr.x,mr.y,mr.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)mr.x=this.getX(e),mr.y=this.getY(e),mr.z=this.getZ(e),mr.transformDirection(n),this.setXYZ(e,mr.x,mr.y,mr.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==r&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}vr.prototype.isBufferAttribute=!0;(class extends null{});(class extends null{});(class extends null{});(class extends null{});class xr extends vr{constructor(e,t,n){super(new Uint16Array(e),t,n)}}(class extends null{});class yr extends vr{constructor(e,t,n){super(new Uint32Array(e),t,n)}}(class extends vr{});class _r extends vr{constructor(e,t,n){super(new Float32Array(e),t,n)}}(class extends null{});let br=0;const Mr=new Mn,wr=new Xn,Sr=new kt,Tr=new Xt,Er=new Xt,Lr=new kt;class Ar extends bt{constructor(){super(),Object.defineProperty(this,"id",{value:br++}),this.uuid=Tt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(65535<Nt(e)?yr:xr)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;var r;void 0!==n&&(r=(new Dt).getNormalMatrix(e),n.applyNormalMatrix(r),n.needsUpdate=!0);const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Mr.makeRotationFromQuaternion(e),this.applyMatrix4(Mr),this}rotateX(e){return Mr.makeRotationX(e),this.applyMatrix4(Mr),this}rotateY(e){return Mr.makeRotationY(e),this.applyMatrix4(Mr),this}rotateZ(e){return Mr.makeRotationZ(e),this.applyMatrix4(Mr),this}translate(e,t,n){return Mr.makeTranslation(e,t,n),this.applyMatrix4(Mr),this}scale(e,t,n){return Mr.makeScale(e,t,n),this.applyMatrix4(Mr),this}lookAt(e){return wr.lookAt(e),wr.updateMatrix(),this.applyMatrix4(wr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Sr).negate(),this.translate(Sr.x,Sr.y,Sr.z),this}setFromPoints(n){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];r.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new _r(r,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Xt);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new kt(-1/0,-1/0,-1/0),new kt(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(let e=0,t=n.length;e<t;e++){var r=n[e];Tr.setFromBufferAttribute(r),this.morphTargetsRelative?(Lr.addVectors(this.boundingBox.min,Tr.min),this.boundingBox.expandByPoint(Lr),Lr.addVectors(this.boundingBox.max,Tr.max),this.boundingBox.expandByPoint(Lr)):(this.boundingBox.expandByPoint(Tr.min),this.boundingBox.expandByPoint(Tr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new pn);var r=this.attributes.position,i=this.morphAttributes.position;if(r&&r.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new kt,1/0);if(r){const l=this.boundingSphere.center;if(Tr.setFromBufferAttribute(r),i)for(let e=0,t=i.length;e<t;e++){var a=i[e];Er.setFromBufferAttribute(a),this.morphTargetsRelative?(Lr.addVectors(Tr.min,Er.min),Tr.expandByPoint(Lr),Lr.addVectors(Tr.max,Er.max),Tr.expandByPoint(Lr)):(Tr.expandByPoint(Er.min),Tr.expandByPoint(Er.max))}Tr.getCenter(l);let n=0;for(let e=0,t=r.count;e<t;e++)Lr.fromBufferAttribute(r,e),n=Math.max(n,l.distanceToSquared(Lr));if(i)for(let e=0,t=i.length;e<t;e++){var s=i[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)Lr.fromBufferAttribute(s,e),o&&(Sr.fromBufferAttribute(r,e),Lr.add(Sr)),n=Math.max(n,l.distanceToSquared(Lr))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var r=e.array;const h=t.position.array,u=t.normal.array,d=t.uv.array;var i=h.length/3;void 0===t.tangent&&this.setAttribute("tangent",new vr(new Float32Array(4*i),4));const p=t.tangent.array,f=[],m=[];for(let e=0;e<i;e++)f[e]=new kt,m[e]=new kt;const g=new kt,v=new kt,x=new kt,y=new Pt,_=new Pt,b=new Pt,M=new kt,w=new kt;let n=this.groups;0===n.length&&(n=[{start:0,count:r.length}]);for(let e=0,t=n.length;e<t;++e){var a=n[e],s=a.start;for(let e=s,t=s+a.count;e<t;e+=3)!function(e,t,n){g.fromArray(h,3*e),v.fromArray(h,3*t),x.fromArray(h,3*n),y.fromArray(d,2*e),_.fromArray(d,2*t),b.fromArray(d,2*n),v.sub(g),x.sub(g),_.sub(y),b.sub(y);var r=1/(_.x*b.y-b.x*_.y);isFinite(r)&&(M.copy(v).multiplyScalar(b.y).addScaledVector(x,-_.y).multiplyScalar(r),w.copy(x).multiplyScalar(_.x).addScaledVector(v,-b.x).multiplyScalar(r),f[e].add(M),f[t].add(M),f[n].add(M),m[e].add(w),m[t].add(w),m[n].add(w))}(r[e+0],r[e+1],r[e+2])}const S=new kt,T=new kt,E=new kt,L=new kt;for(let e=0,t=n.length;e<t;++e){var o=n[e],l=o.start;for(let e=l,t=l+o.count;e<t;e+=3)c(r[e+0]),c(r[e+1]),c(r[e+2])}function c(e){E.fromArray(u,3*e),L.copy(E);var t=f[e];S.copy(t),S.sub(E.multiplyScalar(E.dot(t))).normalize(),T.crossVectors(L,t);t=T.dot(m[e])<0?-1:1;p[4*e]=S.x,p[4*e+1]=S.y,p[4*e+2]=S.z,p[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}computeVertexNormals(){const r=this.index;var i=this.getAttribute("position");if(void 0!==i){let n=this.getAttribute("normal");if(void 0===n)n=new vr(new Float32Array(3*i.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const l=new kt,c=new kt,h=new kt,u=new kt,d=new kt,p=new kt,f=new kt,m=new kt;if(r)for(let e=0,t=r.count;e<t;e+=3){var a=r.getX(e+0),s=r.getX(e+1),o=r.getX(e+2);l.fromBufferAttribute(i,a),c.fromBufferAttribute(i,s),h.fromBufferAttribute(i,o),f.subVectors(h,c),m.subVectors(l,c),f.cross(m),u.fromBufferAttribute(n,a),d.fromBufferAttribute(n,s),p.fromBufferAttribute(n,o),u.add(f),d.add(f),p.add(f),n.setXYZ(a,u.x,u.y,u.z),n.setXYZ(s,d.x,d.y,d.z),n.setXYZ(o,p.x,p.y,p.z)}else for(let e=0,t=i.count;e<t;e+=3)l.fromBufferAttribute(i,e+0),c.fromBufferAttribute(i,e+1),h.fromBufferAttribute(i,e+2),f.subVectors(h,c),m.subVectors(l,c),f.cross(m),n.setXYZ(e+0,f.x,f.y,f.z),n.setXYZ(e+1,f.x,f.y,f.z),n.setXYZ(e+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(const s in n)if(void 0!==e.attributes[s]){const o=n[s].array;var r=e.attributes[s],i=r.array,r=r.itemSize*t,a=Math.min(i.length,o.length-r);for(let e=0,t=r;e<a;e++,t++)o[t]=i[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)Lr.fromBufferAttribute(n,e),Lr.normalize(),n.setXYZ(e,Lr.x,Lr.y,Lr.z)}toNonIndexed(){function n(n,r){const i=n.array;var a=n.itemSize,e=n.normalized;const s=new i.constructor(r.length*a);let o=0,l=0;for(let e=0,t=r.length;e<t;e++){o=n.isInterleavedBufferAttribute?r[e]*n.data.stride+n.offset:r[e]*a;for(let e=0;e<a;e++)s[l++]=i[o++]}return new vr(s,a,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const r=new Ar;var i=this.index.array,e=this.attributes;for(const h in e){var t=n(e[h],i);r.setAttribute(h,t)}var a=this.morphAttributes;for(const u in a){const d=[];var s=a[u];for(let e=0,t=s.length;e<t;e++){var o=n(s[e],i);d.push(o)}r.morphAttributes[u]=d}r.morphTargetsRelative=this.morphTargetsRelative;var l=this.groups;for(let e=0,t=l.length;e<t;e++){var c=l[e];r.addGroup(c.start,c.count,c.materialIndex)}return r}toJSON(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),0<Object.keys(this.userData).length&&(n.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const l in e)void 0!==e[l]&&(n[l]=e[l]);return n}n.data={attributes:{}};var t=this.index;null!==t&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});var r=this.attributes;for(const c in r){const h=r[c];n.data.attributes[c]=h.toJSON(n.data)}const i={};let a=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u];const d=[];for(let e=0,t=s.length;e<t;e++){const p=s[e];d.push(p.toJSON(n.data))}0<d.length&&(i[u]=d,a=!0)}a&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(n.data.groups=JSON.parse(JSON.stringify(t)));const o=this.boundingSphere;return null!==o&&(n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),n}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(n));var r=e.attributes;for(const c in r){const h=r[c];this.setAttribute(c,h.clone(n))}var i=e.morphAttributes;for(const u in i){const d=[],p=i[u];for(let e=0,t=p.length;e<t;e++)d.push(p[e].clone(n));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;var a=e.groups;for(let e=0,t=a.length;e<t;e++){var s=a[e];this.addGroup(s.start,s.count,s.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ar.prototype.isBufferGeometry=!0;const Rr=new Mn,Cr=new bn,Pr=new pn,Dr=new kt,Nr=new kt,Ir=new kt,zr=new kt,Or=new kt,Ur=new kt,Fr=new kt,Hr=new kt,Br=new kt,Gr=new Pt,Vr=new Pt,Wr=new Pt,kr=new kt,jr=new kt;class qr extends Xn{constructor(e=new Ar,t=new fr){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(r,i){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),Pr.copy(e.boundingSphere),Pr.applyMatrix4(t),!1!==r.ray.intersectsSphere(Pr)&&(Rr.copy(t).invert(),Cr.copy(r.ray).applyMatrix4(Rr),null===e.boundingBox||!1!==Cr.intersectsBox(e.boundingBox)))){let n;if(e.isBufferGeometry){const R=e.index;var s=e.attributes.position,o=e.morphAttributes.position,l=e.morphTargetsRelative,c=e.attributes.uv,h=e.attributes.uv2,u=e.groups,d=e.drawRange;if(null!==R)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var p=u[e],f=a[p.materialIndex];for(let e=Math.max(p.start,d.start),t=Math.min(R.count,Math.min(p.start+p.count,d.start+d.count));e<t;e+=3){var m=R.getX(e),g=R.getX(e+1),v=R.getX(e+2);n=Xr(this,f,r,Cr,s,o,l,c,h,m,g,v),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=p.materialIndex,i.push(n))}}else for(let e=Math.max(0,d.start),t=Math.min(R.count,d.start+d.count);e<t;e+=3){var x=R.getX(e),y=R.getX(e+1),_=R.getX(e+2);n=Xr(this,a,r,Cr,s,o,l,c,h,x,y,_),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var b=u[e],M=a[b.materialIndex];for(let e=Math.max(b.start,d.start),t=Math.min(s.count,Math.min(b.start+b.count,d.start+d.count));e<t;e+=3){var w=e,S=e+1,T=e+2;n=Xr(this,M,r,Cr,s,o,l,c,h,w,S,T),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=b.materialIndex,i.push(n))}}else for(let e=Math.max(0,d.start),t=Math.min(s.count,d.start+d.count);e<t;e+=3){var E=e,L=e+1,A=e+2;n=Xr(this,a,r,Cr,s,o,l,c,h,E,L,A),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Xr(e,t,n,r,i,a,s,o,l,c,h,u){Dr.fromBufferAttribute(i,c),Nr.fromBufferAttribute(i,h),Ir.fromBufferAttribute(i,u);var d=e.morphTargetInfluences;if(a&&d){Fr.set(0,0,0),Hr.set(0,0,0),Br.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],f=a[e];0!==p&&(zr.fromBufferAttribute(f,c),Or.fromBufferAttribute(f,h),Ur.fromBufferAttribute(f,u),s?(Fr.addScaledVector(zr,p),Hr.addScaledVector(Or,p),Br.addScaledVector(Ur,p)):(Fr.addScaledVector(zr.sub(Dr),p),Hr.addScaledVector(Or.sub(Nr),p),Br.addScaledVector(Ur.sub(Ir),p)))}Dr.add(Fr),Nr.add(Hr),Ir.add(Br)}e.isSkinnedMesh&&(e.boneTransform(c,Dr),e.boneTransform(h,Nr),e.boneTransform(u,Ir));const m=function(e,t,n,r,i,a,s,o){let l;return l=t.side===Re?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,t.side!==Ce,o),null===l?null:(jr.copy(o),jr.applyMatrix4(e.matrixWorld),(o=n.ray.origin.distanceTo(jr))<n.near||o>n.far?null:{distance:o,point:jr.clone(),object:e})}(e,t,n,r,Dr,Nr,Ir,kr);return m&&(o&&(Gr.fromBufferAttribute(o,c),Vr.fromBufferAttribute(o,h),Wr.fromBufferAttribute(o,u),m.uv=ir.getUV(kr,Dr,Nr,Ir,Gr,Vr,Wr,new Pt)),l&&(Gr.fromBufferAttribute(l,c),Vr.fromBufferAttribute(l,h),Wr.fromBufferAttribute(l,u),m.uv2=ir.getUV(kr,Dr,Nr,Ir,Gr,Vr,Wr,new Pt)),l={a:c,b:h,c:u,normal:new kt,materialIndex:0},ir.getNormal(Dr,Nr,Ir,l.normal),m.face=l),m}qr.prototype.isMesh=!0;class Zr extends Ar{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const L=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);const A=[],R=[],C=[],P=[];let D=0,N=0;function s(n,r,i,a,s,e,t,o,l,c,h){var u=e/l,d=t/c,p=e/2,f=t/2,m=o/2,g=l+1,v=c+1;let x=0,y=0;const _=new kt;for(let t=0;t<v;t++){var b=t*d-f;for(let e=0;e<g;e++){var M=e*u-p;_[n]=M*a,_[r]=b*s,_[i]=m,R.push(_.x,_.y,_.z),_[n]=0,_[r]=0,_[i]=0<o?1:-1,C.push(_.x,_.y,_.z),P.push(e/l),P.push(1-t/c),x+=1}}for(let t=0;t<c;t++)for(let e=0;e<l;e++){var w=D+e+g*t,S=D+e+g*(t+1),T=D+(e+1)+g*(t+1),E=D+(e+1)+g*t;A.push(w,S,E),A.push(S,T,E),y+=6}L.addGroup(N,y,h),N+=y,D+=x}s("z","y","x",-1,-1,n,t,e,a,i,0),s("z","y","x",1,-1,n,t,-e,a,i,1),s("x","z","y",1,1,e,n,t,r,a,2),s("x","z","y",1,-1,e,n,-t,r,a,3),s("x","y","z",1,-1,e,t,n,r,i,4),s("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(A),this.setAttribute("position",new _r(R,3)),this.setAttribute("normal",new _r(C,3)),this.setAttribute("uv",new _r(P,2))}static fromJSON(e){return new Zr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jr(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function Yr(t){const n={};for(let e=0;e<t.length;e++){var r=Jr(t[e]);for(const i in r)n[i]=r[i]}return n}const Qr={clone:Jr,merge:Yr};class Kr extends sr{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const i=this.uniforms[r].value;i&&i.isTexture?t.uniforms[r]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[r]={type:"m4",value:i.toArray()}:t.uniforms[r]={value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const a in this.extensions)!0===this.extensions[a]&&(n[a]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t}}Kr.prototype.isShaderMaterial=!0;class $r extends Xn{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Mn,this.projectionMatrix=new Mn,this.projectionMatrixInverse=new Mn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}$r.prototype.isCamera=!0;class ei extends $r{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*St*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*wt*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*St*Math.atan(Math.tan(.5*wt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*wt*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;var a,s=this.view;null!==this.view&&this.view.enabled&&(a=s.fullWidth,o=s.fullHeight,i+=s.offsetX*r/a,t-=s.offsetY*n/o,r*=s.width/a,n*=s.height/o);var o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}ei.prototype.isPerspectiveCamera=!0;class ti extends Xn{constructor(e,t,n){if(super(),this.type="CubeCamera",!0===n.isWebGLCubeRenderTarget){this.renderTarget=n;const r=new ei(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new kt(1,0,0)),this.add(r);const i=new ei(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new kt(-1,0,0)),this.add(i);const a=new ei(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new kt(0,1,0)),this.add(a);const s=new ei(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new kt(0,-1,0)),this.add(s);const o=new ei(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new kt(0,0,1)),this.add(o);const l=new ei(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new kt(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;var[r,i,a,s,o,l]=this.children,c=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;var u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c}}class ni extends Ft{constructor(e,t,n,r,i,a,s,o,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:M,n,r,i,a,s,o,l,c),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}ni.prototype.isCubeTexture=!0;class ri extends Gt{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new ni(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Se,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=He,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Zr(5,5,5);const i=new Kr({name:"CubemapFromEquirect",uniforms:Jr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Re,blending:X});i.uniforms.tEquirect.value=t;const a=new qr(r,i);r=t.minFilter;t.minFilter===Ie&&(t.minFilter=Se);const s=new ti(1,10,this);return s.update(e,a),t.minFilter=r,a.geometry.dispose(),a.material.dispose(),this}clear(t,n,r,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(n,r,i);t.setRenderTarget(e)}}ri.prototype.isWebGLCubeRenderTarget=!0;const ii=new kt,ai=new kt,si=new Dt;class oi{constructor(e=new kt(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){t=ii.subVectors(n,t).cross(ai.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(t,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){var n=e.delta(ii),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;r=-(e.start.dot(this.normal)+this.constant)/r;return r<0||1<r?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||si.getNormalMatrix(e);const n=this.coplanarPoint(ii).applyMatrix4(e);t=this.normal.applyMatrix3(t).normalize();return this.constant=-n.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}oi.prototype.isPlane=!0;const li=new pn,ci=new kt;class hi{constructor(e=new oi,t=new oi,n=new oi,r=new oi,i=new oi,a=new oi){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(t){const n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var n=e.elements,r=n[0],i=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],e=n[14],n=n[15];return t[0].setComponents(s-r,h-o,f-u,n-m).normalize(),t[1].setComponents(s+r,h+o,f+u,n+m).normalize(),t[2].setComponents(s+i,h+l,f+d,n+g).normalize(),t[3].setComponents(s-i,h-l,f-d,n-g).normalize(),t[4].setComponents(s-a,h-c,f-p,n-e).normalize(),t[5].setComponents(s+a,h+c,f+p,n+e).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),li.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(li)}intersectsSprite(e){return li.center.set(0,0,0),li.radius=.7071067811865476,li.applyMatrix4(e.matrixWorld),this.intersectsSphere(li)}intersectsSphere(e){const t=this.planes;var n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){var n=this.planes;for(let e=0;e<6;e++){const r=n[e];if(ci.x=(0<r.normal.x?t.max:t.min).x,ci.y=(0<r.normal.y?t.max:t.min).y,ci.z=(0<r.normal.z?t.max:t.min).z,r.distanceToPoint(ci)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function ui(){let n=null,e=!1,r=null,i=null;function a(e,t){r(e,t),i=n.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==r&&(i=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){r=e},setContext:function(e){n=e}}}function di(s,e){const o=e.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=i.get(e);t&&(s.deleteBuffer(t.buffer),i.delete(e))},update:function(e,t){if(e.isGLBufferAttribute){var n=i.get(e);(!n||n.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}else{e.isInterleavedBufferAttribute&&(e=e.data);const r=i.get(e);void 0===r?i.set(e,function(e,t){var n=e.array,r=e.usage,i=s.createBuffer();s.bindBuffer(t,i),s.bufferData(t,n,r),e.onUploadCallback();let a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:(n instanceof Uint8Array||n instanceof Uint8ClampedArray)&&(a=5121),{buffer:i,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,t)):r.version<e.version&&(function(e,t,n){const r=t.array,i=t.updateRange;s.bindBuffer(n,e),-1===i.count?s.bufferSubData(n,0,r):(o?s.bufferSubData(n,i.offset*r.BYTES_PER_ELEMENT,r,i.offset,i.count):s.bufferSubData(n,i.offset*r.BYTES_PER_ELEMENT,r.subarray(i.offset,i.offset+i.count)),i.count=-1)}(r.buffer,e,t),r.version=e.version)}}}}class pi extends Ar{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i=e/2,a=t/2,s=Math.floor(n),o=Math.floor(r),l=s+1,c=o+1,h=e/s,u=t/o;const d=[],p=[],f=[],m=[];for(let t=0;t<c;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*h-i;p.push(v,-g,0),f.push(0,0,1),m.push(e/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var x=e+l*t,y=e+l*(t+1),_=e+1+l*(t+1),b=e+1+l*t;d.push(x,y,b),d.push(y,_,b)}this.setIndex(d),this.setAttribute("position",new _r(p,3)),this.setAttribute("normal",new _r(f,3)),this.setAttribute("uv",new _r(m,2))}static fromJSON(e){return new pi(e.width,e.height,e.widthSegments,e.heightSegments)}}const fi={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\treturn texture2D( envMap, uv ).rgb;\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},mi={common:{diffuse:{value:new pr(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Dt},uv2Transform:{value:new Dt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Pt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new pr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new pr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dt}},sprite:{diffuse:{value:new pr(16777215)},opacity:{value:1},center:{value:new Pt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dt}}},gi={basic:{uniforms:Yr([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.fog]),vertexShader:fi.meshbasic_vert,fragmentShader:fi.meshbasic_frag},lambert:{uniforms:Yr([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.fog,mi.lights,{emissive:{value:new pr(0)}}]),vertexShader:fi.meshlambert_vert,fragmentShader:fi.meshlambert_frag},phong:{uniforms:Yr([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,mi.lights,{emissive:{value:new pr(0)},specular:{value:new pr(1118481)},shininess:{value:30}}]),vertexShader:fi.meshphong_vert,fragmentShader:fi.meshphong_frag},standard:{uniforms:Yr([mi.common,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.roughnessmap,mi.metalnessmap,mi.fog,mi.lights,{emissive:{value:new pr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:fi.meshphysical_vert,fragmentShader:fi.meshphysical_frag},toon:{uniforms:Yr([mi.common,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.gradientmap,mi.fog,mi.lights,{emissive:{value:new pr(0)}}]),vertexShader:fi.meshtoon_vert,fragmentShader:fi.meshtoon_frag},matcap:{uniforms:Yr([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,{matcap:{value:null}}]),vertexShader:fi.meshmatcap_vert,fragmentShader:fi.meshmatcap_frag},points:{uniforms:Yr([mi.points,mi.fog]),vertexShader:fi.points_vert,fragmentShader:fi.points_frag},dashed:{uniforms:Yr([mi.common,mi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:fi.linedashed_vert,fragmentShader:fi.linedashed_frag},depth:{uniforms:Yr([mi.common,mi.displacementmap]),vertexShader:fi.depth_vert,fragmentShader:fi.depth_frag},normal:{uniforms:Yr([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,{opacity:{value:1}}]),vertexShader:fi.meshnormal_vert,fragmentShader:fi.meshnormal_frag},sprite:{uniforms:Yr([mi.sprite,mi.fog]),vertexShader:fi.sprite_vert,fragmentShader:fi.sprite_frag},background:{uniforms:{uvTransform:{value:new Dt},t2D:{value:null}},vertexShader:fi.background_vert,fragmentShader:fi.background_frag},cube:{uniforms:Yr([mi.envmap,{opacity:{value:1}}]),vertexShader:fi.cube_vert,fragmentShader:fi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:fi.equirect_vert,fragmentShader:fi.equirect_frag},distanceRGBA:{uniforms:Yr([mi.common,mi.displacementmap,{referencePosition:{value:new kt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:fi.distanceRGBA_vert,fragmentShader:fi.distanceRGBA_frag},shadow:{uniforms:Yr([mi.lights,mi.fog,{color:{value:new pr(0)},opacity:{value:1}}]),vertexShader:fi.shadow_vert,fragmentShader:fi.shadow_frag}};function vi(a,s,n,o,r){const l=new pr(0);let c=0,h,u,d=null,p=0,f=null;function m(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),c=t,m(l,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,m(l,c)},render:function(e,t){let n=!1,r=!0===t.isScene?t.background:null;r&&r.isTexture&&(r=s.get(r));const i=a.xr;(t=i.getSession&&i.getSession())&&"additive"===t.environmentBlendMode&&(r=null),null===r?m(l,c):r&&r.isColor&&(m(r,1),n=!0),(a.autoClear||n)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),r&&(r.isCubeTexture||r.mapping===C)?(void 0===u&&(u=new qr(new Zr(1,1,1),new Kr({name:"BackgroundCubeMaterial",uniforms:Jr(gi.cube.uniforms),vertexShader:gi.cube.vertexShader,fragmentShader:gi.cube.fragmentShader,side:Re,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(u)),u.material.uniforms.envMap.value=r,u.material.uniforms.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,d===r&&p===r.version&&f===a.toneMapping||(u.material.needsUpdate=!0,d=r,p=r.version,f=a.toneMapping),e.unshift(u,u.geometry,u.material,0,0,null)):r&&r.isTexture&&(void 0===h&&(h=new qr(new pi(2,2),new Kr({name:"BackgroundMaterial",uniforms:Jr(gi.background.uniforms),vertexShader:gi.background.vertexShader,fragmentShader:gi.background.fragmentShader,side:Ae,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(h)),h.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),h.material.uniforms.uvTransform.value.copy(r.matrix),d===r&&p===r.version&&f===a.toneMapping||(h.material.needsUpdate=!0,d=r,p=r.version,f=a.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null))}}}function xi(y,_,b,M){const i=y.getParameter(34921),o=M.isWebGL2?null:_.get("OES_vertex_array_object"),l=M.isWebGL2||null!==o,c={},e=d(null);let h=e;function u(e){return M.isWebGL2?y.bindVertexArray(e):o.bindVertexArrayOES(e)}function a(e){return M.isWebGL2?y.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function d(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function w(){const n=h.newAttributes;for(let e=0,t=n.length;e<t;e++)n[e]=0}function S(e){T(e,0)}function T(e,t){const n=h.newAttributes,r=h.enabledAttributes,i=h.attributeDivisors;if(n[e]=1,0===r[e]&&(y.enableVertexAttribArray(e),r[e]=1),i[e]!==t){const a=M.isWebGL2?y:_.get("ANGLE_instanced_arrays");a[M.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t}}function E(){var n=h.newAttributes;const r=h.enabledAttributes;for(let e=0,t=r.length;e<t;e++)r[e]!==n[e]&&(y.disableVertexAttribArray(e),r[e]=0)}function L(e,t,n,r,i,a){!0!==M.isWebGL2||5124!==n&&5125!==n?y.vertexAttribPointer(e,t,n,r,i,a):y.vertexAttribIPointer(e,t,n,i,a)}function s(){t(),h!==e&&(h=e,u(h.object))}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,n,r,i){let a=!1;var s;l?(s=function(e,t,n){n=!0===n.wireframe;let r=c[e.id];void 0===r&&(r={},c[e.id]=r);let i=r[t.id];void 0===i&&(i={},r[t.id]=i);let a=i[n];void 0===a&&(a=d(M.isWebGL2?y.createVertexArray():o.createVertexArrayOES()),i[n]=a);return a}(r,n,t),h!==s&&(h=s,u(h.object)),a=function(e,t){var n=h.attributes,r=e.attributes;let i=0;for(const o in r){var a=n[o],s=r[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;i++}return h.attributesNum!==i||h.index!==t}(r,i),a&&function(e,t){const n={},r=e.attributes;let i=0;for(const s in r){var a=r[s];const o={};(o.attribute=a).data&&(o.data=a.data),n[s]=o,i++}h.attributes=n,h.attributesNum=i,h.index=t}(r,i)):(s=!0===t.wireframe,h.geometry===r.id&&h.program===n.id&&h.wireframe===s||(h.geometry=r.id,h.program=n.id,h.wireframe=s,a=!0)),!0===e.isInstancedMesh&&(a=!0),null!==i&&b.update(i,34963),a&&(function(e,t,n,r){if(!1===M.isWebGL2&&(e.isInstancedMesh||r.isInstancedBufferGeometry)&&null===_.get("ANGLE_instanced_arrays"))return;w();var i=r.attributes,a=n.getAttributes(),s=t.defaultAttributeValues;for(const x in a){var o=a[x];if(0<=o.location){let t=i[x];if(void 0===t&&("instanceMatrix"===x&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===x&&e.instanceColor&&(t=e.instanceColor)),void 0!==t){var l=t.normalized,c=t.itemSize,h=b.get(t);if(void 0!==h){var u=h.buffer,d=h.type,p=h.bytesPerElement;if(t.isInterleavedBufferAttribute){var f=t.data,m=f.stride,g=t.offset;if(f&&f.isInstancedInterleavedBuffer){for(let e=0;e<o.locationSize;e++)T(o.location+e,f.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=f.meshPerAttribute*f.count)}else for(let e=0;e<o.locationSize;e++)S(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)L(o.location+e,c/o.locationSize,d,l,m*p,(g+c/o.locationSize*e)*p)}else{if(t.isInstancedBufferAttribute){for(let e=0;e<o.locationSize;e++)T(o.location+e,t.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<o.locationSize;e++)S(o.location+e);y.bindBuffer(34962,u);for(let e=0;e<o.locationSize;e++)L(o.location+e,c/o.locationSize,d,l,c*p,c/o.locationSize*e*p)}}}else if(void 0!==s){var v=s[x];if(void 0!==v)switch(v.length){case 2:y.vertexAttrib2fv(o.location,v);break;case 3:y.vertexAttrib3fv(o.location,v);break;case 4:y.vertexAttrib4fv(o.location,v);break;default:y.vertexAttrib1fv(o.location,v)}}}}E()}(e,t,n,r),null!==i&&y.bindBuffer(34963,b.get(i).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in c){const t=c[e];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete c[e]}},releaseStatesOfGeometry:function(e){if(void 0!==c[e.id]){const t=c[e.id];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete c[e.id]}},releaseStatesOfProgram:function(e){for(const t in c){const n=c[t];if(void 0!==n[e.id]){const r=n[e.id];for(const i in r)a(r[i].object),delete r[i];delete n[e.id]}}},initAttributes:w,enableAttribute:S,disableUnusedAttributes:E}}function yi(a,s,o,e){const l=e.isWebGL2;let c;this.setMode=function(e){c=e},this.render=function(e,t){a.drawArrays(c,e,t),o.update(t,c,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,n,r,i),o.update(r,c,i)}}}function _i(t,n,e){let r;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);var l=a||n.has("WEBGL_draw_buffers"),c=!0===e.logarithmicDepthBuffer,h=t.getParameter(34930),u=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),f=t.getParameter(34921),m=t.getParameter(36347),g=t.getParameter(36348),v=t.getParameter(36349),x=0<u,y=a||n.has("OES_texture_float"),o=x&&y,e=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){return void 0!==r||(r=!0===n.has("EXT_texture_filter_anisotropic")?(e=n.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0),r;var e},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:y,floatVertexTextures:o,maxSamples:e}}function bi(t){const o=this;let c=null,h=0,u=!1,d=!1;const l=new oi,p=new Dt,f={value:null,needsUpdate:!1};function m(){f.value!==c&&(f.value=c,f.needsUpdate=0<h),o.numPlanes=h,o.numIntersection=0}function g(n,e,r,t){var i=null!==n?n.length:0;let a=null;if(0!==i){if(a=f.value,!0!==t||null===a){var t=r+4*i,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=r;e!==i;++e,t+=4)l.copy(n[e]).applyMatrix4(s,p),l.normal.toArray(a,t),a[t+3]=l.constant}f.value=a,f.needsUpdate=!0}return o.numPlanes=i,o.numIntersection=0,a}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,n){var r=0!==e.length||t||0!==h||u;return u=t,c=g(e,n,0),h=e.length,r},this.beginShadows=function(){d=!0,g(null)},this.endShadows=function(){d=!1,m()},this.setState=function(e,n,r){var i=e.clippingPlanes,a=e.clipIntersection,s=e.clipShadows;const o=t.get(e);if(!u||null===i||0===i.length||d&&!s)d?g(null):m();else{var s=d?0:h,l=4*s;let t=o.clippingState||null;f.value=t,t=g(i,n,l,r);for(let e=0;e!==l;++e)t[e]=c[e];o.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=s}}}function Mi(i){let a=new WeakMap;function s(e,t){return t===l?e.mapping=M:t===c&&(e.mapping=w),e}function o(e){const t=e.target;t.removeEventListener("dispose",o);const n=a.get(t);void 0!==n&&(a.delete(t),n.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t=e.mapping;if(t===l||t===c){if(a.has(e))return s(a.get(e).texture,e.mapping);var n=e.image;if(n&&0<n.height){t=i.getRenderTarget();const r=new ri(n.height/2);return r.fromEquirectangularTexture(i,e),a.set(e,r),i.setRenderTarget(t),e.addEventListener("dispose",o),s(r.texture,e.mapping)}return null}}return e},dispose:function(){a=new WeakMap}}}gi.physical={uniforms:Yr([gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Pt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new pr(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Pt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new pr(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new pr(1,1,1)},specularColorMap:{value:null}}]),vertexShader:fi.meshphysical_vert,fragmentShader:fi.meshphysical_frag};class wi extends $r{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,s=r+t,o=r-t;null!==this.view&&this.view.enabled&&(r=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom,i+=r*this.view.offsetX,a=i+r*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height),this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}wi.prototype.isOrthographicCamera=!0;class Si extends Kr{constructor(e){super(e),this.type="RawShaderMaterial"}}Si.prototype.isRawShaderMaterial=!0;const Ti=Math.pow(2,8),Ei=[.125,.215,.35,.446,.526,.582],Li=5+Ei.length,Ai={[gt]:0,[vt]:1},Ri=new wi,{_lodPlanes:Ci,_sizeLods:Pi,_sigmas:Di}=Hi(),Ni=new pr;let Ii=null;var zi=(1+Math.sqrt(5))/2,Oi=1/zi;const Ui=[new kt(1,1,1),new kt(-1,1,1),new kt(1,1,-1),new kt(-1,1,-1),new kt(0,zi,Oi),new kt(0,zi,-Oi),new kt(Oi,0,zi),new kt(-Oi,0,zi),new kt(zi,Oi,0),new kt(-zi,Oi,0)];class Fi{constructor(e){var t,n;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,n=new Float32Array(t),e=new kt(0,1,0),e=new Si({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e}},vertexShader:ki(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${ji()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:X,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Ii=this._renderer.getRenderTarget();var i=this._allocateTargets();return this._sceneToCubeUV(e,n,r,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Wi(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Vi(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Ci.length;e++)Ci[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Ii),e.scissorTest=!1,Gi(e,0,0,e.width,e.height)}_fromTexture(e){Ii=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t={magFilter:Se,minFilter:Se,generateMipmaps:!1,type:Ue,format:He,encoding:gt,depthBuffer:!1};const n=Bi(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Bi(t),n}_compileMaterial(e){e=new qr(Ci[0],e);this._renderer.compile(e,Ri)}_sceneToCubeUV(t,e,n,r){const i=new ei(90,1,e,n);var a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1];const o=this._renderer;var l=o.autoClear,e=o.toneMapping;o.getClearColor(Ni),o.toneMapping=Pe,o.autoClear=!1;const c=new fr({name:"PMREM.Background",side:Re,depthWrite:!1,depthTest:!1}),h=new qr(new Zr,c);let u=!1;n=t.background;n?n.isColor&&(c.color.copy(n),t.background=null,u=!0):(c.color.copy(Ni),u=!0);for(let e=0;e<6;e++){var d=e%3;0==d?(i.up.set(0,a[e],0),i.lookAt(s[e],0,0)):1==d?(i.up.set(0,0,a[e]),i.lookAt(0,s[e],0)):(i.up.set(0,a[e],0),i.lookAt(0,0,s[e])),Gi(r,d*Ti,2<e?Ti:0,Ti,Ti),o.setRenderTarget(r),u&&o.render(h,i),o.render(t,i)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=e,o.autoClear=l,t.background=n}_setEncoding(e,t){!0===this._renderer.capabilities.isWebGL2&&t.format===He&&t.type===ze&&t.encoding===vt?e.value=Ai[gt]:e.value=Ai[t.encoding]}_textureToCubeUV(e,t){const n=this._renderer;var r=e.mapping===M||e.mapping===w;r?null==this._cubemapShader&&(this._cubemapShader=Wi()):null==this._equirectShader&&(this._equirectShader=Vi());var i=r?this._cubemapShader:this._equirectShader,a=new qr(Ci[0],i);const s=i.uniforms;s.envMap.value=e,r||s.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(s.inputEncoding,e),Gi(t,0,0,3*Ti,2*Ti),n.setRenderTarget(t),n.render(a,Ri)}_applyPMREM(t){const e=this._renderer;var n=e.autoClear;e.autoClear=!1;for(let e=1;e<Li;e++){var r=Math.sqrt(Di[e]*Di[e]-Di[e-1]*Di[e-1]),i=Ui[(e-1)%Ui.length];this._blur(t,e-1,e,r,i)}e.autoClear=n}_blur(e,t,n,r,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,s){const o=this._renderer;var l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var c=new qr(Ci[r],l);const h=l.uniforms;var l=Pi[n]-1,l=isFinite(i)?Math.PI/(2*l):2*Math.PI/39,u=i/l,d=isFinite(i)?1+Math.floor(3*u):20;20<d&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`);const p=[];let f=0;for(let e=0;e<20;++e){const g=e/u;var m=Math.exp(-g*g/2);p.push(m),0==e?f+=m:e<d&&(f+=2*m)}for(let e=0;e<p.length;e++)p[e]=p[e]/f;h.envMap.value=e.texture,h.samples.value=d,h.weights.value=p,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s),h.dTheta.value=l,h.mipInt.value=8-n;n=Pi[r];const g=3*Math.max(0,Ti-2*n);r=(0===r?0:2*Ti)+2*n*(4<r?r-8+4:0);Gi(t,g,r,3*n,2*n),o.setRenderTarget(t),o.render(c,Ri)}}function Hi(){const n=[],r=[],i=[];let a=8;for(let t=0;t<Li;t++){var s=Math.pow(2,a);r.push(s);let e=1/s;4<t?e=Ei[t-8+4-1]:0==t&&(e=0),i.push(e);var o=1/(s-1),s=-o/2,o=1+o/2,l=[s,s,o,s,o,o,s,s,o,o,s,o];const u=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let e=0;e<6;e++){var c=e%3*2/3-1,h=2<e?0:-1;u.set([c,h,0,c+2/3,h,0,c+2/3,1+h,0,c,h,0,c+2/3,1+h,0,c,1+h,0],18*e),d.set(l,12*e);h=[e,e,e,e,e,e];p.set(h,6*e)}const f=new Ar;f.setAttribute("position",new vr(u,3)),f.setAttribute("uv",new vr(d,2)),f.setAttribute("faceIndex",new vr(p,1)),n.push(f),4<a&&a--}return{_lodPlanes:n,_sizeLods:r,_sigmas:i}}function Bi(e){const t=new Gt(3*Ti,3*Ti,e);return t.texture.mapping=C,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Gi(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function Vi(){var e=new Pt(1,1);return new Si({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Ai[gt]}},vertexShader:ki(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${ji()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:X,depthTest:!1,depthWrite:!1})}function Wi(){return new Si({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Ai[gt]}},vertexShader:ki(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${ji()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,blending:X,depthTest:!1,depthWrite:!1})}function ki(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ji(){return`

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function qi(i){let a=new WeakMap,s=null;function o(e){const t=e.target;t.removeEventListener("dispose",o);const n=a.get(t);void 0!==n&&(a.delete(t),n.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t=e.mapping,n=t===l||t===c,r=t===M||t===w;if(n||r){if(a.has(e))return a.get(e).texture;t=e.image;if(n&&t&&0<t.height||r&&t&&function(t){let n=0;for(let e=0;e<6;e++)void 0!==t[e]&&n++;return 6===n}(t)){t=i.getRenderTarget();null===s&&(s=new Fi(i));n=n?s.fromEquirectangular(e):s.fromCubemap(e);return a.set(e,n),i.setRenderTarget(t),e.addEventListener("dispose",o),n.texture}return null}}return e},dispose:function(){a=new WeakMap,null!==s&&(s.dispose(),s=null)}}}function Xi(n){const r={};function i(e){if(void 0!==r[e])return r[e];let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}return r[e]=t,t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Zi(e,f,r,i){const a={},m=new WeakMap;function s(e){const t=e.target;null!==t.index&&f.remove(t.index);for(const n in t.attributes)f.remove(t.attributes[n]);t.removeEventListener("dispose",s),delete a[t.id];e=m.get(t);e&&(f.remove(e),m.delete(t)),i.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,r.memory.geometries--}function o(e){const n=[];var t=e.index,r=e.attributes.position;let i=0;if(null!==t){var a=t.array;i=t.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];n.push(s,o,o,l,l,s)}}else{var c=r.array;i=r.version;for(let e=0,t=c.length/3-1;e<t;e+=3){var h=e+0,u=e+1,d=e+2;n.push(h,u,u,d,d,h)}}const p=new(65535<Nt(n)?yr:xr)(n,1);p.version=i;c=m.get(e);c&&f.remove(c),m.set(e,p)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",s),a[t.id]=!0,r.memory.geometries++),t},update:function(e){var t=e.attributes;for(const i in t)f.update(t[i],34962);var n=e.morphAttributes;for(const a in n){var r=n[a];for(let e=0,t=r.length;e<t;e++)f.update(r[e],34962)}},getWireframeAttribute:function(e){var t,n=m.get(e);return(!n||null!==(t=e.index)&&n.version<t.version)&&o(e),m.get(e)}}}function Ji(a,s,o,e){const l=e.isWebGL2;let c;let h,u;this.setMode=function(e){c=e},this.setIndex=function(e){h=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(c,t,h,e*u),o.update(t,c,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,r,h,n*u,i),o.update(r,c,i)}}}function Yi(e){const r={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:r,programs:null,autoReset:!0,reset:function(){r.frame++,r.calls=0,r.triangles=0,r.points=0,r.lines=0},update:function(e,t,n){switch(r.calls++,t){case 4:r.triangles+=n*(e/3);break;case 1:r.lines+=n*(e/2);break;case 3:r.lines+=n*(e-1);break;case 2:r.lines+=n*e;break;case 0:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}class Qi extends Ft{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=De,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function Ki(e,t){return e[0]-t[0]}function $i(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ea(e,t){let n=1;t=(t.isInterleavedBufferAttribute?t.data:t).array;t instanceof Int8Array?n=127:t instanceof Int16Array?n=32767:t instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",t),e.divideScalar(n)}function ta(S,T,n){const E={},L=new Float32Array(8),A=new WeakMap,R=new kt,C=[];for(let e=0;e<8;e++)C[e]=[e,0];return{update:function(e,r,t,i){var a=e.morphTargetInfluences;if(!0===T.isWebGL2){var s=r.morphAttributes.position.length;let e=A.get(r);if(void 0===e||e.count!==s){void 0!==e&&e.texture.dispose();var o=void 0!==r.morphAttributes.normal,l=r.morphAttributes.position,c=r.morphAttributes.normal||[],h=!0==o?2:1;let t=r.attributes.position.count*h,n=1;t>T.maxTextureSize&&(n=Math.ceil(t/T.maxTextureSize),t=T.maxTextureSize);const b=new Float32Array(t*n*4*s),M=new Qi(b,t,n,s);M.format=He,M.type=Oe,M.needsUpdate=!0;var u=4*h;for(let e=0;e<s;e++){var d=l[e],p=c[e],f=t*n*4*e;for(let e=0;e<d.count;e++){R.fromBufferAttribute(d,e),!0===d.normalized&&ea(R,d);var m=e*u;b[f+m]=R.x,b[f+m+1]=R.y,b[f+m+2]=R.z,!(b[f+m+3]=0)==o&&(R.fromBufferAttribute(p,e),!0===p.normalized&&ea(R,p),b[f+m+4]=R.x,b[f+m+5]=R.y,b[f+m+6]=R.z,b[f+m+7]=0)}}e={count:s,texture:M,size:new Pt(t,n)},A.set(r,e)}let t=0;for(let e=0;e<a.length;e++)t+=a[e];h=r.morphTargetsRelative?1:1-t;i.getUniforms().setValue(S,"morphTargetBaseInfluence",h),i.getUniforms().setValue(S,"morphTargetInfluences",a),i.getUniforms().setValue(S,"morphTargetsTexture",e.texture,n),i.getUniforms().setValue(S,"morphTargetsTextureSize",e.size)}else{var g=void 0===a?0:a.length;let t=E[r.id];if(void 0===t||t.length!==g){t=[];for(let e=0;e<g;e++)t[e]=[e,0];E[r.id]=t}for(let e=0;e<g;e++){const w=t[e];w[0]=e,w[1]=a[e]}t.sort($i);for(let e=0;e<8;e++)e<g&&t[e][1]?(C[e][0]=t[e][0],C[e][1]=t[e][1]):(C[e][0]=Number.MAX_SAFE_INTEGER,C[e][1]=0);C.sort(Ki);var v=r.morphAttributes.position,x=r.morphAttributes.normal;let n=0;for(let e=0;e<8;e++){var y=C[e],_=y[0],y=y[1];_!==Number.MAX_SAFE_INTEGER&&y?(v&&r.getAttribute("morphTarget"+e)!==v[_]&&r.setAttribute("morphTarget"+e,v[_]),x&&r.getAttribute("morphNormal"+e)!==x[_]&&r.setAttribute("morphNormal"+e,x[_]),L[e]=y,n+=y):(v&&!0===r.hasAttribute("morphTarget"+e)&&r.deleteAttribute("morphTarget"+e),x&&!0===r.hasAttribute("morphNormal"+e)&&r.deleteAttribute("morphNormal"+e),L[e]=0)}h=r.morphTargetsRelative?1:1-n;i.getUniforms().setValue(S,"morphTargetBaseInfluence",h),i.getUniforms().setValue(S,"morphTargetInfluences",L)}}}}function na(e,r,i,a){let s=new WeakMap;function o(e){const t=e.target;t.removeEventListener("dispose",o),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){var t=a.render.frame,n=e.geometry,n=r.get(e,n);return s.get(n)!==t&&(r.update(n),s.set(n,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",o)&&e.addEventListener("dispose",o),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),n},dispose:function(){s=new WeakMap}}}Qi.prototype.isDataTexture2DArray=!0;class ra extends Ft{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=De,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ra.prototype.isDataTexture3D=!0;const ia=new Ft,aa=new Qi,sa=new ra,oa=new ni,la=[],ca=[],ha=new Float32Array(16),ua=new Float32Array(9),da=new Float32Array(4);function pa(n,r,i){const e=n[0];if(e<=0||0<e)return n;var t=r*i;let a=la[t];if(void 0===a&&(a=new Float32Array(t),la[t]=a),0!==r){e.toArray(a,0);for(let e=1,t=0;e!==r;++e)t+=i,n[e].toArray(a,t)}return a}function fa(n,r){if(n.length===r.length){for(let e=0,t=n.length;e<t;e++)if(n[e]!==r[e])return;return 1}}function ma(n,r){for(let e=0,t=r.length;e<t;e++)n[e]=r[e]}function ga(t,n){let r=ca[n];void 0===r&&(r=new Int32Array(n),ca[n]=r);for(let e=0;e!==n;++e)r[e]=t.allocateTextureUnit();return r}function va(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function xa(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y):fa(n,t)||(e.uniform2fv(this.addr,t),ma(n,t))}function ya(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z):void 0!==t.r?n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b):fa(n,t)||(e.uniform3fv(this.addr,t),ma(n,t))}function _a(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w):fa(n,t)||(e.uniform4fv(this.addr,t),ma(n,t))}function ba(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix2fv(this.addr,!1,t),ma(n,t)):fa(n,r)||(da.set(r),e.uniformMatrix2fv(this.addr,!1,da),ma(n,r))}function Ma(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix3fv(this.addr,!1,t),ma(n,t)):fa(n,r)||(ua.set(r),e.uniformMatrix3fv(this.addr,!1,ua),ma(n,r))}function wa(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix4fv(this.addr,!1,t),ma(n,t)):fa(n,r)||(ha.set(r),e.uniformMatrix4fv(this.addr,!1,ha),ma(n,r))}function Sa(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Ta(e,t){var n=this.cache;fa(n,t)||(e.uniform2iv(this.addr,t),ma(n,t))}function Ea(e,t){var n=this.cache;fa(n,t)||(e.uniform3iv(this.addr,t),ma(n,t))}function La(e,t){var n=this.cache;fa(n,t)||(e.uniform4iv(this.addr,t),ma(n,t))}function Aa(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Ra(e,t){var n=this.cache;fa(n,t)||(e.uniform2uiv(this.addr,t),ma(n,t))}function Ca(e,t){var n=this.cache;fa(n,t)||(e.uniform3uiv(this.addr,t),ma(n,t))}function Pa(e,t){var n=this.cache;fa(n,t)||(e.uniform4uiv(this.addr,t),ma(n,t))}function Da(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||ia,i)}function Na(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||sa,i)}function Ia(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||oa,i)}function za(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||aa,i)}function Oa(e,t){e.uniform1fv(this.addr,t)}function Ua(e,t){t=pa(t,this.size,2);e.uniform2fv(this.addr,t)}function Fa(e,t){t=pa(t,this.size,3);e.uniform3fv(this.addr,t)}function Ha(e,t){t=pa(t,this.size,4);e.uniform4fv(this.addr,t)}function Ba(e,t){t=pa(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Ga(e,t){t=pa(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function Va(e,t){t=pa(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Wa(e,t){e.uniform1iv(this.addr,t)}function ka(e,t){e.uniform2iv(this.addr,t)}function ja(e,t){e.uniform3iv(this.addr,t)}function qa(e,t){e.uniform4iv(this.addr,t)}function Xa(e,t){e.uniform1uiv(this.addr,t)}function Za(e,t){e.uniform2uiv(this.addr,t)}function Ja(e,t){e.uniform3uiv(this.addr,t)}function Ya(e,t){e.uniform4uiv(this.addr,t)}function Qa(e,t,n){var r=t.length,i=ga(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||ia,i[e])}function Ka(e,t,n){var r=t.length,i=ga(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture3D(t[e]||sa,i[e])}function $a(e,t,n){var r=t.length,i=ga(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||oa,i[e])}function es(e,t,n){var r=t.length,i=ga(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||aa,i[e])}function ts(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return va;case 35664:return xa;case 35665:return ya;case 35666:return _a;case 35674:return ba;case 35675:return Ma;case 35676:return wa;case 5124:case 35670:return Sa;case 35667:case 35671:return Ta;case 35668:case 35672:return Ea;case 35669:case 35673:return La;case 5125:return Aa;case 36294:return Ra;case 36295:return Ca;case 36296:return Pa;case 35678:case 36198:case 36298:case 36306:case 35682:return Da;case 35679:case 36299:case 36307:return Na;case 35680:case 36300:case 36308:case 36293:return Ia;case 36289:case 36303:case 36311:case 36292:return za}}(t.type)}function ns(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Oa;case 35664:return Ua;case 35665:return Fa;case 35666:return Ha;case 35674:return Ba;case 35675:return Ga;case 35676:return Va;case 5124:case 35670:return Wa;case 35667:case 35671:return ka;case 35668:case 35672:return ja;case 35669:case 35673:return qa;case 5125:return Xa;case 36294:return Za;case 36295:return Ja;case 36296:return Ya;case 35678:case 36198:case 36298:case 36306:case 35682:return Qa;case 35679:case 36299:case 36307:return Ka;case 35680:case 36300:case 36308:case 36293:return $a;case 36289:case 36303:case 36311:case 36292:return es}}(t.type)}function rs(e){this.id=e,this.seq=[],this.map={}}ns.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ma(t,e)},rs.prototype.setValue=function(n,r,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(n,r[s.id],i)}};const is=/(\w+)(\])?(\[|\.)?/g;function as(e,t){e.seq.push(t),e.map[t.id]=t}function ss(t,n){this.seq=[],this.map={};var r=t.getProgramParameter(n,35718);for(let e=0;e<r;++e){var i=t.getActiveUniform(n,e);!function(e,n,r){var i=e.name,a=i.length;for(is.lastIndex=0;;){var s=is.exec(i),o=is.lastIndex;let t=s[1];var l="]"===s[2],s=s[3];if(l&&(t|=0),void 0===s||"["===s&&o+2===a){as(r,new(void 0===s?ts:ns)(t,e,n));break}{let e=r.map[t];void 0===e&&(e=new rs(t),as(r,e)),r=e}}}(i,t.getUniformLocation(n,i.name),this)}}function os(e,t,n){t=e.createShader(t);return e.shaderSource(t,n),e.compileShader(t),t}ss.prototype.setValue=function(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)},ss.prototype.setOptional=function(e,t,n){t=t[n];void 0!==t&&this.setValue(e,n,t)},ss.upload=function(n,r,i,a){for(let e=0,t=r.length;e!==t;++e){const s=r[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(n,o.value,a)}},ss.seqWithValue=function(n,r){const i=[];for(let e=0,t=n.length;e!==t;++e){var a=n[e];a.id in r&&i.push(a)}return i};let ls=0;function cs(e){switch(e){case gt:return["Linear","( value )"];case vt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function hs(e,t,n){var r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();return r&&""===i?"":n.toUpperCase()+"\n\n"+i+"\n\n"+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function us(e,t){t=cs(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function ds(e){return""!==e}function ps(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function fs(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ms=/^[ \t]*#include +<([\w\d./]+)>/gm;function gs(e){return e.replace(ms,vs)}function vs(e,t){var n=fi[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return gs(n)}const xs=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ys=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _s(e){return e.replace(ys,Ms).replace(xs,bs)}function bs(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ms(0,t,n,r)}function Ms(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function ws(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ss(n,e,t,r){const i=n.getContext();var a=t.defines,s=t.vertexShader,o=t.fragmentShader,l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===T?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===E&&(t="SHADOWMAP_TYPE_VSM"),t}(t),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case M:case w:t="ENVMAP_TYPE_CUBE";break;case C:case P:t="ENVMAP_TYPE_CUBE_UV"}return t}(t),h=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case w:case P:t="ENVMAP_MODE_REFRACTION"}return t}(t),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(t);const d=t.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ds).join("\n")}(t),p=function(e){const t=[];for(const r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(a),f=i.createProgram();let m,g,v=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(m=[p].filter(ds).join("\n"),0<m.length&&(m+="\n"),g=[d,p].filter(ds).join("\n"),0<g.length&&(g+="\n")):(m=[ws(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ds).join("\n"),g=[d,ws(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Pe?"#define TONE_MAPPING":"",t.toneMapping!==Pe?fi.tonemapping_pars_fragment:"",t.toneMapping!==Pe?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.format===Fe?"#define OPAQUE":"",fi.encodings_pars_fragment,t.map?us("mapTexelToLinear",t.mapEncoding):"",t.matcap?us("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?us("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?us("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularColorMap?us("specularColorMapTexelToLinear",t.specularColorMapEncoding):"",t.sheenColorMap?us("sheenColorMapTexelToLinear",t.sheenColorMapEncoding):"",t.lightMap?us("lightMapTexelToLinear",t.lightMapEncoding):"",(x="linearToOutputTexel",y=cs(y=t.outputEncoding),"vec4 "+x+"( vec4 value ) { return LinearTo"+y[0]+y[1]+"; }"),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(ds).join("\n")),s=fs(ps(gs(s),t),t),o=fs(ps(gs(o),t),t),s=_s(s),o=_s(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(v="#version 300 es\n",m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,g=["#define varying in",t.glslVersion===_t?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===_t?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);var u=v+m+s,l=v+g+o,x=os(i,35633,u),y=os(i,35632,l);if(i.attachShader(f,x),i.attachShader(f,y),void 0!==t.index0AttributeName?i.bindAttribLocation(f,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),n.debug.checkShaderErrors){s=i.getProgramInfoLog(f).trim(),o=i.getShaderInfoLog(x).trim(),u=i.getShaderInfoLog(y).trim();let e=!0,t=!0;!1===i.getProgramParameter(f,35714)?(e=!1,l=hs(i,x,"vertex"),n=hs(i,y,"fragment"),console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+s+"\n"+l+"\n"+n)):""!==s?console.warn("THREE.WebGLProgram: Program Info Log:",s):""!==o&&""!==u||(t=!1),t&&(this.diagnostics={runnable:e,programLog:s,vertexShader:{log:o,prefix:m},fragmentShader:{log:u,prefix:g}})}i.deleteShader(x),i.deleteShader(y);let _;this.getUniforms=function(){return void 0===_&&(_=new ss(i,f)),_};let b;return this.getAttributes=function(){return void 0===b&&(b=function(n,r){const i={};var e=n.getProgramParameter(r,35721);for(let t=0;t<e;t++){var a=n.getActiveAttrib(r,t),s=a.name;let e=1;35674===a.type&&(e=2),35675===a.type&&(e=3),35676===a.type&&(e=4),i[s]={type:a.type,location:n.getAttribLocation(r,s),locationSize:e}}return i}(i,f)),b},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=ls++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=x,this.fragmentShader=y,this}let Ts=0;class Es{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){var t=e.vertexShader,n=e.fragmentShader;const r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){for(const t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;var n;return!1===t.has(e)&&(n=new Ls,t.set(e,n)),t.get(e)}}class Ls{constructor(){this.id=Ts++,this.usedTimes=0}}function As(m,g,v,x,y,t,_){const a=new Nn,b=new Es,s=[],M=y.isWebGL2,w=y.logarithmicDepthBuffer,S=y.floatVertexTextures,T=y.maxVertexUniforms,E=y.vertexTextures;let L=y.precision;const A={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function R(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):gt,M&&e&&e.isTexture&&e.format===He&&e.type===ze&&e.encoding===vt&&(t=gt),t}return{getParameters:function(e,t,n,r,i){var a=r.fog,s=e.isMeshStandardMaterial?r.environment:null,o=(e.isMeshStandardMaterial?v:g).get(e.envMap||s),r=A[e.type],s=i.isSkinnedMesh?(d=(p=i).skeleton.bones,S?1024:(p=T,p=Math.floor((p-20)/4),(p=Math.min(p,d.length))<d.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+d.length+" bones. This GPU supports "+p+"."),0):p)):0;null!==e.precision&&(L=y.getMaxPrecision(e.precision),L!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",L,"instead."));let l,c,h,u;r?(f=gi[r],l=f.vertexShader,c=f.fragmentShader):(l=e.vertexShader,c=e.fragmentShader,b.update(e),h=b.getVertexShaderID(e),u=b.getFragmentShaderID(e));var d=m.getRenderTarget(),p=0<e.alphaTest,f=0<e.clearcoat;return{isWebGL2:M,shaderID:r,shaderName:e.type,vertexShader:l,fragmentShader:c,defines:e.defines,customVertexShaderID:h,customFragmentShaderID:u,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:L,instancing:!0===i.isInstancedMesh,instancingColor:!0===i.isInstancedMesh&&null!==i.instanceColor,supportsVertexTextures:E,outputEncoding:null!==d?R(d.texture):m.outputEncoding,map:!!e.map,mapEncoding:R(e.map),matcap:!!e.matcap,matcapEncoding:R(e.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:R(o),envMapCubeUV:!!o&&(o.mapping===C||o.mapping===P),lightMap:!!e.lightMap,lightMapEncoding:R(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:R(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===yt,tangentSpaceNormalMap:e.normalMapType===xt,clearcoat:f,clearcoatMap:f&&!!e.clearcoatMap,clearcoatRoughnessMap:f&&!!e.clearcoatRoughnessMap,clearcoatNormalMap:f&&!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,specularIntensityMap:!!e.specularIntensityMap,specularColorMap:!!e.specularColorMap,specularColorMapEncoding:R(e.specularColorMap),alphaMap:!!e.alphaMap,alphaTest:p,gradientMap:!!e.gradientMap,sheen:0<e.sheen,sheenColorMap:!!e.sheenColorMap,sheenColorMapEncoding:R(e.sheenColorMap),sheenRoughnessMap:!!e.sheenRoughnessMap,transmission:0<e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:!!e.normalMap&&!!i.geometry&&!!i.geometry.attributes.tangent,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&!!i.geometry&&!!i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||e.sheenColorMap||e.sheenRoughnessMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||0<e.transmission||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||0<e.sheen||e.sheenColorMap||e.sheenRoughnessMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:w,skinning:!0===i.isSkinnedMesh&&0<s,maxBones:s,useVertexTexture:S,morphTargets:!!i.geometry&&!!i.geometry.morphAttributes.position,morphNormals:!!i.geometry&&!!i.geometry.morphAttributes.normal,morphTargetsCount:i.geometry&&i.geometry.morphAttributes.position?i.geometry.morphAttributes.position.length:0,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:_.numPlanes,numClipIntersection:_.numIntersection,format:e.format,dithering:e.dithering,shadowMapEnabled:m.shadowMap.enabled&&0<n.length,shadowMapType:m.shadowMap.type,toneMapping:e.toneMapped?m.toneMapping:Pe,physicallyCorrectLights:m.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,doubleSided:e.side===Ce,flipSided:e.side===Re,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:M||x.has("EXT_frag_depth"),rendererExtensionDrawBuffers:M||x.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:M||x.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(e){const t=[];if(e.shaderID?t.push(e.shaderID):(t.push(e.customVertexShaderID),t.push(e.customFragmentShaderID)),void 0!==e.defines)for(const i in e.defines)t.push(i),t.push(e.defines[i]);var n,r;return!1===e.isRawShaderMaterial&&(n=t,r=e,n.push(r.precision),n.push(r.outputEncoding),n.push(r.mapEncoding),n.push(r.matcapEncoding),n.push(r.envMapMode),n.push(r.envMapEncoding),n.push(r.lightMapEncoding),n.push(r.emissiveMapEncoding),n.push(r.combine),n.push(r.vertexUvs),n.push(r.fogExp2),n.push(r.sizeAttenuation),n.push(r.maxBones),n.push(r.morphTargetsCount),n.push(r.numDirLights),n.push(r.numPointLights),n.push(r.numSpotLights),n.push(r.numHemiLights),n.push(r.numRectAreaLights),n.push(r.numDirLightShadows),n.push(r.numPointLightShadows),n.push(r.numSpotLightShadows),n.push(r.shadowMapType),n.push(r.toneMapping),n.push(r.numClippingPlanes),n.push(r.numClipIntersection),n.push(r.format),n.push(r.specularColorMapEncoding),n.push(r.sheenColorMapEncoding),function(e,t){a.disableAll(),t.isWebGL2&&a.enable(0);t.supportsVertexTextures&&a.enable(1);t.instancing&&a.enable(2);t.instancingColor&&a.enable(3);t.map&&a.enable(4);t.matcap&&a.enable(5);t.envMap&&a.enable(6);t.envMapCubeUV&&a.enable(7);t.lightMap&&a.enable(8);t.aoMap&&a.enable(9);t.emissiveMap&&a.enable(10);t.bumpMap&&a.enable(11);t.normalMap&&a.enable(12);t.objectSpaceNormalMap&&a.enable(13);t.tangentSpaceNormalMap&&a.enable(14);t.clearcoat&&a.enable(15);t.clearcoatMap&&a.enable(16);t.clearcoatRoughnessMap&&a.enable(17);t.clearcoatNormalMap&&a.enable(18);t.displacementMap&&a.enable(19);t.specularMap&&a.enable(20);t.roughnessMap&&a.enable(21);t.metalnessMap&&a.enable(22);t.gradientMap&&a.enable(23);t.alphaMap&&a.enable(24);t.alphaTest&&a.enable(25);t.vertexColors&&a.enable(26);t.vertexAlphas&&a.enable(27);t.vertexUvs&&a.enable(28);t.vertexTangents&&a.enable(29);t.uvsVertexOnly&&a.enable(30);t.fog&&a.enable(31);e.push(a.mask),a.disableAll(),t.useFog&&a.enable(0);t.flatShading&&a.enable(1);t.logarithmicDepthBuffer&&a.enable(2);t.skinning&&a.enable(3);t.useVertexTexture&&a.enable(4);t.morphTargets&&a.enable(5);t.morphNormals&&a.enable(6);t.premultipliedAlpha&&a.enable(7);t.shadowMapEnabled&&a.enable(8);t.physicallyCorrectLights&&a.enable(9);t.doubleSided&&a.enable(10);t.flipSided&&a.enable(11);t.depthPacking&&a.enable(12);t.dithering&&a.enable(13);t.specularIntensityMap&&a.enable(14);t.specularColorMap&&a.enable(15);t.transmission&&a.enable(16);t.transmissionMap&&a.enable(17);t.thicknessMap&&a.enable(18);t.sheen&&a.enable(19);t.sheenColorMap&&a.enable(20);t.sheenRoughnessMap&&a.enable(21);e.push(a.mask)}(t,e),t.push(m.outputEncoding)),t.push(e.customProgramCacheKey),t.join()},getUniforms:function(e){var t=A[e.type];let n;return n=t?(t=gi[t],Qr.clone(t.uniforms)):e.uniforms,n},acquireProgram:function(e,n){let r;for(let e=0,t=s.length;e<t;e++){var i=s[e];if(i.cacheKey===n){r=i,++r.usedTimes;break}}return void 0===r&&(r=new Ss(m,n,e,t),s.push(r)),r},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=s.indexOf(e),s[t]=s[s.length-1],s.pop(),e.destroy())},releaseShaderCache:function(e){b.remove(e)},programs:s,dispose:function(){b.dispose()}}}function Rs(){let r=new WeakMap;return{get:function(e){let t=r.get(e);return void 0===t&&(t={},r.set(e,t)),t},remove:function(e){r.delete(e)},update:function(e,t,n){r.get(e)[t]=n},dispose:function(){r=new WeakMap}}}function Cs(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ps(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ds(){const o=[];let l=0;const s=[],c=[],h=[];function u(e,t,n,r,i,a){let s=o[l];return void 0===s?(s={id:e.id,object:e,geometry:t,material:n,groupOrder:r,renderOrder:e.renderOrder,z:i,group:a},o[l]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.groupOrder=r,s.renderOrder=e.renderOrder,s.z=i,s.group=a),l++,s}return{opaque:s,transmissive:c,transparent:h,init:function(){l=0,s.length=0,c.length=0,h.length=0},push:function(e,t,n,r,i,a){a=u(e,t,n,r,i,a),(0<n.transmission?c:!0===n.transparent?h:s).push(a)},unshift:function(e,t,n,r,i,a){a=u(e,t,n,r,i,a),(0<n.transmission?c:!0===n.transparent?h:s).unshift(a)},finish:function(){for(let e=l,t=o.length;e<t;e++){const n=o[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.group=null}},sort:function(e,t){1<s.length&&s.sort(e||Cs),1<c.length&&c.sort(t||Ps),1<h.length&&h.sort(t||Ps)}}}function Ns(){let r=new WeakMap;return{get:function(e,t){let n;return!1===r.has(e)?(n=new Ds,r.set(e,[n])):t>=r.get(e).length?(n=new Ds,r.get(e).push(n)):n=r.get(e)[t],n},dispose:function(){r=new WeakMap}}}function Is(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new kt,color:new pr};break;case"SpotLight":t={position:new kt,direction:new kt,color:new pr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new kt,color:new pr,distance:0,decay:0};break;case"HemisphereLight":t={direction:new kt,skyColor:new pr,groundColor:new pr};break;case"RectAreaLight":t={color:new pr,position:new kt,halfWidth:new kt,halfHeight:new kt}}return n[e.id]=t,t}}}let zs=0;function Os(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Us(R,C){const P=new Is,D=function(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}}(),N={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)N.probe.push(new kt);const m=new kt,g=new Mn,v=new Mn;return{setup:function(n,e){let r=0,i=0,a=0;for(let e=0;e<9;e++)N.probe[e].set(0,0,0);let s=0,o=0,l=0,c=0,h=0,u=0,d=0,p=0;n.sort(Os);var f=!0!==e?Math.PI:1;for(let e=0,t=n.length;e<t;e++){var m=n[e],g=m.color,v=m.intensity,x=m.distance,y=m.shadow&&m.shadow.map?m.shadow.map.texture:null;if(m.isAmbientLight)r+=g.r*v*f,i+=g.g*v*f,a+=g.b*v*f;else if(m.isLightProbe)for(let e=0;e<9;e++)N.probe[e].addScaledVector(m.sh.coefficients[e],v);else if(m.isDirectionalLight){const b=P.get(m);if(b.color.copy(m.color).multiplyScalar(m.intensity*f),m.castShadow){var _=m.shadow;const M=D.get(m);M.shadowBias=_.bias,M.shadowNormalBias=_.normalBias,M.shadowRadius=_.radius,M.shadowMapSize=_.mapSize,N.directionalShadow[s]=M,N.directionalShadowMap[s]=y,N.directionalShadowMatrix[s]=m.shadow.matrix,u++}N.directional[s]=b,s++}else if(m.isSpotLight){const w=P.get(m);if(w.position.setFromMatrixPosition(m.matrixWorld),w.color.copy(g).multiplyScalar(v*f),w.distance=x,w.coneCos=Math.cos(m.angle),w.penumbraCos=Math.cos(m.angle*(1-m.penumbra)),w.decay=m.decay,m.castShadow){x=m.shadow;const S=D.get(m);S.shadowBias=x.bias,S.shadowNormalBias=x.normalBias,S.shadowRadius=x.radius,S.shadowMapSize=x.mapSize,N.spotShadow[l]=S,N.spotShadowMap[l]=y,N.spotShadowMatrix[l]=m.shadow.matrix,p++}N.spot[l]=w,l++}else if(m.isRectAreaLight){const T=P.get(m);T.color.copy(g).multiplyScalar(v),T.halfWidth.set(.5*m.width,0,0),T.halfHeight.set(0,.5*m.height,0),N.rectArea[c]=T,c++}else if(m.isPointLight){const E=P.get(m);if(E.color.copy(m.color).multiplyScalar(m.intensity*f),E.distance=m.distance,E.decay=m.decay,m.castShadow){g=m.shadow;const L=D.get(m);L.shadowBias=g.bias,L.shadowNormalBias=g.normalBias,L.shadowRadius=g.radius,L.shadowMapSize=g.mapSize,L.shadowCameraNear=g.camera.near,L.shadowCameraFar=g.camera.far,N.pointShadow[o]=L,N.pointShadowMap[o]=y,N.pointShadowMatrix[o]=m.shadow.matrix,d++}N.point[o]=E,o++}else if(m.isHemisphereLight){const A=P.get(m);A.skyColor.copy(m.color).multiplyScalar(v*f),A.groundColor.copy(m.groundColor).multiplyScalar(v*f),N.hemi[h]=A,h++}}0<c&&(C.isWebGL2||!0===R.has("OES_texture_float_linear")?(N.rectAreaLTC1=mi.LTC_FLOAT_1,N.rectAreaLTC2=mi.LTC_FLOAT_2):!0===R.has("OES_texture_half_float_linear")?(N.rectAreaLTC1=mi.LTC_HALF_1,N.rectAreaLTC2=mi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),N.ambient[0]=r,N.ambient[1]=i,N.ambient[2]=a;const t=N.hash;t.directionalLength===s&&t.pointLength===o&&t.spotLength===l&&t.rectAreaLength===c&&t.hemiLength===h&&t.numDirectionalShadows===u&&t.numPointShadows===d&&t.numSpotShadows===p||(N.directional.length=s,N.spot.length=l,N.rectArea.length=c,N.point.length=o,N.hemi.length=h,N.directionalShadow.length=u,N.directionalShadowMap.length=u,N.pointShadow.length=d,N.pointShadowMap.length=d,N.spotShadow.length=p,N.spotShadowMap.length=p,N.directionalShadowMatrix.length=u,N.pointShadowMatrix.length=d,N.spotShadowMatrix.length=p,t.directionalLength=s,t.pointLength=o,t.spotLength=l,t.rectAreaLength=c,t.hemiLength=h,t.numDirectionalShadows=u,t.numPointShadows=d,t.numSpotShadows=p,N.version=zs++)},setupView:function(n,e){let r=0,i=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){var c=n[e];if(c.isDirectionalLight){const h=N.directional[r];h.direction.setFromMatrixPosition(c.matrixWorld),m.setFromMatrixPosition(c.target.matrixWorld),h.direction.sub(m),h.direction.transformDirection(l),r++}else if(c.isSpotLight){const u=N.spot[a];u.position.setFromMatrixPosition(c.matrixWorld),u.position.applyMatrix4(l),u.direction.setFromMatrixPosition(c.matrixWorld),m.setFromMatrixPosition(c.target.matrixWorld),u.direction.sub(m),u.direction.transformDirection(l),a++}else if(c.isRectAreaLight){const d=N.rectArea[s];d.position.setFromMatrixPosition(c.matrixWorld),d.position.applyMatrix4(l),v.identity(),g.copy(c.matrixWorld),g.premultiply(l),v.extractRotation(g),d.halfWidth.set(.5*c.width,0,0),d.halfHeight.set(0,.5*c.height,0),d.halfWidth.applyMatrix4(v),d.halfHeight.applyMatrix4(v),s++}else if(c.isPointLight){const p=N.point[i];p.position.setFromMatrixPosition(c.matrixWorld),p.position.applyMatrix4(l),i++}else if(c.isHemisphereLight){const f=N.hemi[o];f.direction.setFromMatrixPosition(c.matrixWorld),f.direction.transformDirection(l),f.direction.normalize(),o++}}},state:N}}function Fs(e,t){const n=new Us(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Hs(r,i){let a=new WeakMap;return{get:function(e,t=0){let n;return!1===a.has(e)?(n=new Fs(r,i),a.set(e,[n])):t>=a.get(e).length?(n=new Fs(r,i),a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}class Bs extends sr{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Bs.prototype.isMeshDepthMaterial=!0;class Gs extends sr{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new kt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Gs.prototype.isMeshDistanceMaterial=!0;const Vs="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",Ws="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function ks(m,g,e){let v=new hi;const p=new Pt,f=new Pt,x=new Bt,c=new Bs({depthPacking:n}),h=new Gs,u={},y=e.maxTextureSize,d={0:Re,1:Ae,2:Ce},_=new Kr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Pt},radius:{value:4}},vertexShader:Vs,fragmentShader:Ws}),b=_.clone();b.defines.HORIZONTAL_PASS=1;const t=new Ar;t.setAttribute("position",new vr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new qr(t,_),w=this;function S(n,e,r,t,i,a,s){let o=null;var l=!0===t.isPointLight?n.customDistanceMaterial:n.customDepthMaterial;if(o=void 0!==l?l:!0===t.isPointLight?h:c,m.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&0<r.alphaTest){n=o.uuid,l=r.uuid;let e=u[n];void 0===e&&(e={},u[n]=e);let t=e[l];void 0===t&&(t=o.clone(),e[l]=t),o=t}return o.visible=r.visible,o.wireframe=r.wireframe,s===E?o.side=null!==r.shadowSide?r.shadowSide:r.side:o.side=null!==r.shadowSide?r.shadowSide:d[r.side],o.alphaMap=r.alphaMap,o.alphaTest=r.alphaTest,o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.clipIntersection=r.clipIntersection,o.displacementMap=r.displacementMap,o.displacementScale=r.displacementScale,o.displacementBias=r.displacementBias,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,!0===t.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(t.matrixWorld),o.nearDistance=i,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=T,this.render=function(n,r,i){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)&&0!==n.length){var e=m.getRenderTarget(),t=m.getActiveCubeFace(),a=m.getActiveMipmapLevel();const u=m.state;u.setBlending(X),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);for(let e=0,t=n.length;e<t;e++){var s=n[e];const d=s.shadow;if(void 0!==d){if(!1!==d.autoUpdate||!1!==d.needsUpdate){p.copy(d.mapSize);var o,l=d.getFrameExtents();p.multiply(l),f.copy(d.mapSize),(p.x>y||p.y>y)&&(p.x>y&&(f.x=Math.floor(y/l.x),p.x=f.x*l.x,d.mapSize.x=f.x),p.y>y&&(f.y=Math.floor(y/l.y),p.y=f.y*l.y,d.mapSize.y=f.y)),null!==d.map||d.isPointLightShadow||this.type!==E||(o={minFilter:Se,magFilter:Se,format:He},d.map=new Gt(p.x,p.y,o),d.map.texture.name=s.name+".shadowMap",d.mapPass=new Gt(p.x,p.y,o),d.camera.updateProjectionMatrix()),null===d.map&&(o={minFilter:Ne,magFilter:Ne,format:He},d.map=new Gt(p.x,p.y,o),d.map.texture.name=s.name+".shadowMap",d.camera.updateProjectionMatrix()),m.setRenderTarget(d.map),m.clear();var c=d.getViewportCount();for(let e=0;e<c;e++){var h=d.getViewport(e);x.set(f.x*h.x,f.y*h.y,f.x*h.z,f.y*h.w),u.viewport(x),d.updateMatrices(s,e),v=d.getFrustum(),function n(r,i,a,s,o){if(!1===r.visible)return;const e=r.layers.test(i.layers);if(e&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&o===E)&&(!r.frustumCulled||v.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);const c=g.update(r),h=r.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];if(p&&p.visible){const f=S(r,c,p,s,a.near,a.far,o);m.renderBufferDirect(a,null,c,f,r,d)}}}else if(h.visible){const t=S(r,c,h,s,a.near,a.far,o);m.renderBufferDirect(a,null,c,t,r,null)}}const l=r.children;for(let e=0,t=l.length;e<t;e++)n(l[e],i,a,s,o)}(r,i,d.camera,s,this.type)}d.isPointLightShadow||this.type!==E||function(e,t){var n=g.update(M);_.defines.VSM_SAMPLES!==e.blurSamples&&(_.defines.VSM_SAMPLES=e.blurSamples,b.defines.VSM_SAMPLES=e.blurSamples,_.needsUpdate=!0,b.needsUpdate=!0);_.uniforms.shadow_pass.value=e.map.texture,_.uniforms.resolution.value=e.mapSize,_.uniforms.radius.value=e.radius,m.setRenderTarget(e.mapPass),m.clear(),m.renderBufferDirect(t,null,n,_,M,null),b.uniforms.shadow_pass.value=e.mapPass.texture,b.uniforms.resolution.value=e.mapSize,b.uniforms.radius.value=e.radius,m.setRenderTarget(e.map),m.clear(),m.renderBufferDirect(t,null,n,b,M,null)}(d,i),d.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",s,"has no shadow.")}w.needsUpdate=!1,m.setRenderTarget(e,t,a)}}}function js(h,e,t){const n=t.isWebGL2;const r=new function(){let t=!1;const a=new Bt;let n=null;const s=new Bt(0,0,0,0);return{setMask:function(e){n===e||t||(h.colorMask(e,e,e,e),n=e)},setLocked:function(e){t=e},setClear:function(e,t,n,r,i){!0===i&&(e*=r,t*=r,n*=r),a.set(e,t,n,r),!1===s.equals(a)&&(h.clearColor(e,t,n,r),s.copy(a))},reset:function(){t=!1,n=null,s.set(-1,0,0,0)}}},i=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){(e?z:O)(2929)},setMask:function(e){n===e||t||(h.depthMask(e),n=e)},setFunc:function(e){if(r!==e){if(e)switch(e){case me:h.depthFunc(512);break;case ge:h.depthFunc(519);break;case ve:h.depthFunc(513);break;case xe:h.depthFunc(515);break;case ye:h.depthFunc(514);break;case _e:h.depthFunc(518);break;case be:h.depthFunc(516);break;case Me:h.depthFunc(517);break;default:h.depthFunc(515)}else h.depthFunc(515);r=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(h.clearDepth(e),i=e)},reset:function(){t=!1,n=null,r=null,i=null}}},a=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(e){t||(e?z:O)(2960)},setMask:function(e){n===e||t||(h.stencilMask(e),n=e)},setFunc:function(e,t,n){r===e&&i===t&&a===n||(h.stencilFunc(e,t,n),r=e,i=t,a=n)},setOp:function(e,t,n){s===e&&o===t&&l===n||(h.stencilOp(e,t,n),s=e,o=t,l=n)},setLocked:function(e){t=e},setClear:function(e){c!==e&&(h.clearStencil(e),c=e)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null}}};let s={},o={},l=null,c=!1,u=null,d=null,p=null,f=null,m=null,g=null,v=null,x=!1,y=null,_=null,b=null,M=null,w=null;const S=h.getParameter(35661);let T=!1,E=0;const L=h.getParameter(7938);-1!==L.indexOf("WebGL")?(E=parseFloat(/^WebGL (\d)/.exec(L)[1]),T=1<=E):-1!==L.indexOf("OpenGL ES")&&(E=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),T=2<=E);let A=null,R={};var C=h.getParameter(3088),t=h.getParameter(2978);const P=(new Bt).fromArray(C),D=(new Bt).fromArray(t);function N(e,t,n){var r=new Uint8Array(4),i=h.createTexture();h.bindTexture(e,i),h.texParameteri(e,10241,9728),h.texParameteri(e,10240,9728);for(let e=0;e<n;e++)h.texImage2D(t+e,0,6408,1,1,0,6408,5121,r);return i}const I={};function z(e){!0!==s[e]&&(h.enable(e),s[e]=!0)}function O(e){!1!==s[e]&&(h.disable(e),s[e]=!1)}I[3553]=N(3553,3553,1),I[34067]=N(34067,34069,6),r.setClear(0,0,0,1),i.setClear(1),a.setClear(0),z(2929),i.setFunc(xe),B(!1),G(j),z(2884),H(X);const U={[$]:32774,[ee]:32778,[te]:32779};n?(U[ne]=32775,U[re]=32776):null!==(e=e.get("EXT_blend_minmax"))&&(U[ne]=e.MIN_EXT,U[re]=e.MAX_EXT);const F={[ie]:0,[ae]:1,[se]:768,[le]:770,[fe]:776,[de]:774,[he]:772,[oe]:769,[ce]:771,[pe]:775,[ue]:773};function H(e,t,n,r,i,a,s,o){if(e!==X){if(!1===c&&(z(3042),c=!0),e===K)i=i||t,a=a||n,s=s||r,t===d&&i===m||(h.blendEquationSeparate(U[t],U[i]),d=t,m=i),n===p&&r===f&&a===g&&s===v||(h.blendFuncSeparate(F[n],F[r],F[a],F[s]),p=n,f=r,g=a,v=s),u=e,x=null;else if(e!==u||o!==x){if(d===$&&m===$||(h.blendEquation(32774),d=$,m=$),o)switch(e){case Z:h.blendFuncSeparate(1,771,1,771);break;case J:h.blendFunc(1,1);break;case Y:h.blendFuncSeparate(0,0,769,771);break;case Q:h.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case Z:h.blendFuncSeparate(770,771,1,771);break;case J:h.blendFunc(770,1);break;case Y:h.blendFunc(0,769);break;case Q:h.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}p=null,f=null,g=null,v=null,u=e,x=o}}else!0===c&&(O(3042),c=!1)}function B(e){y!==e&&(e?h.frontFace(2304):h.frontFace(2305),y=e)}function G(e){e!==k?(z(2884),e!==_&&(e===j?h.cullFace(1029):e===q?h.cullFace(1028):h.cullFace(1032))):O(2884),_=e}function V(e,t,n){e?(z(32823),M===t&&w===n||(h.polygonOffset(t,n),M=t,w=n)):O(32823)}function W(e){void 0===e&&(e=33984+S-1),A!==e&&(h.activeTexture(e),A=e)}return{buffers:{color:r,depth:i,stencil:a},enable:z,disable:O,bindFramebuffer:function(e,t){return o[e]!==t&&(h.bindFramebuffer(e,t),o[e]=t,n&&(36009===e&&(o[36160]=t),36160===e&&(o[36009]=t)),!0)},useProgram:function(e){return l!==e&&(h.useProgram(e),l=e,!0)},setBlending:H,setMaterial:function(e,t){(e.side===Ce?O:z)(2884);let n=e.side===Re;t&&(n=!n),B(n),e.blending===Z&&!1===e.transparent?H(X):H(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),r.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),V(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?z:O)(32926)},setFlipSided:B,setCullFace:G,setLineWidth:function(e){e!==b&&(T&&h.lineWidth(e),b=e)},setPolygonOffset:V,setScissorTest:function(e){(e?z:O)(3089)},activeTexture:W,bindTexture:function(e,t){null===A&&W();let n=R[A];void 0===n&&(n={type:void 0,texture:void 0},R[A]=n),n.type===e&&n.texture===t||(h.bindTexture(e,t||I[e]),n.type=e,n.texture=t)},unbindTexture:function(){const e=R[A];void 0!==e&&void 0!==e.type&&(h.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{h.texStorage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{h.texStorage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{h.texSubImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{h.texSubImage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{h.compressedTexSubImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===P.equals(e)&&(h.scissor(e.x,e.y,e.z,e.w),P.copy(e))},viewport:function(e){!1===D.equals(e)&&(h.viewport(e.x,e.y,e.z,e.w),D.copy(e))},reset:function(){h.disable(3042),h.disable(2884),h.disable(2929),h.disable(32823),h.disable(3089),h.disable(2960),h.disable(32926),h.blendEquation(32774),h.blendFunc(1,0),h.blendFuncSeparate(1,0,1,0),h.colorMask(!0,!0,!0,!0),h.clearColor(0,0,0,0),h.depthMask(!0),h.depthFunc(513),h.clearDepth(1),h.stencilMask(4294967295),h.stencilFunc(519,0,4294967295),h.stencilOp(7680,7680,7680),h.clearStencil(0),h.cullFace(1029),h.frontFace(2305),h.polygonOffset(0,0),h.activeTexture(33984),h.bindFramebuffer(36160,null),!0===n&&(h.bindFramebuffer(36009,null),h.bindFramebuffer(36008,null)),h.useProgram(null),h.lineWidth(1),h.scissor(0,0,h.canvas.width,h.canvas.height),h.viewport(0,0,h.canvas.width,h.canvas.height),s={},A=null,R={},o={},l=null,c=!1,u=null,d=null,p=null,f=null,m=null,g=null,v=null,x=!1,y=null,_=null,b=null,M=null,w=null,P.set(0,0,h.canvas.width,h.canvas.height),D.set(0,0,h.canvas.width,h.canvas.height),r.reset(),i.reset(),a.reset()}}}function qs(v,a,x,m,g,y,_){const b=g.isWebGL2,t=g.maxTextures,M=g.maxCubemapSize,p=g.maxTextureSize,n=g.maxSamples;const l=a.has("WEBGL_multisampled_render_to_texture")?a.get("WEBGL_multisampled_render_to_texture"):void 0,s=new WeakMap;let c,r=!1;try{r="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function h(e,t){return r?new OffscreenCanvas(e,t):It("canvas")}function w(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Ct:Math.floor;r=a(i*e.width),t=a(i*e.height);void 0===c&&(c=h(r,t));const s=n?h(r,t):c;s.width=r,s.height=t;const o=s.getContext("2d");return o.drawImage(e,0,0,r,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+r+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function S(e){return Rt(e.width)&&Rt(e.height)}function T(e,t){return e.generateMipmaps&&t&&e.minFilter!==Ne&&e.minFilter!==Se}function E(e){v.generateMipmap(e)}function L(e,t,n,r){if(!1===b)return t;if(null!==e){if(void 0!==v[e])return v[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let i=t;return 6403===t&&(5126===n&&(i=33326),5131===n&&(i=33325),5121===n&&(i=33321)),6407===t&&(5126===n&&(i=34837),5131===n&&(i=34843),5121===n&&(i=32849)),6408===t&&(5126===n&&(i=34836),5131===n&&(i=34842),5121===n&&(i=r===vt?35907:32856)),33325!==i&&33326!==i&&34842!==i&&34836!==i||a.get("EXT_color_buffer_float"),i}function A(e,t,n){return!0===T(e,n)||e.isFramebufferTexture&&e.minFilter!==Ne&&e.minFilter!==Se?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&0<e.mipmaps.length?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function i(e){return e===Ne||e===W||e===we?9728:9729}function o(e){const t=e.target;var n;t.removeEventListener("dispose",o),n=t,void 0!==(e=m.get(n)).__webglInit&&(v.deleteTexture(e.__webglTexture),m.remove(n)),t.isVideoTexture&&s.delete(t),_.memory.textures--}function R(e){const t=e.target;t.removeEventListener("dispose",R),function(e){var n=e.texture,t=m.get(e),r=m.get(n);if(e){if(void 0!==r.__webglTexture&&(v.deleteTexture(r.__webglTexture),_.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)v.deleteFramebuffer(t.__webglFramebuffer[e]),t.__webglDepthbuffer&&v.deleteRenderbuffer(t.__webglDepthbuffer[e]);else v.deleteFramebuffer(t.__webglFramebuffer),t.__webglDepthbuffer&&v.deleteRenderbuffer(t.__webglDepthbuffer),t.__webglMultisampledFramebuffer&&v.deleteFramebuffer(t.__webglMultisampledFramebuffer),t.__webglColorRenderbuffer&&v.deleteRenderbuffer(t.__webglColorRenderbuffer),t.__webglDepthRenderbuffer&&v.deleteRenderbuffer(t.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,t=n.length;e<t;e++){var i=m.get(n[e]);i.__webglTexture&&(v.deleteTexture(i.__webglTexture),_.memory.textures--),m.remove(n[e])}m.remove(n),m.remove(e)}}(t)}let u=0;function d(e,t){var n,r=m.get(e);if(e.isVideoTexture&&(i=e,n=_.render.frame,s.get(i)!==n&&(s.set(i,n),i.update())),0<e.version&&r.__version!==e.version){var i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void I(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}x.activeTexture(33984+t),x.bindTexture(3553,r.__webglTexture)}function f(e,t){var n=m.get(e);0<e.version&&n.__version!==e.version?function(t,r,i){if(6===r.image.length){N(t,r),x.activeTexture(33984+i),x.bindTexture(34067,t.__webglTexture),v.pixelStorei(37440,r.flipY),v.pixelStorei(37441,r.premultiplyAlpha),v.pixelStorei(3317,r.unpackAlignment),v.pixelStorei(37443,0);var a=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),s=r.image[0]&&r.image[0].isDataTexture;const g=[];for(let e=0;e<6;e++)g[e]=a||s?s?r.image[e].image:r.image[e]:w(r.image[e],!1,!0,M);var o=g[0],l=S(o)||b,c=y.convert(r.format),h=y.convert(r.type),u=L(r.internalFormat,c,h,r.encoding),d=b&&!0!==r.isVideoTexture,i=void 0===t.__version;let e=A(r,o,l);D(34067,r,l);let n;if(a){d&&i&&x.texStorage2D(34067,e,u,o.width,o.height);for(let t=0;t<6;t++){n=g[t].mipmaps;for(let e=0;e<n.length;e++){var p=n[e];r.format!==He&&r.format!==Fe?null!==c?d?x.compressedTexSubImage2D(34069+t,e,0,0,p.width,p.height,c,p.data):x.compressedTexImage2D(34069+t,e,u,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):d?x.texSubImage2D(34069+t,e,0,0,p.width,p.height,c,h,p.data):x.texImage2D(34069+t,e,u,p.width,p.height,0,c,h,p.data)}}}else{n=r.mipmaps,d&&i&&(0<n.length&&e++,x.texStorage2D(34067,e,u,g[0].width,g[0].height));for(let t=0;t<6;t++)if(s){d?x.texSubImage2D(34069+t,0,0,0,g[t].width,g[t].height,c,h,g[t].data):x.texImage2D(34069+t,0,u,g[t].width,g[t].height,0,c,h,g[t].data);for(let e=0;e<n.length;e++){var f=n[e].image[t].image;d?x.texSubImage2D(34069+t,e+1,0,0,f.width,f.height,c,h,f.data):x.texImage2D(34069+t,e+1,u,f.width,f.height,0,c,h,f.data)}}else{d?x.texSubImage2D(34069+t,0,0,0,c,h,g[t]):x.texImage2D(34069+t,0,u,c,h,g[t]);for(let e=0;e<n.length;e++){var m=n[e];d?x.texSubImage2D(34069+t,e+1,0,0,c,h,m.image[t]):x.texImage2D(34069+t,e+1,u,c,h,m.image[t])}}}T(r,l)&&E(34067),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}}(n,e,t):(x.activeTexture(33984+t),x.bindTexture(34067,n.__webglTexture))}const C={[G]:10497,[De]:33071,[V]:33648},P={[Ne]:9728,[W]:9984,[we]:9986,[Se]:9729,[e]:9985,[Ie]:9987};function D(e,t,n){n?(v.texParameteri(e,10242,C[t.wrapS]),v.texParameteri(e,10243,C[t.wrapT]),32879!==e&&35866!==e||v.texParameteri(e,32882,C[t.wrapR]),v.texParameteri(e,10240,P[t.magFilter]),v.texParameteri(e,10241,P[t.minFilter])):(v.texParameteri(e,10242,33071),v.texParameteri(e,10243,33071),32879!==e&&35866!==e||v.texParameteri(e,32882,33071),t.wrapS===De&&t.wrapT===De||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),v.texParameteri(e,10240,i(t.magFilter)),v.texParameteri(e,10241,i(t.minFilter)),t.minFilter!==Ne&&t.minFilter!==Se&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===a.has("EXT_texture_filter_anisotropic")&&(n=a.get("EXT_texture_filter_anisotropic"),t.type===Oe&&!1===a.has("OES_texture_float_linear")||!1===b&&t.type===Ue&&!1===a.has("OES_texture_half_float_linear")||(1<t.anisotropy||m.get(t).__currentAnisotropy)&&(v.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,g.getMaxAnisotropy())),m.get(t).__currentAnisotropy=t.anisotropy))}function N(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",o),e.__webglTexture=v.createTexture(),_.memory.textures++)}function I(e,n,t){let r=3553;n.isDataTexture2DArray&&(r=35866),n.isDataTexture3D&&(r=32879),N(e,n),x.activeTexture(33984+t),x.bindTexture(r,e.__webglTexture),v.pixelStorei(37440,n.flipY),v.pixelStorei(37441,n.premultiplyAlpha),v.pixelStorei(3317,n.unpackAlignment),v.pixelStorei(37443,0);var i=(d=n,!b&&(d.wrapS!==De||d.wrapT!==De||d.minFilter!==Ne&&d.minFilter!==Se)&&!1===S(n.image)),a=w(n.image,i,!1,p),t=S(a)||b,s=y.convert(n.format);let o=y.convert(n.type),l=L(n.internalFormat,s,o,n.encoding);D(r,n,t);let c;var h=n.mipmaps,u=b&&!0!==n.isVideoTexture,d=void 0===e.__version,i=A(n,a,t);if(n.isDepthTexture)l=6402,b?l=n.type===Oe?36012:n.type===Ee?33190:n.type===Le?35056:33189:n.type===Oe&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===Be&&6402===l&&n.type!==Te&&n.type!==Ee&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Te,o=y.convert(n.type)),n.format===Ge&&6402===l&&(l=34041,n.type!==Le&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Le,o=y.convert(n.type))),u&&d?x.texStorage2D(3553,1,l,a.width,a.height):x.texImage2D(3553,0,l,a.width,a.height,0,s,o,null);else if(n.isDataTexture)if(0<h.length&&t){u&&d&&x.texStorage2D(3553,i,l,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)c=h[e],u?x.texSubImage2D(3553,0,0,0,c.width,c.height,s,o,c.data):x.texImage2D(3553,e,l,c.width,c.height,0,s,o,c.data);n.generateMipmaps=!1}else u?(d&&x.texStorage2D(3553,i,l,a.width,a.height),x.texSubImage2D(3553,0,0,0,a.width,a.height,s,o,a.data)):x.texImage2D(3553,0,l,a.width,a.height,0,s,o,a.data);else if(n.isCompressedTexture){u&&d&&x.texStorage2D(3553,i,l,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)c=h[e],n.format!==He&&n.format!==Fe?null!==s?u?x.compressedTexSubImage2D(3553,e,0,0,c.width,c.height,s,c.data):x.compressedTexImage2D(3553,e,l,c.width,c.height,0,c.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):u?x.texSubImage2D(3553,e,0,0,c.width,c.height,s,o,c.data):x.texImage2D(3553,e,l,c.width,c.height,0,s,o,c.data)}else if(n.isDataTexture2DArray)u?(d&&x.texStorage3D(35866,i,l,a.width,a.height,a.depth),x.texSubImage3D(35866,0,0,0,0,a.width,a.height,a.depth,s,o,a.data)):x.texImage3D(35866,0,l,a.width,a.height,a.depth,0,s,o,a.data);else if(n.isDataTexture3D)u?(d&&x.texStorage3D(32879,i,l,a.width,a.height,a.depth),x.texSubImage3D(32879,0,0,0,0,a.width,a.height,a.depth,s,o,a.data)):x.texImage3D(32879,0,l,a.width,a.height,a.depth,0,s,o,a.data);else if(n.isFramebufferTexture)u&&d?x.texStorage2D(3553,i,l,a.width,a.height):x.texImage2D(3553,0,l,a.width,a.height,0,s,o,null);else if(0<h.length&&t){u&&d&&x.texStorage2D(3553,i,l,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)c=h[e],u?x.texSubImage2D(3553,e,0,0,s,o,c):x.texImage2D(3553,e,l,s,o,c);n.generateMipmaps=!1}else u?(d&&x.texStorage2D(3553,i,l,a.width,a.height),x.texSubImage2D(3553,0,0,0,s,o,a)):x.texImage2D(3553,0,l,s,o,a);T(n,t)&&E(r),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function z(e,t,n,r,i){var a=y.convert(n.format),s=y.convert(n.type),o=L(n.internalFormat,a,s,n.encoding);m.get(t).__hasExternalTextures||(32879===i||35866===i?x.texImage3D(i,0,o,t.width,t.height,t.depth,0,a,s,null):x.texImage2D(i,0,o,t.width,t.height,0,a,s,null)),x.bindFramebuffer(36160,e),t.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(36160,r,i,m.get(n).__webglTexture,0,F(t)):v.framebufferTexture2D(36160,r,i,m.get(n).__webglTexture,0),x.bindFramebuffer(36160,null)}function O(t,n,r){if(v.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let e=33189;r||n.useRenderToTexture?((i=n.depthTexture)&&i.isDepthTexture&&(i.type===Oe?e=36012:i.type===Ee&&(e=33190)),i=F(n),n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(36161,i,e,n.width,n.height):v.renderbufferStorageMultisample(36161,i,e,n.width,n.height)):v.renderbufferStorage(36161,e,n.width,n.height),v.framebufferRenderbuffer(36160,36096,36161,t)}else{var e,i;n.depthBuffer&&n.stencilBuffer?(e=F(n),r&&n.useRenderbuffer?v.renderbufferStorageMultisample(36161,e,35056,n.width,n.height):n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(36161,e,35056,n.width,n.height):v.renderbufferStorage(36161,34041,n.width,n.height),v.framebufferRenderbuffer(36160,33306,36161,t)):(i=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,e=y.convert(i.format),t=y.convert(i.type),t=L(i.internalFormat,e,t,i.encoding),i=F(n),r&&n.useRenderbuffer?v.renderbufferStorageMultisample(36161,i,t,n.width,n.height):n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(36161,i,t,n.width,n.height):v.renderbufferStorage(36161,t,n.width,n.height))}v.bindRenderbuffer(36161,null)}function U(t){const n=m.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!n.__autoAllocateDepthBuffer){if(e)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,t){if(t&&t.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(x.bindFramebuffer(36160,e),!t.depthTexture||!t.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");m.get(t.depthTexture).__webglTexture&&t.depthTexture.image.width===t.width&&t.depthTexture.image.height===t.height||(t.depthTexture.image.width=t.width,t.depthTexture.image.height=t.height,t.depthTexture.needsUpdate=!0),d(t.depthTexture,0);var n=m.get(t.depthTexture).__webglTexture,e=F(t);if(t.depthTexture.format===Be)t.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(36160,36096,3553,n,0,e):v.framebufferTexture2D(36160,36096,3553,n,0);else{if(t.depthTexture.format!==Ge)throw new Error("Unknown depthTexture format");t.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(36160,33306,3553,n,0,e):v.framebufferTexture2D(36160,33306,3553,n,0)}}(n.__webglFramebuffer,t)}else if(e){n.__webglDepthbuffer=[];for(let e=0;e<6;e++)x.bindFramebuffer(36160,n.__webglFramebuffer[e]),n.__webglDepthbuffer[e]=v.createRenderbuffer(),O(n.__webglDepthbuffer[e],t,!1)}else x.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=v.createRenderbuffer(),O(n.__webglDepthbuffer,t,!1);x.bindFramebuffer(36160,null)}function F(e){return b&&(e.useRenderbuffer||e.useRenderToTexture)?Math.min(n,e.samples):0}let H=!1,B=!1;this.allocateTextureUnit=function(){var e=u;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),u+=1,e},this.resetTextureUnits=function(){u=0},this.setTexture2D=d,this.setTexture2DArray=function(e,t){var n=m.get(e);0<e.version&&n.__version!==e.version?I(n,e,t):(x.activeTexture(33984+t),x.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(e,t){var n=m.get(e);0<e.version&&n.__version!==e.version?I(n,e,t):(x.activeTexture(33984+t),x.bindTexture(32879,n.__webglTexture))},this.setTextureCube=f,this.rebindTextures=function(e,t,n){var r=m.get(e);void 0!==t&&z(r.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&U(e)},this.setupRenderTarget=function(n){const t=n.texture,r=m.get(n),i=m.get(t);n.addEventListener("dispose",R),!0!==n.isWebGLMultipleRenderTargets&&(void 0===i.__webglTexture&&(i.__webglTexture=v.createTexture()),i.__version=t.version,_.memory.textures++);var e,a,s=!0===n.isWebGLCubeRenderTarget,o=!0===n.isWebGLMultipleRenderTargets,l=t.isDataTexture3D||t.isDataTexture2DArray,c=S(n)||b;if(!b||t.format!==Fe||t.type!==Oe&&t.type!==Ue||(t.format=He,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),s){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=v.createFramebuffer()}else if(r.__webglFramebuffer=v.createFramebuffer(),o)if(g.drawBuffers){var h=n.texture;for(let e=0,t=h.length;e<t;e++){const f=m.get(h[e]);void 0===f.__webglTexture&&(f.__webglTexture=v.createTexture(),_.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else n.useRenderbuffer&&(b?(r.__webglMultisampledFramebuffer=v.createFramebuffer(),r.__webglColorRenderbuffer=v.createRenderbuffer(),v.bindRenderbuffer(36161,r.__webglColorRenderbuffer),e=y.convert(t.format),a=y.convert(t.type),e=L(t.internalFormat,e,a,t.encoding),a=F(n),v.renderbufferStorageMultisample(36161,a,e,n.width,n.height),x.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),v.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),v.bindRenderbuffer(36161,null),n.depthBuffer&&(r.__webglDepthRenderbuffer=v.createRenderbuffer(),O(r.__webglDepthRenderbuffer,n,!0)),x.bindFramebuffer(36160,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(s){x.bindTexture(34067,i.__webglTexture),D(34067,t,c);for(let e=0;e<6;e++)z(r.__webglFramebuffer[e],n,t,36064,34069+e);T(t,c)&&E(34067),x.unbindTexture()}else if(o){var u=n.texture;for(let e=0,t=u.length;e<t;e++){var d=u[e],p=m.get(d);x.bindTexture(3553,p.__webglTexture),D(3553,d,c),z(r.__webglFramebuffer,n,d,36064+e,3553),T(d,c)&&E(3553)}x.unbindTexture()}else{let e=3553;l&&(b?(l=t.isDataTexture3D,e=l?32879:35866):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),x.bindTexture(e,i.__webglTexture),D(e,t,c),z(r.__webglFramebuffer,n,t,36064,e),T(t,c)&&E(e),x.unbindTexture()}n.depthBuffer&&U(n)},this.updateRenderTargetMipmap=function(n){var r=S(n)||b,i=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let e=0,t=i.length;e<t;e++){var a,s=i[e];T(s,r)&&(a=n.isWebGLCubeRenderTarget?34067:3553,s=m.get(s).__webglTexture,x.bindTexture(a,s),E(a),x.unbindTexture())}},this.updateMultisampleRenderTarget=function(t){if(t.useRenderbuffer)if(b){var n=t.width,r=t.height;let e=16384;const s=[36064];var i=t.stencilBuffer?33306:36096;t.depthBuffer&&s.push(i),t.ignoreDepthForMultisampleCopy||(t.depthBuffer&&(e|=256),t.stencilBuffer&&(e|=1024));var a=m.get(t);x.bindFramebuffer(36008,a.__webglMultisampledFramebuffer),x.bindFramebuffer(36009,a.__webglFramebuffer),t.ignoreDepthForMultisampleCopy&&(v.invalidateFramebuffer(36008,[i]),v.invalidateFramebuffer(36009,[i])),v.blitFramebuffer(0,0,n,r,0,0,n,r,e,9728),v.invalidateFramebuffer(36008,s),x.bindFramebuffer(36008,null),x.bindFramebuffer(36009,a.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=U,this.setupFrameBufferTexture=z,this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===H&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),H=!0),e=e.texture),d(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),f(e,t)}}function Xs(e,n,t){const r=t.isWebGL2;return{convert:function(e){let t;if(e===ze)return 5121;if(e===o)return 32819;if(e===h)return 32820;if(e===u)return 33635;if(e===i)return 5120;if(e===a)return 5122;if(e===Te)return 5123;if(e===s)return 5124;if(e===Ee)return 5125;if(e===Oe)return 5126;if(e===Ue)return r?5131:(t=n.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(e===d)return 6406;if(e===Fe)return 6407;if(e===He)return 6408;if(e===p)return 6409;if(e===f)return 6410;if(e===Be)return 6402;if(e===Ge)return 34041;if(e===m)return 6403;if(e===g)return 36244;if(e===v)return 33319;if(e===x)return 33320;if(e===y)return 36248;if(e===_)return 36249;if(e===b||e===S||e===L||e===A){if(t=n.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(e===b)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===S)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===L)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===A)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===R||e===D||e===N||e===I){if(t=n.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(e===R)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===D)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===N)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===I)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===z)return t=n.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===O||e===U)&&(t=n.get("WEBGL_compressed_texture_etc"),null!==t)){if(e===O)return t.COMPRESSED_RGB8_ETC2;if(e===U)return t.COMPRESSED_RGBA8_ETC2_EAC}return e===F||e===H||e===B||e===Ve||e===We||e===ke||e===je||e===qe||e===Xe||e===Ze||e===Je||e===Ye||e===Qe||e===Ke||e===et||e===tt||e===nt||e===rt||e===it||e===at||e===st||e===ot||e===lt||e===ct||e===ht||e===ut||e===dt||e===pt?(t=n.get("WEBGL_compressed_texture_astc"),null!==t?e:null):e===$e?(t=n.get("EXT_texture_compression_bptc"),null!==t?e:null):e===Le?r?34042:(t=n.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Zs extends ei{constructor(e=[]){super(),this.cameras=e}}Zs.prototype.isArrayCamera=!0;class Js extends Xn{constructor(){super(),this.type="Group"}}Js.prototype.isGroup=!0;const Ys={type:"move"};class Qs{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Js,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Js,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new kt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new kt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Js,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new kt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new kt),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&(r=t.getPose(e.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Ys))),l&&e.hand){a=!0;for(const d of e.hand.values()){var c=t.getJointPose(d,n);if(void 0===l.joints[d.jointName]){const f=new Js;f.matrixAutoUpdate=!1,f.visible=!1,l.joints[d.jointName]=f,l.add(f)}const p=l.joints[d.jointName];null!==c&&(p.matrix.fromArray(c.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=c.radius),p.visible=null!==c}const u=l.joints["index-finger-tip"];var h=l.joints["thumb-tip"],h=u.position.distanceTo(h.position);l.inputState.pinching&&.025<h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&h<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}class Ks extends Ft{constructor(e,t,n,r,i,a,s,o,l,c){if((c=void 0!==c?c:Be)!==Be&&c!==Ge)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,i,a,s,o,c,n=void 0===(n=void 0===n&&c===Be?Te:n)&&c===Ge?Le:n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:Ne,this.minFilter=void 0!==o?o:Ne,this.flipY=!1,this.generateMipmaps=!1}}Ks.prototype.isDepthTexture=!0;class $s extends bt{constructor(c,i){super();const t=this;let h=null,a=1,u=null,n="local-floor";const s=c.extensions.has("WEBGL_multisampled_render_to_texture");let d=null,p=null,f=null,m=null,o,g=null;const l=i.getContextAttributes();let v=null,x=null;const y=[],_=new Map,b=new ei;b.layers.enable(1),b.viewport=new Bt;const M=new ei;M.layers.enable(2),M.viewport=new Bt;const w=[b,M],S=new Zs;S.layers.enable(1),S.layers.enable(2);let T=null,E=null;function L(e){const t=_.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function A(){_.forEach(function(e,t){e.disconnect(t)}),_.clear(),T=null,E=null,c.setRenderTarget(v),m=null,f=null,p=null,h=null,x=null,I.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}function R(t){var n=h.inputSources;for(let e=0;e<y.length;e++)_.set(n[e],y[e]);for(let e=0;e<t.removed.length;e++){var r=t.removed[e];const a=_.get(r);a&&(a.dispatchEvent({type:"disconnected",data:r}),_.delete(r))}for(let e=0;e<t.added.length;e++){var i=t.added[e];const s=_.get(i);s&&s.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new Qs,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new Qs,y[e]=t),t.getGripSpace()},this.getHand=function(e){let t=y[e];return void 0===t&&(t=new Qs,y[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){n=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u},this.getBaseLayer=function(){return null!==f?f:m},this.getBinding=function(){return p},this.getFrame=function(){return g},this.getSession=function(){return h},this.setSession=async function(e){if(h=e,null!==h){if(v=c.getRenderTarget(),h.addEventListener("select",L),h.addEventListener("selectstart",L),h.addEventListener("selectend",L),h.addEventListener("squeeze",L),h.addEventListener("squeezestart",L),h.addEventListener("squeezeend",L),h.addEventListener("end",A),h.addEventListener("inputsourceschange",R),!0!==l.xrCompatible&&await i.makeXRCompatible(),void 0===h.renderState.layers||!1===c.capabilities.isWebGL2){var r={antialias:void 0!==h.renderState.layers||l.antialias,alpha:l.alpha,depth:l.depth,stencil:l.stencil,framebufferScaleFactor:a};m=new XRWebGLLayer(h,i,r),h.updateRenderState({baseLayer:m}),x=new Gt(m.framebufferWidth,m.framebufferHeight,{format:He,type:ze,encoding:c.outputEncoding})}else{o=l.antialias;let e=null,t=null,n=null;l.depth&&(n=l.stencil?35056:33190,e=l.stencil?Ge:Be,t=l.stencil?Le:Te);r={colorFormat:l.alpha||o?32856:32849,depthFormat:n,scaleFactor:a};p=new XRWebGLBinding(h,i),f=p.createProjectionLayer(r),h.updateRenderState({layers:[f]}),x=o?new Vt(f.textureWidth,f.textureHeight,{format:He,type:ze,depthTexture:new Ks(f.textureWidth,f.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:l.stencil,ignoreDepth:f.ignoreDepthValues,useRenderToTexture:s,encoding:c.outputEncoding}):new Gt(f.textureWidth,f.textureHeight,{format:l.alpha?He:Fe,type:ze,depthTexture:new Ks(f.textureWidth,f.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:l.stencil,ignoreDepth:f.ignoreDepthValues,encoding:c.outputEncoding})}this.setFoveation(1),u=await h.requestReferenceSpace(n),I.setContext(h),I.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};const C=new kt,P=new kt;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==h){S.near=M.near=b.near=e.near,S.far=M.far=b.far=e.far,T===S.near&&E===S.far||(h.updateRenderState({depthNear:S.near,depthFar:S.far}),T=S.near,E=S.far);var t=e.parent,n=S.cameras;D(S,t);for(let e=0;e<n.length;e++)D(n[e],t);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),e.position.copy(S.position),e.quaternion.copy(S.quaternion),e.scale.copy(S.scale),e.matrix.copy(S.matrix),e.matrixWorld.copy(S.matrixWorld);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){C.setFromMatrixPosition(t.matrixWorld),P.setFromMatrixPosition(n.matrixWorld);var r=C.distanceTo(P),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],h=(i[8]-1)/i[0],n=(a[8]+1)/a[0],i=s*h,a=s*n,h=(n=r/(n-h))*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(h),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),s+=n,n=o+n,e.projectionMatrix.makePerspective(i-h,r-h+a,l*o/n*s,c*o/n*s,s,n)}(S,b,M):S.projectionMatrix.copy(b.projectionMatrix)}},this.getCamera=function(){return S},this.getFoveation=function(){return null!==f?f.fixedFoveation:null!==m?m.fixedFoveation:void 0},this.setFoveation=function(e){null!==f&&(f.fixedFoveation=e),null!==m&&void 0!==m.fixedFoveation&&(m.fixedFoveation=e)};let N=null;const I=new ui;I.setAnimationLoop(function(e,t){if(d=t.getViewerPose(u),g=t,null!==d){var r=d.views;null!==m&&(c.setRenderTargetFramebuffer(x,m.framebuffer),c.setRenderTarget(x));let n=!1;r.length!==S.cameras.length&&(S.cameras.length=0,n=!0);for(let t=0;t<r.length;t++){var i,a=r[t];let e=null;null!==m?e=m.getViewport(a):(i=p.getViewSubImage(f,a),e=i.viewport,0===t&&(c.setRenderTargetTextures(x,i.colorTexture,f.ignoreDepthValues?void 0:i.depthStencilTexture),c.setRenderTarget(x)));const o=w[t];o.matrix.fromArray(a.transform.matrix),o.projectionMatrix.fromArray(a.projectionMatrix),o.viewport.set(e.x,e.y,e.width,e.height),0===t&&S.matrix.copy(o.matrix),!0===n&&S.cameras.push(o)}}var n=h.inputSources;for(let e=0;e<y.length;e++){const l=y[e];var s=n[e];l.update(s,t,u)}N&&N(e,t),g=null}),this.setAnimationLoop=function(e){N=e},this.dispose=function(){}}}function eo(a){function c(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);var n=a.get(t).envMap;n&&(e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,e.reflectivity.value=t.reflectivity,e.ior.value=t.ior,e.refractionRatio.value=t.refractionRatio),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap?r=t.emissiveMap:t.clearcoatMap?r=t.clearcoatMap:t.clearcoatNormalMap?r=t.clearcoatNormalMap:t.clearcoatRoughnessMap?r=t.clearcoatRoughnessMap:t.specularIntensityMap?r=t.specularIntensityMap:t.specularColorMap?r=t.specularColorMap:t.transmissionMap?r=t.transmissionMap:t.thicknessMap?r=t.thicknessMap:t.sheenColorMap?r=t.sheenColorMap:t.sheenRoughnessMap&&(r=t.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix));let i;t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}function h(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Re&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Re&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,t,n,r,i){var a,s,o,l;t.isMeshBasicMaterial?c(e,t):t.isMeshLambertMaterial?(c(e,t),o=e,(l=t).emissiveMap&&(o.emissiveMap.value=l.emissiveMap)):t.isMeshToonMaterial?(c(e,t),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Re&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Re&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshPhongMaterial?(c(e,t),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Re&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Re&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshStandardMaterial?(c(e,t),t.isMeshPhysicalMaterial?function(e,t,n){h(e,t),e.ior.value=t.ior,0<t.sheen&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap));0<t.clearcoat&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===Re&&e.clearcoatNormalScale.value.negate()));0<t.transmission&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap);t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,t,i):h(e,t)):t.isMeshMatcapMaterial?(c(e,t),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Re&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Re&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDepthMaterial?(c(e,t),a=e,(s=t).displacementMap&&(a.displacementMap.value=s.displacementMap,a.displacementScale.value=s.displacementScale,a.displacementBias.value=s.displacementBias)):t.isMeshDistanceMaterial?(c(e,t),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,t)):t.isMeshNormalMaterial?(c(e,t),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Re&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Re&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isLineBasicMaterial?(a=t,(s=e).diffuse.value.copy(a.color),s.opacity.value=a.opacity,t.isLineDashedMaterial&&(s=t,(a=e).dashSize.value=s.dashSize,a.totalSize.value=s.dashSize+s.gapSize,a.scale.value=s.scale)):t.isPointsMaterial?function(e,t,n,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,t,n,r):t.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function to(e={}){const i=void 0!==e.canvas?e.canvas:function(){const e=It("canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let f=null,L=null;const u=[],d=[];this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=gt,this.physicallyCorrectLights=!1,this.toneMapping=Pe,this.toneMappingExposure=1;const A=this;let p=!1,m=0,g=0,R=null,C=-1,P=null;const v=new Bt,x=new Bt;let y=null,_=i.width,D=i.height,N=1,b=null,M=null;const w=new Bt(0,0,_,D),S=new Bt(0,0,_,D);let T=!1;const E=[],I=new hi;let z=!1,O=!1,U=null;const F=new Mn,H=new kt,B={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function G(){return null===R?N:1}let V=t;function W(t,n){for(let e=0;e<t.length;e++){var r=t[e],r=i.getContext(r,n);if(null!==r)return r}return null}try{var k={alpha:n,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in i&&i.setAttribute("data-engine","three.js r136"),i.addEventListener("webglcontextlost",ge,!1),i.addEventListener("webglcontextrestored",ve,!1),null===V){const Le=["webgl2","webgl","experimental-webgl"];if(!0===A.isWebGL1Renderer&&Le.shift(),V=W(Le,k),null===V)throw W(Le)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===V.getShaderPrecisionFormat&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let j,q,X,Z,J,Y,Q,K,$,ee,te,ne,re,ie,ae,se,oe,le,ce,he,ue,de,pe;function fe(){j=new Xi(V),q=new _i(V,j,e),j.init(q),de=new Xs(V,j,q),X=new js(V,j,q),E[0]=1029,Z=new Yi(V),J=new Rs,Y=new qs(V,j,X,J,q,de,Z),Q=new Mi(A),K=new qi(A),$=new di(V,q),pe=new xi(V,j,$,q),ee=new Zi(V,$,Z,pe),te=new na(V,ee,$,Z),ce=new ta(V,q,Y),se=new bi(J),ne=new As(A,Q,K,j,q,pe,se),re=new eo(J),ie=new Ns,ae=new Hs(j,q),le=new vi(A,Q,X,te,o),oe=new ks(A,te,q),he=new yi(V,j,Z,q),ue=new Ji(V,j,Z,q),Z.programs=ne.programs,A.capabilities=q,A.extensions=j,A.properties=J,A.renderLists=ie,A.shadowMap=oe,A.state=X,A.info=Z}fe();const me=new $s(A,V);function ge(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function ve(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;var e=Z.autoReset,t=oe.enabled,n=oe.autoUpdate,r=oe.needsUpdate,i=oe.type;fe(),Z.autoReset=e,oe.enabled=t,oe.autoUpdate=n,oe.needsUpdate=r,oe.type=i}function xe(e){const t=e.target;t.removeEventListener("dispose",xe),function(e){const t=J.get(e).programs;void 0!==t&&(t.forEach(function(e){ne.releaseProgram(e)}),e.isShaderMaterial&&ne.releaseShaderCache(e))}(e=t),J.remove(e)}this.xr=me,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const e=j.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=j.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(e){void 0!==e&&(N=e,this.setSize(_,D,!1))},this.getSize=function(e){return e.set(_,D)},this.setSize=function(e,t,n){me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_=e,D=t,i.width=Math.floor(e*N),i.height=Math.floor(t*N),!1!==n&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(_*N,D*N).floor()},this.setDrawingBufferSize=function(e,t,n){_=e,D=t,N=n,i.width=Math.floor(e*n),i.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(v)},this.getViewport=function(e){return e.copy(w)},this.setViewport=function(e,t,n,r){e.isVector4?w.set(e.x,e.y,e.z,e.w):w.set(e,t,n,r),X.viewport(v.copy(w).multiplyScalar(N).floor())},this.getScissor=function(e){return e.copy(S)},this.setScissor=function(e,t,n,r){e.isVector4?S.set(e.x,e.y,e.z,e.w):S.set(e,t,n,r),X.scissor(x.copy(S).multiplyScalar(N).floor())},this.getScissorTest=function(){return T},this.setScissorTest=function(e){X.setScissorTest(T=e)},this.setOpaqueSort=function(e){b=e},this.setTransparentSort=function(e){M=e},this.getClearColor=function(e){return e.copy(le.getClearColor())},this.setClearColor=function(){le.setClearColor.apply(le,arguments)},this.getClearAlpha=function(){return le.getClearAlpha()},this.setClearAlpha=function(){le.setClearAlpha.apply(le,arguments)},this.clear=function(e,t,n){let r=0;void 0!==e&&!e||(r|=16384),void 0!==t&&!t||(r|=256),void 0!==n&&!n||(r|=1024),V.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",ge,!1),i.removeEventListener("webglcontextrestored",ve,!1),ie.dispose(),ae.dispose(),J.dispose(),Q.dispose(),K.dispose(),te.dispose(),pe.dispose(),ne.dispose(),me.dispose(),me.removeEventListener("sessionstart",_e),me.removeEventListener("sessionend",be),U&&(U.dispose(),U=null),Me.stop()},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=B);var s=i.isMesh&&i.matrixWorld.determinant()<0,o=function(e,t,n,r,i){!0!==t.isScene&&(t=B);Y.resetTextureUnits();const a=t.fog,s=r.isMeshStandardMaterial?t.environment:null,o=null===R?A.outputEncoding:R.texture.encoding,l=(r.isMeshStandardMaterial?K:Q).get(r.envMap||s),c=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!r.normalMap&&!!n.attributes.tangent,u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=n.morphAttributes.position?n.morphAttributes.position.length:0,f=r.toneMapped?A.toneMapping:Pe,m=J.get(r),g=L.state.lights;{var v;!0===z&&(!0!==O&&e===P||(v=e===P&&r.id===C,se.setState(r,e,v)))}let x=!1;r.version===m.__version?(m.needsLights&&m.lightsStateVersion!==g.state.version||m.outputEncoding!==o||i.isInstancedMesh&&!1===m.instancing||!i.isInstancedMesh&&!0===m.instancing||i.isSkinnedMesh&&!1===m.skinning||!i.isSkinnedMesh&&!0===m.skinning||m.envMap!==l||r.fog&&m.fog!==a||void 0!==m.numClippingPlanes&&(m.numClippingPlanes!==se.numPlanes||m.numIntersection!==se.numIntersection)||m.vertexAlphas!==c||m.vertexTangents!==h||m.morphTargets!==u||m.morphNormals!==d||m.toneMapping!==f||!0===q.isWebGL2&&m.morphTargetsCount!==p)&&(x=!0):(x=!0,m.__version=r.version);let y=m.currentProgram;!0===x&&(y=Te(r,t,i));let _=!1,b=!1,M=!1;const w=y.getUniforms(),S=m.uniforms;X.useProgram(y.program)&&(_=!0,b=!0,M=!0);r.id!==C&&(C=r.id,b=!0);if(_||P!==e){if(w.setValue(V,"projectionMatrix",e.projectionMatrix),q.logarithmicDepthBuffer&&w.setValue(V,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),P!==e&&(P=e,b=!0,M=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const T=w.map.cameraPosition;void 0!==T&&T.setValue(V,H.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&w.setValue(V,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&w.setValue(V,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){w.setOptional(V,i,"bindMatrix"),w.setOptional(V,i,"bindMatrixInverse");const E=i.skeleton;E&&(q.floatVertexTextures?(null===E.boneTexture&&E.computeBoneTexture(),w.setValue(V,"boneTexture",E.boneTexture,Y),w.setValue(V,"boneTextureSize",E.boneTextureSize)):w.setOptional(V,E,"boneMatrices"))}!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||ce.update(i,n,r,y);!b&&m.receiveShadow===i.receiveShadow||(m.receiveShadow=i.receiveShadow,w.setValue(V,"receiveShadow",i.receiveShadow));b&&(w.setValue(V,"toneMappingExposure",A.toneMappingExposure),m.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(S,M),a&&r.fog&&re.refreshFogUniforms(S,a),re.refreshMaterialUniforms(S,r,N,D,U),ss.upload(V,m.uniformsList,S,Y));r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(ss.upload(V,m.uniformsList,S,Y),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&w.setValue(V,"center",i.center);return w.setValue(V,"modelViewMatrix",i.modelViewMatrix),w.setValue(V,"normalMatrix",i.normalMatrix),w.setValue(V,"modelMatrix",i.matrixWorld),y}(e,t,n,r,i);X.setMaterial(r,s);let l=n.index;e=n.attributes.position;if(null===l){if(void 0===e||0===e.count)return}else if(0===l.count)return;let c=1;!0===r.wireframe&&(l=ee.getWireframeAttribute(n),c=2),pe.setup(i,r,o,n,l);let h=he;null!==l&&(u=$.get(l),h=ue,h.setIndex(u));var t=(null!==l?l:e).count,s=n.drawRange.start*c,o=n.drawRange.count*c,u=null!==a?a.start*c:0,e=null!==a?a.count*c:1/0,a=Math.max(s,u),e=Math.min(t,s+o,u+e)-1,e=Math.max(0,e-a+1);if(0!==e){if(i.isMesh)!0===r.wireframe?(X.setLineWidth(r.wireframeLinewidth*G()),h.setMode(1)):h.setMode(4);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),X.setLineWidth(e*G()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);i.isInstancedMesh?h.renderInstances(a,e,i.count):n.isInstancedBufferGeometry?(n=Math.min(n.instanceCount,n._maxInstanceCount),h.renderInstances(a,e,n)):h.render(a,e)}},this.compile=function(r,t){L=ae.get(r),L.init(),d.push(L),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(L.pushLight(e),e.castShadow&&L.pushShadow(e))}),L.setupLights(A.physicallyCorrectLights),r.traverse(function(t){var n=t.material;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++)Te(n[e],r,t);else Te(n,r,t)}),d.pop(),L=null};let ye=null;function _e(){Me.stop()}function be(){Me.start()}const Me=new ui;function we(e,t,n,r){var i=e.opaque,a=e.transmissive,e=e.transparent;L.setupLightsView(n),0<a.length&&function(e,t,n){if(null===U){const a=!0===s&&!0===q.isWebGL2?Vt:Gt;U=new a(1024,1024,{generateMipmaps:!0,type:null!==de.convert(Ue)?Ue:ze,minFilter:Ie,magFilter:Ne,wrapS:De,wrapT:De,useRenderToTexture:j.has("WEBGL_multisampled_render_to_texture")})}var r=A.getRenderTarget();A.setRenderTarget(U),A.clear();var i=A.toneMapping;A.toneMapping=Pe,Se(e,t,n),A.toneMapping=i,Y.updateMultisampleRenderTarget(U),Y.updateRenderTargetMipmap(U),A.setRenderTarget(r)}(i,t,n),r&&X.viewport(v.copy(r)),0<i.length&&Se(i,t,n),0<a.length&&Se(a,t,n),0<e.length&&Se(e,t,n)}function Se(n,r,i){var a=!0===r.isScene?r.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){var s=n[e];const c=s.object;var o=s.geometry,l=null===a?s.material:a,s=s.group;c.layers.test(i.layers)&&function(e,t,n,r,i,a){e.onBeforeRender(A,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(A,t,n,r,e,a),!0===i.transparent&&i.side===Ce?(i.side=Re,i.needsUpdate=!0,A.renderBufferDirect(n,t,r,i,e,a),i.side=Ae,i.needsUpdate=!0,A.renderBufferDirect(n,t,r,i,e,a),i.side=Ce):A.renderBufferDirect(n,t,r,i,e,a);e.onAfterRender(A,t,n,r,i,a)}(c,r,i,o,l,s)}}function Te(e,t,n){!0!==t.isScene&&(t=B);const r=J.get(e);var i=L.state.lights,a=L.state.shadowsArray,s=i.state.version;const o=ne.getParameters(e,i.state,a,t,n);a=ne.getProgramCacheKey(o);let l=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?K:Q).get(e.envMap||r.environment),void 0===l&&(e.addEventListener("dispose",xe),l=new Map,r.programs=l);let c=l.get(a);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===s)return Ee(e,o),c}else o.uniforms=ne.getUniforms(e),e.onBuild(n,o,A),e.onBeforeCompile(o,A),c=ne.acquireProgram(o,a),l.set(a,c),r.uniforms=o.uniforms;const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=se.uniform),Ee(e,o),r.needsLights=(e=e).isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,r.lightsStateVersion=s,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);i=c.getUniforms(),i=ss.seqWithValue(i.seq,h);return r.currentProgram=c,r.uniformsList=i,c}function Ee(e,t){const n=J.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Me.setAnimationLoop(function(e){ye&&ye(e)}),"undefined"!=typeof window&&Me.setContext(window),this.setAnimationLoop=function(e){ye=e,me.setAnimationLoop(e),null===e?Me.stop():Me.start()},me.addEventListener("sessionstart",_e),me.addEventListener("sessionend",be),this.render=function(n,e){if(void 0===e||!0===e.isCamera){if(!0!==p){!0===n.autoUpdate&&n.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===me.enabled&&!0===me.isPresenting&&(!0===me.cameraAutoUpdate&&me.updateCamera(e),e=me.getCamera()),!0===n.isScene&&n.onBeforeRender(A,n,e,R),L=ae.get(n,d.length),L.init(),d.push(L),F.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),I.setFromProjectionMatrix(F),O=this.localClippingEnabled,z=se.init(this.clippingPlanes,O,e),f=ie.get(n,u.length),f.init(),u.push(f),function n(r,i,a,s){if(!1===r.visible)return;const e=r.layers.test(i.layers);if(e)if(r.isGroup)a=r.renderOrder;else if(r.isLOD)!0===r.autoUpdate&&r.update(i);else if(r.isLight)L.pushLight(r),r.castShadow&&L.pushShadow(r);else if(r.isSprite){if(!r.frustumCulled||I.intersectsSprite(r)){s&&H.setFromMatrixPosition(r.matrixWorld).applyMatrix4(F);const t=te.update(r),l=r.material;l.visible&&f.push(r,t,l,a,H.z,null)}}else if((r.isMesh||r.isLine||r.isPoints)&&(r.isSkinnedMesh&&r.skeleton.frame!==Z.render.frame&&(r.skeleton.update(),r.skeleton.frame=Z.render.frame),!r.frustumCulled||I.intersectsObject(r))){s&&H.setFromMatrixPosition(r.matrixWorld).applyMatrix4(F);const c=te.update(r),h=r.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];p&&p.visible&&f.push(r,c,p,a,H.z,d)}}else h.visible&&f.push(r,c,h,a,H.z,null)}const o=r.children;for(let e=0,t=o.length;e<t;e++)n(o[e],i,a,s)}(n,e,0,A.sortObjects),f.finish(),!0===A.sortObjects&&f.sort(b,M),!0===z&&se.beginShadows();var t=L.state.shadowsArray;if(oe.render(t,n,e),!0===z&&se.endShadows(),!0===this.info.autoReset&&this.info.reset(),le.render(f,n),L.setupLights(A.physicallyCorrectLights),e.isArrayCamera){var r=e.cameras;for(let e=0,t=r.length;e<t;e++){var i=r[e];we(f,n,i,i.viewport)}}else we(f,n,e);null!==R&&(Y.updateMultisampleRenderTarget(R),Y.updateRenderTargetMipmap(R)),!0===n.isScene&&n.onAfterRender(A,n,e),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1),pe.resetDefaultState(),C=-1,P=null,d.pop(),L=0<d.length?d[d.length-1]:null,u.pop(),f=0<u.length?u[u.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return R},this.setRenderTargetTextures=function(e,t,n){J.get(e.texture).__webglTexture=t,J.get(e.depthTexture).__webglTexture=n;const r=J.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||e.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),e.useRenderToTexture=!1,e.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(e,t){const n=J.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(t,e=0,n=0){R=t,m=e,g=n;let r=!0;var i,a;t&&(void 0!==(i=J.get(t)).__useDefaultFramebuffer?(X.bindFramebuffer(36160,null),r=!1):void 0===i.__webglFramebuffer?Y.setupRenderTarget(t):i.__hasExternalTextures&&Y.rebindTextures(t,J.get(t.texture).__webglTexture,J.get(t.depthTexture).__webglTexture));let s=null,o=!1,l=!1;if(y=t?(((a=t.texture).isDataTexture3D||a.isDataTexture2DArray)&&(l=!0),a=J.get(t).__webglFramebuffer,t.isWebGLCubeRenderTarget?(s=a[e],o=!0):s=t.useRenderbuffer?J.get(t).__webglMultisampledFramebuffer:a,v.copy(t.viewport),x.copy(t.scissor),t.scissorTest):(v.copy(w).multiplyScalar(N).floor(),x.copy(S).multiplyScalar(N).floor(),T),X.bindFramebuffer(36160,s)&&q.drawBuffers&&r){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const Y=t.texture;if(E.length!==Y.length||36064!==E[0]){for(let e=0,t=Y.length;e<t;e++)E[e]=36064+e;E.length=Y.length,e=!0}}else 1===E.length&&36064===E[0]||(E[0]=36064,E.length=1,e=!0);else 1===E.length&&1029===E[0]||(E[0]=1029,E.length=1,e=!0);e&&(q.isWebGL2?V.drawBuffers(E):j.get("WEBGL_draw_buffers").drawBuffersWEBGL(E))}X.viewport(v),X.scissor(x),X.setScissorTest(y),o?(a=J.get(t.texture),V.framebufferTexture2D(36160,36064,34069+e,a.__webglTexture,n)):l&&(t=J.get(t.texture),e=e||0,V.framebufferTextureLayer(36160,36064,t.__webglTexture,n||0,e)),C=-1},this.readRenderTargetPixels=function(t,n,r,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=J.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(e=e[o]),e){X.bindFramebuffer(36160,e);try{var l=t.texture,c=l.format,h=l.type;if(c!==He&&de.convert(c)!==V.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=h===Ue&&(j.has("EXT_color_buffer_half_float")||q.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(h===ze||de.convert(h)===V.getParameter(35738)||h===Oe&&(q.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===V.checkFramebufferStatus(36160)?0<=n&&n<=t.width-i&&0<=r&&r<=t.height-a&&V.readPixels(n,r,i,a,de.convert(c),de.convert(h),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==R?J.get(R).__webglFramebuffer:null;X.bindFramebuffer(36160,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n=0){var r,i;!0===t.isFramebufferTexture?(i=Math.pow(2,-n),r=Math.floor(t.image.width*i),i=Math.floor(t.image.height*i),Y.setTexture2D(t,0),V.copyTexSubImage2D(3553,n,0,0,e.x,e.y,r,i),X.unbindTexture()):console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.")},this.copyTextureToTexture=function(e,t,n,r=0){var i=t.image.width,a=t.image.height,s=de.convert(n.format),o=de.convert(n.type);Y.setTexture2D(n,0),V.pixelStorei(37440,n.flipY),V.pixelStorei(37441,n.premultiplyAlpha),V.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?V.texSubImage2D(3553,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?V.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):V.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&V.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(t,n,r,i,a=0){if(A.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var s=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,l=t.max.z-t.min.z+1,c=de.convert(i.format),h=de.convert(i.type);let e;if(i.isDataTexture3D)Y.setTexture3D(i,0),e=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Y.setTexture2DArray(i,0),e=35866}V.pixelStorei(37440,i.flipY),V.pixelStorei(37441,i.premultiplyAlpha),V.pixelStorei(3317,i.unpackAlignment);var u=V.getParameter(3314),d=V.getParameter(32878),p=V.getParameter(3316),f=V.getParameter(3315),m=V.getParameter(32877),g=r.isCompressedTexture?r.mipmaps[0]:r.image;V.pixelStorei(3314,g.width),V.pixelStorei(32878,g.height),V.pixelStorei(3316,t.min.x),V.pixelStorei(3315,t.min.y),V.pixelStorei(32877,t.min.z),r.isDataTexture||r.isDataTexture3D?V.texSubImage3D(e,a,n.x,n.y,n.z,s,o,l,c,h,g.data):r.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D(e,a,n.x,n.y,n.z,s,o,l,c,g.data)):V.texSubImage3D(e,a,n.x,n.y,n.z,s,o,l,c,h,g),V.pixelStorei(3314,u),V.pixelStorei(32878,d),V.pixelStorei(3316,p),V.pixelStorei(3315,f),V.pixelStorei(32877,m),0===a&&i.generateMipmaps&&V.generateMipmap(e),X.unbindTexture()}},this.initTexture=function(e){Y.setTexture2D(e,0),X.unbindTexture()},this.resetState=function(){m=0,g=0,R=null,X.reset(),pe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}to.prototype.isWebGLRenderer=!0;class no{constructor(e,t=25e-5){this.name="",this.color=new pr(e),this.density=t}clone(){return new no(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}no.prototype.isFogExp2=class extends to{}.prototype.isWebGL1Renderer=!0;class ro{constructor(e,t=1,n=1e3){this.name="",this.color=new pr(e),this.near=t,this.far=n}clone(){return new ro(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ro.prototype.isFog=!0;class io extends Xn{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}io.prototype.isScene=!0;class ao{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=r,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Tt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(n,r,i){n*=this.stride,i*=r.stride;for(let e=0,t=this.stride;e<t;e++)this.array[n+e]=r.array[i+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const t=new this.constructor(e,this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ao.prototype.isInterleavedBuffer=!0;const so=new kt;class oo{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(n){for(let e=0,t=this.data.count;e<t;e++)so.x=this.getX(e),so.y=this.getY(e),so.z=this.getZ(e),so.applyMatrix4(n),this.setXYZ(e,so.x,so.y,so.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)so.x=this.getX(e),so.y=this.getY(e),so.z=this.getZ(e),so.applyNormalMatrix(n),this.setXYZ(e,so.x,so.y,so.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)so.x=this.getX(e),so.y=this.getY(e),so.z=this.getZ(e),so.transformDirection(n),this.setXYZ(e,so.x,so.y,so.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new oo(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return new vr(new this.array.constructor(n),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}}}oo.prototype.isInterleavedBufferAttribute=!0;class lo extends sr{constructor(e){super(),this.type="SpriteMaterial",this.color=new pr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}lo.prototype.isSpriteMaterial=!0;let co;const ho=new kt,uo=new kt,po=new kt,fo=new Pt,mo=new Pt,go=new Mn,vo=new kt,xo=new kt,yo=new kt,_o=new Pt,bo=new Pt,Mo=new Pt;class wo extends Xn{constructor(e){var t;super(),this.type="Sprite",void 0===co&&(co=new Ar,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new ao(t,5),co.setIndex([0,1,2,0,2,3]),co.setAttribute("position",new oo(t,3,0,!1)),co.setAttribute("uv",new oo(t,2,3,!1))),this.geometry=co,this.material=void 0!==e?e:new lo,this.center=new Pt(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),uo.setFromMatrixScale(this.matrixWorld),go.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),po.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&uo.multiplyScalar(-po.z);var n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));var n=this.center;So(vo.set(-.5,-.5,0),po,n,uo,r,i),So(xo.set(.5,-.5,0),po,n,uo,r,i),So(yo.set(.5,.5,0),po,n,uo,r,i),_o.set(0,0),bo.set(1,0),Mo.set(1,1),null===e.ray.intersectTriangle(vo,xo,yo,!1,ho)&&(So(xo.set(-.5,.5,0),po,n,uo,r,i),bo.set(0,1),null===e.ray.intersectTriangle(vo,yo,xo,!1,ho))||((n=e.ray.origin.distanceTo(ho))<e.near||n>e.far||t.push({distance:n,point:ho.clone(),uv:ir.getUV(ho,vo,xo,yo,_o,bo,Mo,new Pt),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function So(e,t,n,r,i,a){fo.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(mo.x=a*fo.x-i*fo.y,mo.y=i*fo.x+a*fo.y):mo.copy(fo),e.copy(t),e.x+=mo.x,e.y+=mo.y,e.applyMatrix4(go)}wo.prototype.isSprite=!0;(class extends null{});const To=new kt,Eo=new Bt,Lo=new Bt,Ao=new kt,Ro=new Mn;class Co extends qr{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Mn,this.bindMatrixInverse=new Mn}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const n=new Bt,r=this.geometry.attributes.skinWeight;for(let e=0,t=r.count;e<t;e++){n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e);var i=1/n.manhattanLength();i!=1/0?n.multiplyScalar(i):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var n=this.skeleton,r=this.geometry;Eo.fromBufferAttribute(r.attributes.skinIndex,e),Lo.fromBufferAttribute(r.attributes.skinWeight,e),To.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var i,a=Lo.getComponent(e);0!==a&&(i=Eo.getComponent(e),Ro.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Ao.copy(To).applyMatrix4(Ro),a))}return t.applyMatrix4(this.bindMatrixInverse)}}Co.prototype.isSkinnedMesh=!0;class Po extends Xn{constructor(){super(),this.type="Bone"}}Po.prototype.isBone=!0;class Do extends Ft{constructor(e=null,t=1,n=1,r,i,a,s,o,l=Ne,c=Ne,h,u){super(null,a,s,o,l,c,r,i,h,u),this.image={data:e,width:t,height:n},this.magFilter=l,this.minFilter=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Do.prototype.isDataTexture=!0;class No extends vr{constructor(e,t,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}No.prototype.isInstancedBufferAttribute=!0;const Io=new Mn,zo=new Mn,Oo=[],Uo=new qr;class Fo extends qr{constructor(e,t,n){super(e,t),this.instanceMatrix=new No(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,r){var t=this.matrixWorld,i=this.count;if(Uo.geometry=this.geometry,Uo.material=this.material,void 0!==Uo.material)for(let n=0;n<i;n++){this.getMatrixAt(n,Io),zo.multiplyMatrices(t,Io),Uo.matrixWorld=zo,Uo.raycast(e,Oo);for(let e=0,t=Oo.length;e<t;e++){const a=Oo[e];a.instanceId=n,a.object=this,r.push(a)}Oo.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new No(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Fo.prototype.isInstancedMesh=!0;class Ho extends sr{constructor(e){super(),this.type="LineBasicMaterial",this.color=new pr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Ho.prototype.isLineBasicMaterial=!0;const Bo=new kt,Go=new kt,Vo=new Mn,Wo=new bn,ko=new pn;class jo extends Xn{constructor(e=new Ar,t=new Ho){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[0];for(let e=1,t=n.count;e<t;e++)Bo.fromBufferAttribute(n,e-1),Go.fromBufferAttribute(n,e),r[e]=r[e-1],r[e]+=Bo.distanceTo(Go);e.setAttribute("lineDistance",new _r(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(n,r){const e=this.geometry;var t=this.matrixWorld,i=n.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),ko.copy(e.boundingSphere),ko.applyMatrix4(t),ko.radius+=i,!1!==n.ray.intersectsSphere(ko)){Vo.copy(t).invert(),Wo.copy(n.ray).applyMatrix4(Vo);var i=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=i*i;const d=new kt,p=new kt,f=new kt,m=new kt;var o=this.isLineSegments?2:1;if(e.isBufferGeometry){const g=e.index;var l,c=e.attributes.position;if(null!==g)for(let e=Math.max(0,a.start),t=Math.min(g.count,a.start+a.count)-1;e<t;e+=o){var h=g.getX(e),u=g.getX(e+1);d.fromBufferAttribute(c,h),p.fromBufferAttribute(c,u),s<Wo.distanceSqToSegment(d,p,m,f)||(m.applyMatrix4(this.matrixWorld),(u=n.ray.origin.distanceTo(m))<n.near||u>n.far||r.push({distance:u,point:f.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else for(let e=Math.max(0,a.start),t=Math.min(c.count,a.start+a.count)-1;e<t;e+=o)d.fromBufferAttribute(c,e),p.fromBufferAttribute(c,e+1),s<Wo.distanceSqToSegment(d,p,m,f)||(m.applyMatrix4(this.matrixWorld),(l=n.ray.origin.distanceTo(m))<n.near||l>n.far||r.push({distance:l,point:f.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}jo.prototype.isLine=!0;const qo=new kt,Xo=new kt;class Zo extends jo{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[];for(let e=0,t=n.count;e<t;e+=2)qo.fromBufferAttribute(n,e),Xo.fromBufferAttribute(n,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+qo.distanceTo(Xo);e.setAttribute("lineDistance",new _r(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Zo.prototype.isLineSegments=!0;class Jo extends jo{constructor(e,t){super(e,t),this.type="LineLoop"}}Jo.prototype.isLineLoop=!0;class Yo extends sr{constructor(e){super(),this.type="PointsMaterial",this.color=new pr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Yo.prototype.isPointsMaterial=!0;const Qo=new Mn,Ko=new bn,$o=new pn,el=new kt;class tl extends Xn{constructor(e=new Ar,t=new Yo){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(n,r){const e=this.geometry;var i=this.matrixWorld,t=n.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),$o.copy(e.boundingSphere),$o.applyMatrix4(i),$o.radius+=t,!1!==n.ray.intersectsSphere($o)){Qo.copy(i).invert(),Ko.copy(n.ray).applyMatrix4(Qo);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){const c=e.index;var o=e.attributes.position;if(null!==c)for(let e=Math.max(0,a.start),t=Math.min(c.count,a.start+a.count);e<t;e++){var l=c.getX(e);el.fromBufferAttribute(o,l),nl(el,l,s,i,n,r,this)}else for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++)el.fromBufferAttribute(o,e),nl(el,e,s,i,n,r,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function nl(e,t,n,r,i,a,s){var o=Ko.distanceSqToPoint(e);if(o<n){const l=new kt;Ko.closestPointToPoint(e,l),l.applyMatrix4(r);r=i.ray.origin.distanceTo(l);r<i.near||r>i.far||a.push({distance:r,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}tl.prototype.isPoints=!0;Ft;Ft;class rl extends Ft{constructor(e,t,n,r,i,a,s,o,l,c,h,u){super(null,a,s,o,l,c,r,i,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}rl.prototype.isCompressedTexture=class extends Ft{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=Ne,this.minFilter=Ne,this.generateMipmaps=!1,this.needsUpdate=!0}}.prototype.isFramebufferTexture=class extends Ft{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.format=void 0!==s?s:Fe,this.minFilter=void 0!==a?a:Se,this.magFilter=void 0!==i?i:Se,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;Ft;(class extends Ft{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}}).prototype.isCanvasTexture=!0;class il extends Ar{constructor(n=1,r=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:r,thetaStart:i,thetaLength:a},r=Math.max(3,r);const t=[],s=[],o=[],l=[],c=new kt,h=new Pt;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=r;e++,t+=3){var u=i+e/r*a;c.x=n*Math.cos(u),c.y=n*Math.sin(u),s.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(s[t]/n+1)/2,h.y=(s[t+1]/n+1)/2,l.push(h.x,h.y)}for(let e=1;e<=r;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new _r(s,3)),this.setAttribute("normal",new _r(o,3)),this.setAttribute("uv",new _r(l,2))}static fromJSON(e){return new il(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class al extends Ar{constructor(m=1,g=1,v=1,x=8,y=1,e=!1,_=0,b=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:m,radiusBottom:g,height:v,radialSegments:x,heightSegments:y,openEnded:e,thetaStart:_,thetaLength:b};const M=this;x=Math.floor(x),y=Math.floor(y);const w=[],S=[],T=[],E=[];let L=0;const A=[],R=v/2;let C=0;function t(t){var n=L;const r=new Pt,i=new kt;let a=0;var s=!0===t?m:g,o=!0===t?1:-1;for(let e=1;e<=x;e++)S.push(0,R*o,0),T.push(0,o,0),E.push(.5,.5),L++;var l=L;for(let e=0;e<=x;e++){var c=e/x*b+_,h=Math.cos(c),c=Math.sin(c);i.x=s*c,i.y=R*o,i.z=s*h,S.push(i.x,i.y,i.z),T.push(0,o,0),r.x=.5*h+.5,r.y=.5*c*o+.5,E.push(r.x,r.y),L++}for(let e=0;e<x;e++){var u=n+e,d=l+e;!0===t?w.push(d,d+1,u):w.push(d+1,d,u),a+=3}M.addGroup(C,a,!0===t?1:2),C+=a}!function(){const t=new kt,n=new kt;let r=0;var i=(g-m)/v;for(let e=0;e<=y;e++){const f=[];var a=e/y,s=a*(g-m)+m;for(let e=0;e<=x;e++){var o=e/x,l=o*b+_,c=Math.sin(l),l=Math.cos(l);n.x=s*c,n.y=-a*v+R,n.z=s*l,S.push(n.x,n.y,n.z),t.set(c,i,l).normalize(),T.push(t.x,t.y,t.z),E.push(o,1-a),f.push(L++)}A.push(f)}for(let t=0;t<x;t++)for(let e=0;e<y;e++){var h=A[e][t],u=A[e+1][t],d=A[e+1][t+1],p=A[e][t+1];w.push(h,u,p),w.push(u,d,p),r+=6}M.addGroup(C,r,0),C+=r}(),!1===e&&(0<m&&t(!0),0<g&&t(!1)),this.setIndex(w),this.setAttribute("position",new _r(S,3)),this.setAttribute("normal",new _r(T,3)),this.setAttribute("uv",new _r(E,2))}static fromJSON(e){return new al(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sl extends al{constructor(e=1,t=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(e){return new sl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ol extends Ar{constructor(n=[],a=[],e=1,t=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:a,radius:e,detail:t};const h=[],u=[];function d(e){h.push(e.x,e.y,e.z)}function s(e,t){e*=3;t.x=n[0+e],t.y=n[1+e],t.z=n[2+e]}function p(e,t,n,r){r<0&&1===e.x&&(u[t]=e.x-1),0===n.x&&0===n.z&&(u[t]=r/2/Math.PI+.5)}function f(e){return Math.atan2(e.z,-e.x)}!function(t){var n=new kt,r=new kt,i=new kt;for(let e=0;e<a.length;e+=3)s(a[e+0],n),s(a[e+1],r),s(a[e+2],i),function(e,n,r,t){const i=t+1,a=[];for(let t=0;t<=i;t++){a[t]=[];const c=e.clone().lerp(r,t/i);var s=n.clone().lerp(r,t/i),o=i-t;for(let e=0;e<=o;e++)0===e&&t===i?a[t][e]=c:a[t][e]=c.clone().lerp(s,e/o)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){var l=Math.floor(e/2);e%2==0?(d(a[t][l+1]),d(a[t+1][l]),d(a[t][l])):(d(a[t][l+1]),d(a[t+1][l+1]),d(a[t+1][l]))}}(n,r,i,t)}(t),function(t){const n=new kt;for(let e=0;e<h.length;e+=3)n.x=h[e+0],n.y=h[e+1],n.z=h[e+2],n.normalize().multiplyScalar(t),h[e+0]=n.x,h[e+1]=n.y,h[e+2]=n.z}(e),function(){const t=new kt;for(let e=0;e<h.length;e+=3){t.x=h[e+0],t.y=h[e+1],t.z=h[e+2];var n=f(t)/2/Math.PI+.5,r=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(t)/Math.PI+.5;u.push(n,1-r)}(function(){const n=new kt,r=new kt,i=new kt,a=new kt,s=new Pt,o=new Pt,l=new Pt;for(let e=0,t=0;e<h.length;e+=9,t+=6){n.set(h[e+0],h[e+1],h[e+2]),r.set(h[e+3],h[e+4],h[e+5]),i.set(h[e+6],h[e+7],h[e+8]),s.set(u[t+0],u[t+1]),o.set(u[t+2],u[t+3]),l.set(u[t+4],u[t+5]),a.copy(n).add(r).add(i).divideScalar(3);var c=f(a);p(s,t+0,n,c),p(o,t+2,r,c),p(l,t+4,i,c)}})(),function(){for(let e=0;e<u.length;e+=6){var t=u[e+0],n=u[e+2],r=u[e+4],i=Math.max(t,n,r),a=Math.min(t,n,r);.9<i&&a<.1&&(t<.2&&(u[e+0]+=1),n<.2&&(u[e+2]+=1),r<.2&&(u[e+4]+=1))}}()}(),this.setAttribute("position",new _r(h,3)),this.setAttribute("normal",new _r(h.slice(),3)),this.setAttribute("uv",new _r(u,2)),0===t?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new ol(e.vertices,e.indices,e.radius,e.details)}}class ll extends ol{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ll(e.radius,e.detail)}}const cl=new kt,hl=new kt,ul=new kt,dl=new ir;class pl extends Ar{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){var n=Math.pow(10,4),r=Math.cos(wt*t);const m=e.getIndex();var i=e.getAttribute("position"),a=(m||i).count;const g=[0,0,0];var s,o,l=["a","b","c"];const v=new Array(3),x={},y=[];for(let e=0;e<a;e+=3){m?(g[0]=m.getX(e),g[1]=m.getX(e+1),g[2]=m.getX(e+2)):(g[0]=e,g[1]=e+1,g[2]=e+2);const{a:_,b,c:M}=dl;if(_.fromBufferAttribute(i,g[0]),b.fromBufferAttribute(i,g[1]),M.fromBufferAttribute(i,g[2]),dl.getNormal(ul),v[0]=`${Math.round(_.x*n)},${Math.round(_.y*n)},`+Math.round(_.z*n),v[1]=`${Math.round(b.x*n)},${Math.round(b.y*n)},`+Math.round(b.z*n),v[2]=`${Math.round(M.x*n)},${Math.round(M.y*n)},`+Math.round(M.z*n),v[0]!==v[1]&&v[1]!==v[2]&&v[2]!==v[0])for(let e=0;e<3;e++){var c=(e+1)%3,h=v[e],u=v[c],d=dl[l[e]],p=dl[l[c]],f=h+"_"+u,h=u+"_"+h;h in x&&x[h]?(ul.dot(x[h].normal)<=r&&(y.push(d.x,d.y,d.z),y.push(p.x,p.y,p.z)),x[h]=null):f in x||(x[f]={index0:g[e],index1:g[c],normal:ul.clone()})}}for(const w in x)x[w]&&({index0:s,index1:o}=x[w],cl.fromBufferAttribute(i,s),hl.fromBufferAttribute(i,o),y.push(cl.x,cl.y,cl.z),y.push(hl.x,hl.y,hl.z));this.setAttribute("position",new _r(y,3))}}}class fl{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return n}getSpacedPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let r,i=this.getPoint(0),a=0;n.push(0);for(let e=1;e<=t;e++)r=this.getPoint(e/t),a+=r.distanceTo(i),n.push(a),i=r;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var n=this.getLengths();let r=0;var i=n.length;let a;a=t||e*n[i-1];let s=0,o=i-1,l;for(;s<=o;)if(r=Math.floor(s+(o-s)/2),(l=n[r]-a)<0)s=r+1;else{if(!(0<l)){o=r;break}o=r-1}if(r=o,n[r]===a)return r/(i-1);t=n[r],e=n[r+1],t=(a-t)/(e-t);return(r+t)/(i-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),1<r&&(r=1);var i=this.getPoint(n),e=this.getPoint(r);const a=t||new(i.isVector2?Pt:kt);return a.copy(e).sub(i).normalize(),a}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(n,e){const t=new kt,r=[],i=[],a=[],s=new kt,o=new Mn;for(let e=0;e<=n;e++){var l=e/n;r[e]=this.getTangentAt(l,new kt)}i[0]=new kt,a[0]=new kt;let c=Number.MAX_VALUE;var h,u=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);u<=c&&(c=u,t.set(1,0,0)),d<=c&&(c=d,t.set(0,1,0)),p<=c&&t.set(0,0,1),s.crossVectors(r[0],t).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let e=1;e<=n;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON&&(s.normalize(),h=Math.acos(Et(r[e-1].dot(r[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,h))),a[e].crossVectors(r[e],i[e]);if(!0===e){let t=Math.acos(Et(i[0].dot(i[n]),-1,1));t/=n,0<r[0].dot(s.crossVectors(i[0],i[n]))&&(t=-t);for(let e=1;e<=n;e++)i[e].applyMatrix4(o.makeRotationAxis(r[e],t*e)),a[e].crossVectors(r[e],i[e])}return{tangents:r,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ml extends fl{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new Pt;var r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(var a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);var s=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);return 0!==this.aRotation&&(t=Math.cos(this.aRotation),a=Math.sin(this.aRotation),e=o-this.aX,s=l-this.aY,o=e*t-s*a+this.aX,l=e*a+s*t+this.aY),n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}ml.prototype.isEllipseCurve=!0;class gl extends ml{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.type="ArcCurve"}}function vl(){let i=0,a=0,s=0,o=0;function l(e,t,n,r){i=e,a=n,s=-3*e+3*t-2*n-r,o=2*e-2*t+n+r}return{initCatmullRom:function(e,t,n,r,i){l(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,a,s){i=(t-e)/i-(n-e)/(i+a)+(n-t)/a,s=(n-t)/a-(r-t)/(a+s)+(r-n)/s;l(t,n,i*=a,s*=a)},calc:function(e){var t=e*e,n=t*e;return i+a*e+s*t+o*n}}}gl.prototype.isArcCurve=!0;const xl=new kt,yl=new vl,_l=new vl,bl=new vl;class Ml extends fl{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,r=new kt){const t=r;var n=this.points,r=n.length,e=(r-(this.closed?0:1))*e;let i=Math.floor(e),a=e-i;this.closed?i+=0<i?0:(Math.floor(Math.abs(i)/r)+1)*r:0===a&&i===r-1&&(i=r-2,a=1);let s,o;s=this.closed||0<i?n[(i-1)%r]:(xl.subVectors(n[0],n[1]).add(n[0]),xl);const l=n[i%r],c=n[(i+1)%r];if(o=this.closed||i+2<r?n[(i+2)%r]:(xl.subVectors(n[r-1],n[r-2]).add(n[r-1]),xl),"centripetal"===this.curveType||"chordal"===this.curveType){r="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),r),t=Math.pow(l.distanceToSquared(c),r),n=Math.pow(c.distanceToSquared(o),r);t<1e-4&&(t=1),e<1e-4&&(e=t),n<1e-4&&(n=t),yl.initNonuniformCatmullRom(s.x,l.x,c.x,o.x,e,t,n),_l.initNonuniformCatmullRom(s.y,l.y,c.y,o.y,e,t,n),bl.initNonuniformCatmullRom(s.z,l.z,c.z,o.z,e,t,n)}else"catmullrom"===this.curveType&&(yl.initCatmullRom(s.x,l.x,c.x,o.x,this.tension),_l.initCatmullRom(s.y,l.y,c.y,o.y,this.tension),bl.initCatmullRom(s.z,l.z,c.z,o.z,this.tension));return t.set(yl.calc(a),_l.calc(a),bl.calc(a)),t}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new kt).fromArray(r))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function wl(e,t,n,r,i){var a=.5*(r-t),t=.5*(i-n),i=e*e;return(2*n-2*r+a+t)*(e*i)+(-3*n+3*r-2*a-t)*i+a*e+n}function Sl(e,t,n,r){return(i=1-(i=e))*i*t+2*(1-e)*e*n+e*e*r;var i}function Tl(e,t,n,r,i){return(a=1-(a=e))*a*a*t+3*(t=1-e)*t*e*n+3*(1-e)*e*e*r+e*e*e*i;var a}class El extends fl{constructor(e=new Pt,t=new Pt,n=new Pt,r=new Pt){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Pt){const n=t;var r=this.v0,i=this.v1,a=this.v2,t=this.v3;return n.set(Tl(e,r.x,i.x,a.x,t.x),Tl(e,r.y,i.y,a.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}El.prototype.isCubicBezierCurve=Ml.prototype.isCatmullRomCurve3=!0;class Ll extends fl{constructor(e=new kt,t=new kt,n=new kt,r=new kt){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new kt){const n=t;var r=this.v0,i=this.v1,a=this.v2,t=this.v3;return n.set(Tl(e,r.x,i.x,a.x,t.x),Tl(e,r.y,i.y,a.y,t.y),Tl(e,r.z,i.z,a.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Al extends fl{constructor(e=new Pt,t=new Pt){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Pt){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Pt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Al.prototype.isLineCurve=Ll.prototype.isCubicBezierCurve3=!0;fl;class Rl extends fl{constructor(e=new Pt,t=new Pt,n=new Pt){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Pt){const n=t;var r=this.v0,i=this.v1,t=this.v2;return n.set(Sl(e,r.x,i.x,t.x),Sl(e,r.y,i.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rl.prototype.isQuadraticBezierCurve=!0;class Cl extends fl{constructor(e=new kt,t=new kt,n=new kt){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new kt){const n=t;var r=this.v0,i=this.v1,t=this.v2;return n.set(Sl(e,r.x,i.x,t.x),Sl(e,r.y,i.y,t.y),Sl(e,r.z,i.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Cl.prototype.isQuadraticBezierCurve3=!0;class Pl extends fl{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Pt){const n=t;var r=this.points,i=(r.length-1)*e,a=Math.floor(i),s=i-a,t=r[0===a?a:a-1],e=r[a],i=r[a>r.length-2?r.length-1:a+1],a=r[a>r.length-3?r.length-1:a+2];return n.set(wl(s,t.x,e.x,i.x,a.x),wl(s,t.y,e.y,i.y,a.y)),n}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new Pt).fromArray(r))}return this}}Pl.prototype.isSplineCurve=!0;var Dl=Object.freeze({__proto__:null,ArcCurve:gl,CatmullRomCurve3:Ml,CubicBezierCurve:El,CubicBezierCurve3:Ll,EllipseCurve:ml,LineCurve:Al,LineCurve3:class extends fl{constructor(e=new kt,t=new kt){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new kt){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:Rl,QuadraticBezierCurve3:Cl,SplineCurve:Pl});class Nl extends fl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Al(t,e))}getPoint(e,t){var n=e*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){var a=r[i]-n;const o=this.curves[i];var s=o.getLength();return o.getPointAt(0===s?0:1-a/s,t)}i++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let r=0;for(let e=0,t=this.curves.length;e<t;e++)r+=this.curves[e].getLength(),n.push(r);return this.cacheLengths=n,n}getSpacedPoints(t=40){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n}getPoints(n=12){const r=[];let i;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l&&l.isEllipseCurve?2*n:l&&(l.isLineCurve||l.isLineCurve3)?1:l&&l.isSplineCurve?n*l.points.length:n,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];i&&i.equals(o)||(r.push(o),i=o)}}return this.autoClose&&1<r.length&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const r=n.curves[e];this.curves.push(r.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const r=this.curves[e];n.curves.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var r=n.curves[e];this.curves.push((new Dl[r.type]).fromJSON(r))}return this}}class Il extends Nl{constructor(e){super(),this.type="Path",this.currentPoint=new Pt,e&&this.setFromPoints(e)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var n=new Al(this.currentPoint.clone(),new Pt(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){t=new Rl(this.currentPoint.clone(),new Pt(e,t),new Pt(n,r));return this.curves.push(t),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){r=new El(this.currentPoint.clone(),new Pt(e,t),new Pt(n,r),new Pt(i,a));return this.curves.push(r),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new Pl(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,r,i,a,s,o),this}absellipse(e,t,n,r,i,a,s,o){const l=new ml(e,t,n,r,i,a,s,o);if(0<this.curves.length){const c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);o=l.getPoint(1);return this.currentPoint.copy(o),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class zl extends Il{constructor(e){super(e),this.uuid=Tt(),this.type="Shape",this.holes=[]}getPointsHoles(n){const r=[];for(let e=0,t=this.holes.length;e<t;e++)r[e]=this.holes[e].getPoints(n);return r}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const r=n.holes[e];this.holes.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const r=this.holes[e];n.holes.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var r=n.holes[e];this.holes.push((new Il).fromJSON(r))}return this}}const Ol={triangulate:function(t,e,n=2){var r=e&&e.length,i=r?e[0]*n:t.length;let a=Ul(t,0,i,n,!0);var s=[];if(!a||a.next===a.prev)return s;let o,l,c,h,u,d,p;if(r&&(a=function(e,t,n,r){const i=[];let a,s,o,l,c;for(a=0,s=t.length;a<s;a++)o=t[a]*r,l=a<s-1?t[a+1]*r:e.length,c=Ul(e,o,l,r,!1),c===c.next&&(c.steiner=!0),i.push(function(e){let t=e,n=e;for(;(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next,t!==e;);return n}(c));for(i.sort(Bl),a=0;a<i.length;a++)!function(e,t){(t=function(e,t){let n=t;var r=e.x,i=e.y;let a=-1/0,s;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){var o=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=r&&o>a){if((a=o)===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}}while(n=n.next,n!==t);if(!s)return null;if(r===a)return s;var l=s,c=s.x,h=s.y;let u=1/0,d;n=s;for(;r>=n.x&&n.x>=c&&r!==n.x&&Vl(i<h?r:a,i,c,h,i<h?a:r,i,n.x,n.y)&&(d=Math.abs(i-n.y)/(r-n.x),Zl(n,e)&&(d<u||d===u&&(n.x>s.x||n.x===s.x&&function(e,t){return Wl(e.prev,e,t.prev)<0&&Wl(t.next,e,e.next)<0}(s,n)))&&(s=n,u=d)),n=n.next,n!==l;);return s}(e,t))&&(e=Jl(t,e),Fl(t,t.next),Fl(e,e.next))}(i[a],n),n=Fl(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<i;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return Hl(a,s,n,o,l,p),s}};function Ul(e,t,n,r,i){let a,s;if(i===0<function(n,r,i,a){let s=0;for(let e=r,t=i-a;e<i;e+=a)s+=(n[t]-n[e])*(n[e+1]+n[t+1]),t=e;return s}(e,t,n,r))for(a=t;a<n;a+=r)s=Yl(a,e[a],e[a+1],s);else for(a=n-r;a>=t;a-=r)s=Yl(a,e[a],e[a+1],s);return s&&kl(s,s.next)&&(Ql(s),s=s.next),s}function Fl(e,t){if(!e)return e;t=t||e;let n=e,r;do{if(r=!1,n.steiner||!kl(n,n.next)&&0!==Wl(n.prev,n,n.next))n=n.next;else{if(Ql(n),n=t=n.prev,n===n.next)break;r=!0}}while(r||n!==t);return t}function Hl(r,i,a,s,o,l,c){if(r){!c&&l&&function(e,t,n,r){let i=e;for(;null===i.z&&(i.z=Gl(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next,i!==e;);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,n,r,i,a,s,o,l,c=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,r=n,o=0,t=0;t<c&&(o++,r=r.nextZ,r);t++);for(l=c;0<o||0<l&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}}while(a.nextZ=null,c*=2,1<s)}(i)}(r,s,o,l);let e=r,t,n;for(;r.prev!==r.next;)if(t=r.prev,n=r.next,l?function(e,t,n,r){var i=e.prev,a=e,s=e.next;if(0<=Wl(i,a,s))return!1;var o=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,l=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,c=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,h=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,u=Gl(o,l,t,n,r),d=Gl(c,h,t,n,r);let p=e.prevZ,f=e.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&Vl(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Wl(p.prev,p,p.next))return!1;if(p=p.prevZ,f!==e.prev&&f!==e.next&&Vl(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=Wl(f.prev,f,f.next))return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Vl(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Wl(p.prev,p,p.next))return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&Vl(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=Wl(f.prev,f,f.next))return!1;f=f.nextZ}return!0}(r,s,o,l):function(e){var t=e.prev,n=e,r=e.next;if(0<=Wl(t,n,r))return!1;let i=e.next.next;for(;i!==e.prev;){if(Vl(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&0<=Wl(i.prev,i,i.next))return!1;i=i.next}return!0}(r))i.push(t.i/a),i.push(r.i/a),i.push(n.i/a),Ql(r),r=n.next,e=n.next;else if((r=n)===e){c?1===c?Hl(r=function(e,t,n){let r=e;do{var i=r.prev,a=r.next.next;!kl(i,a)&&jl(i,r,r.next,a)&&Zl(i,a)&&Zl(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),Ql(r),Ql(r.next),r=e=a),r=r.next}while(r!==e);return Fl(r)}(Fl(r),i,a),i,a,s,o,l,2):2===c&&function(e,t,n,r,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&jl(n,n.next,e,t))return!0}while(n=n.next,n!==e);return!1}(e,t)&&(Zl(e,t)&&Zl(t,e)&&function(e,t){let n=e,r=!1;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next,n!==e;);return r}(e,t)&&(Wl(e.prev,e,t.prev)||Wl(e,t.prev,t))||kl(e,t)&&0<Wl(e.prev,e,e.next)&&0<Wl(t.prev,t,t.next))}(s,e)){var o=Jl(s,e);return s=Fl(s,s.next),o=Fl(o,o.next),Hl(s,t,n,r,i,a),Hl(o,t,n,r,i,a)}e=e.next}}while(s=s.next,s!==e)}(r,i,a,s,o,l):Hl(Fl(r),i,a,s,o,l,1);break}}}function Bl(e,t){return e.x-t.x}function Gl(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Vl(e,t,n,r,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(r-o)-(n-s)*(t-o)&&0<=(n-s)*(a-o)-(i-s)*(r-o)}function Wl(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function kl(e,t){return e.x===t.x&&e.y===t.y}function jl(e,t,n,r){var i=Xl(Wl(e,t,n)),a=Xl(Wl(e,t,r)),s=Xl(Wl(n,r,e)),o=Xl(Wl(n,r,t));return i!==a&&s!==o||(0===i&&ql(e,n,t)||(0===a&&ql(e,r,t)||(0===s&&ql(n,e,r)||!(0!==o||!ql(n,t,r)))))}function ql(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Xl(e){return 0<e?1:e<0?-1:0}function Zl(e,t){return Wl(e.prev,e,e.next)<0?0<=Wl(e,t,e.next)&&0<=Wl(e,e.prev,t):Wl(e,t,e.prev)<0||Wl(e,e.next,t)<0}function Jl(e,t){const n=new Kl(e.i,e.x,e.y),r=new Kl(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function Yl(e,t,n,r){const i=new Kl(e,t,n);return r?(i.next=r.next,(i.prev=r).next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Ql(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Kl(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class $l{static area(n){var r=n.length;let i=0;for(let e=r-1,t=0;t<r;e=t++)i+=n[e].x*n[t].y-n[t].x*n[e].y;return.5*i}static isClockWise(e){return $l.area(e)<0}static triangulateShape(e,t){var n=[];const r=[],i=[];ec(e),tc(n,e);let a=e.length;t.forEach(ec);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,tc(n,t[e]);const s=Ol.triangulate(n,r);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function ec(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function tc(t,n){for(let e=0;e<n.length;e++)t.push(n[e].x),t.push(n[e].y)}class nc extends Ar{constructor(n=new zl([new Pt(.5,.5),new Pt(-.5,.5),new Pt(-.5,-.5),new Pt(.5,-.5)]),K={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:K},n=Array.isArray(n)?n:[n];const $=this,ee=[],te=[];for(let e=0,t=n.length;e<t;e++)!function(e){const r=[],t=void 0!==K.curveSegments?K.curveSegments:12,o=void 0!==K.steps?K.steps:1;let n=void 0!==K.depth?K.depth:1,s=void 0===K.bevelEnabled||K.bevelEnabled,i=void 0!==K.bevelThickness?K.bevelThickness:.2,a=void 0!==K.bevelSize?K.bevelSize:i-.1,l=void 0!==K.bevelOffset?K.bevelOffset:0,c=void 0!==K.bevelSegments?K.bevelSegments:3;const h=K.extrudePath,u=void 0!==K.UVGenerator?K.UVGenerator:rc;void 0!==K.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),n=K.amount);let d,p=!1,f,m,g,v;h&&(d=h.getSpacedPoints(o),p=!0,s=!1,f=h.computeFrenetFrames(o,!1),m=new kt,g=new kt,v=new kt);s||(c=0,i=0,a=0,l=0);e=e.extractPoints(t);let x=e.shape;const y=e.holes,_=!$l.isClockWise(x);if(_){x=x.reverse();for(let e=0,t=y.length;e<t;e++){const Q=y[e];$l.isClockWise(Q)&&(y[e]=Q.reverse())}}const b=$l.triangulateShape(x,y),M=x;for(let e=0,t=y.length;e<t;e++){var w=y[e];x=x.concat(w)}function S(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const T=x.length,E=b.length;function L(e,t,n){let r,i,a;var s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,c=n.y-e.y,h=s*s+o*o;if(Math.abs(s*c-o*l)>Number.EPSILON){var u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-o/u,u=t.y+s/u,d=((n.x-c/d-p)*c-(n.y+l/d-u)*l)/(s*c-o*l);r=p+s*d-e.x,i=u+o*d-e.y;e=r*r+i*i;if(e<=2)return new Pt(r,i);a=Math.sqrt(e/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),a=e?(r=-o,i=s,Math.sqrt(h)):(r=s,i=o,Math.sqrt(h/2))}return new Pt(r/a,i/a)}const A=[];for(let e=0,t=M.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),A[e]=L(M[e],M[n],M[r]);const R=[];let C,P=A.concat();for(let e=0,t=y.length;e<t;e++){var D=y[e];C=[];for(let e=0,t=D.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),C[e]=L(D[e],D[n],D[r]);R.push(C),P=P.concat(C)}for(let e=0;e<c;e++){var N=e/c,I=i*Math.cos(N*Math.PI/2);const F=a*Math.sin(N*Math.PI/2)+l;for(let e=0,t=M.length;e<t;e++){var z=S(M[e],A[e],F);X(z.x,z.y,-I)}for(let e=0,t=y.length;e<t;e++){var O=y[e];C=R[e];for(let e=0,t=O.length;e<t;e++){var U=S(O[e],C[e],F);X(U.x,U.y,-I)}}}const F=a+l;for(let e=0;e<T;e++){var H=s?S(x[e],P[e],F):x[e];p?(g.copy(f.normals[0]).multiplyScalar(H.x),m.copy(f.binormals[0]).multiplyScalar(H.y),v.copy(d[0]).add(g).add(m),X(v.x,v.y,v.z)):X(H.x,H.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<T;e++){var B=s?S(x[e],P[e],F):x[e];p?(g.copy(f.normals[t]).multiplyScalar(B.x),m.copy(f.binormals[t]).multiplyScalar(B.y),v.copy(d[t]).add(g).add(m),X(v.x,v.y,v.z)):X(B.x,B.y,n/o*t)}for(let e=c-1;0<=e;e--){var G=e/c,V=i*Math.cos(G*Math.PI/2);const F=a*Math.sin(G*Math.PI/2)+l;for(let e=0,t=M.length;e<t;e++){var W=S(M[e],A[e],F);X(W.x,W.y,n+V)}for(let e=0,t=y.length;e<t;e++){var k=y[e];C=R[e];for(let e=0,t=k.length;e<t;e++){var j=S(k[e],C[e],F);p?X(j.x,j.y+d[o-1].y,d[o-1].x+V):X(j.x,j.y,n+V)}}}function q(e,r){let t=e.length;for(;0<=--t;){var i=t;let n=t-1;n<0&&(n=e.length-1);for(let e=0,t=o+2*c;e<t;e++){var a=T*e,s=T*(e+1);!function(e,t,n,r){J(e),J(t),J(r),J(t),J(n),J(r);r=ee.length/3,r=u.generateSideWallUV($,ee,r-6,r-3,r-2,r-1);Y(r[0]),Y(r[1]),Y(r[3]),Y(r[1]),Y(r[2]),Y(r[3])}(r+i+a,r+n+a,r+n+s,r+i+s)}}}function X(e,t,n){r.push(e),r.push(t),r.push(n)}function Z(e,t,n){J(e),J(t),J(n);n=ee.length/3,n=u.generateTopUV($,ee,n-3,n-2,n-1);Y(n[0]),Y(n[1]),Y(n[2])}function J(e){ee.push(r[3*e+0]),ee.push(r[3*e+1]),ee.push(r[3*e+2])}function Y(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*T;for(let e=0;e<E;e++){var n=b[e];Z(n[2]+t,n[1]+t,n[0]+t)}e=o+2*c,t=T*e;for(let e=0;e<E;e++){var r=b[e];Z(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<E;e++){var i=b[e];Z(i[2],i[1],i[0])}for(let e=0;e<E;e++){var a=b[e];Z(a[0]+T*o,a[1]+T*o,a[2]+T*o)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let n=0;q(M,n),n+=M.length;for(let e=0,t=y.length;e<t;e++){var r=y[e];q(r,n),n+=r.length}$.addGroup(e,ee.length/3-e,1)}()}(n[e]);this.setAttribute("position",new _r(ee,3)),this.setAttribute("uv",new _r(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON();return function(n,e,r){if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);void 0!==e.extrudePath&&(r.options.extrudePath=e.extrudePath.toJSON());return r}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(n,r){const i=[];for(let e=0,t=n.shapes.length;e<t;e++){var a=r[n.shapes[e]];i.push(a)}var e=n.options.extrudePath;return void 0!==e&&(n.options.extrudePath=(new Dl[e.type]).fromJSON(e)),new nc(i,n.options)}}const rc={generateTopUV:function(e,t,n,r,i){var a=t[3*n],s=t[3*n+1],o=t[3*r],n=t[3*r+1],r=t[3*i],i=t[3*i+1];return[new Pt(a,s),new Pt(o,n),new Pt(r,i)]},generateSideWallUV:function(e,t,n,r,i,a){var s=t[3*n],o=t[3*n+1],l=t[3*n+2],c=t[3*r],h=t[3*r+1],u=t[3*r+2],d=t[3*i],p=t[3*i+1],n=t[3*i+2],r=t[3*a],i=t[3*a+1],a=t[3*a+2];return Math.abs(o-h)<Math.abs(s-c)?[new Pt(s,1-l),new Pt(c,1-u),new Pt(d,1-n),new Pt(r,1-a)]:[new Pt(o,1-l),new Pt(h,1-u),new Pt(p,1-n),new Pt(i,1-a)]}};class ic extends ol{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ic(e.radius,e.detail)}}class ac extends Ar{constructor(n=[new Pt(0,.5),new Pt(.5,0),new Pt(0,-.5)],r=12,e=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:r,phiStart:e,phiLength:i},r=Math.floor(r),i=Et(i,0,2*Math.PI);const a=[],s=[],o=[],l=[],c=[];var h=1/r;const u=new kt,d=new Pt,t=new kt,p=new kt,f=new kt;let m=0,g=0;for(let e=0;e<=n.length-1;e++)switch(e){case 0:m=n[e+1].x-n[e].x,g=n[e+1].y-n[e].y,t.x=+g,t.y=-m,t.z=0*g,f.copy(t),t.normalize(),l.push(t.x,t.y,t.z);break;case n.length-1:l.push(f.x,f.y,f.z);break;default:m=n[e+1].x-n[e].x,g=n[e+1].y-n[e].y,t.x=+g,t.y=-m,t.z=0*g,p.copy(t),t.x+=f.x,t.y+=f.y,t.z+=f.z,t.normalize(),l.push(t.x,t.y,t.z),f.copy(p)}for(let t=0;t<=r;t++){var v=e+t*h*i,x=Math.sin(v),y=Math.cos(v);for(let e=0;e<=n.length-1;e++){u.x=n[e].x*x,u.y=n[e].y,u.z=n[e].x*y,s.push(u.x,u.y,u.z),d.x=t/r,d.y=e/(n.length-1),o.push(d.x,d.y);var _=l[3*e+0]*x,b=l[3*e+1],M=l[3*e+0]*y;c.push(_,b,M)}}for(let t=0;t<r;t++)for(let e=0;e<n.length-1;e++){var w=e+t*n.length,S=w+n.length,T=w+n.length+1,E=w+1;a.push(w,S,E),a.push(S,T,E)}this.setIndex(a),this.setAttribute("position",new _r(s,3)),this.setAttribute("uv",new _r(o,2)),this.setAttribute("normal",new _r(c,3))}static fromJSON(e){return new ac(e.points,e.segments,e.phiStart,e.phiLength)}}class sc extends ol{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sc(e.radius,e.detail)}}class oc extends Ar{constructor(e=.5,t=1,n=8,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n);const s=[],o=[],l=[],c=[];let h=e;var u=(t-e)/(r=Math.max(1,r));const d=new kt,p=new Pt;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){var f=i+e/n*a;d.x=h*Math.cos(f),d.y=h*Math.sin(f),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<r;e++){var m=e*(n+1);for(let e=0;e<n;e++){var g=e+m,v=g+n+1,x=g+n+2,y=g+1;s.push(g,v,y),s.push(v,x,y)}}this.setIndex(s),this.setAttribute("position",new _r(o,3)),this.setAttribute("normal",new _r(l,3)),this.setAttribute("uv",new _r(c,2))}static fromJSON(e){return new oc(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class lc extends Ar{constructor(t=new zl([new Pt(0,.5),new Pt(-.5,-.5),new Pt(.5,-.5)]),d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],f=[],m=[],g=[];let n=0,v=0;if(!1===Array.isArray(t))r(t);else for(let e=0;e<t.length;e++)r(t[e]),this.addGroup(n,v,e),n+=v,v=0;function r(e){var n=f.length/3,e=e.extractPoints(d);let r=e.shape;const i=e.holes;!1===$l.isClockWise(r)&&(r=r.reverse());for(let e=0,t=i.length;e<t;e++){const u=i[e];!0===$l.isClockWise(u)&&(i[e]=u.reverse())}var a=$l.triangulateShape(r,i);for(let e=0,t=i.length;e<t;e++){var s=i[e];r=r.concat(s)}for(let e=0,t=r.length;e<t;e++){var o=r[e];f.push(o.x,o.y,0),m.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],c=l[0]+n,h=l[1]+n,l=l[2]+n;p.push(c,h,l),v+=3}}this.setIndex(p),this.setAttribute("position",new _r(f,3)),this.setAttribute("normal",new _r(m,3)),this.setAttribute("uv",new _r(g,2))}toJSON(){var e=super.toJSON();return function(n,r){if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);return r}(this.parameters.shapes,e)}static fromJSON(n,r){const i=[];for(let e=0,t=n.shapes.length;e<t;e++){var a=r[n.shapes[e]];i.push(a)}return new lc(i,n.curveSegments)}}class cc extends Ar{constructor(n=1,r=32,i=16,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:r,heightSegments:i,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},r=Math.max(3,Math.floor(r)),i=Math.max(2,Math.floor(i));var c=Math.min(o+l,Math.PI);let h=0;const u=[],d=new kt,p=new kt,f=[],m=[],g=[],v=[];for(let e=0;e<=i;e++){const S=[];var x=e/i;let t=0;0==e&&0==o?t=.5/r:e==i&&c==Math.PI&&(t=-.5/r);for(let e=0;e<=r;e++){var y=e/r;d.x=-n*Math.cos(a+y*s)*Math.sin(o+x*l),d.y=n*Math.cos(o+x*l),d.z=n*Math.sin(a+y*s)*Math.sin(o+x*l),m.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(y+t,1-x),S.push(h++)}u.push(S)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){var _=u[t][e+1],b=u[t][e],M=u[t+1][e],w=u[t+1][e+1];(0!==t||0<o)&&f.push(_,b,w),(t!==i-1||c<Math.PI)&&f.push(b,M,w)}this.setIndex(f),this.setAttribute("position",new _r(m,3)),this.setAttribute("normal",new _r(g,3)),this.setAttribute("uv",new _r(v,2))}static fromJSON(e){return new cc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class hc extends ol{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hc(e.radius,e.detail)}}class uc extends Ar{constructor(n=1,r=.4,i=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:r,radialSegments:i,tubularSegments:a,arc:s},i=Math.floor(i),a=Math.floor(a);const o=[],l=[],c=[],h=[],u=new kt,d=new kt,p=new kt;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var f=e/a*s,m=t/i*Math.PI*2;d.x=(n+r*Math.cos(m))*Math.cos(f),d.y=(n+r*Math.cos(m))*Math.sin(f),d.z=r*Math.sin(m),l.push(d.x,d.y,d.z),u.x=n*Math.cos(f),u.y=n*Math.sin(f),p.subVectors(d,u).normalize(),c.push(p.x,p.y,p.z),h.push(e/a),h.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,x=(a+1)*(t-1)+e,y=(a+1)*t+e;o.push(g,v,y),o.push(v,x,y)}this.setIndex(o),this.setAttribute("position",new _r(l,3)),this.setAttribute("normal",new _r(c,3)),this.setAttribute("uv",new _r(h,2))}static fromJSON(e){return new uc(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class dc extends Ar{constructor(e=1,n=.4,r=64,i=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:r,radialSegments:i,p:a,q:s},r=Math.floor(r),i=Math.floor(i);const o=[],l=[],c=[],h=[],u=new kt,d=new kt;var p=new kt,f=new kt;const m=new kt,g=new kt,v=new kt;for(let t=0;t<=r;++t){var x=t/r*a*Math.PI*2;T(x,a,s,e,p),T(.01+x,a,s,e,f),g.subVectors(f,p),v.addVectors(f,p),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let e=0;e<=i;++e){var y=e/i*Math.PI*2,_=-n*Math.cos(y),y=n*Math.sin(y);u.x=p.x+(_*v.x+y*m.x),u.y=p.y+(_*v.y+y*m.y),u.z=p.z+(_*v.z+y*m.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),c.push(d.x,d.y,d.z),h.push(t/r),h.push(e/i)}}for(let t=1;t<=r;t++)for(let e=1;e<=i;e++){var b=(i+1)*(t-1)+(e-1),M=(i+1)*t+(e-1),w=(i+1)*t+e,S=(i+1)*(t-1)+e;o.push(b,M,S),o.push(M,w,S)}function T(e,t,n,r,i){var a=Math.cos(e),s=Math.sin(e),t=n/t*e,e=Math.cos(t);i.x=r*(2+e)*.5*a,i.y=r*(2+e)*s*.5,i.z=r*Math.sin(t)*.5}this.setIndex(o),this.setAttribute("position",new _r(l,3)),this.setAttribute("normal",new _r(c,3)),this.setAttribute("uv",new _r(h,2))}static fromJSON(e){return new dc(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class pc extends Ar{constructor(a=new Cl(new kt(-1,-1,0),new kt(-1,1,0),new kt(1,1,0)),s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const c=a.computeFrenetFrames(s,e);this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;const h=new kt,u=new kt,n=new Pt;let d=new kt;const p=[],f=[],r=[],m=[];function t(e){d=a.getPointAt(e/s,d);var t=c.normals[e],n=c.binormals[e];for(let e=0;e<=l;e++){var r=e/l*Math.PI*2,i=Math.sin(r),r=-Math.cos(r);u.x=r*t.x+i*n.x,u.y=r*t.y+i*n.y,u.z=r*t.z+i*n.z,u.normalize(),f.push(u.x,u.y,u.z),h.x=d.x+o*u.x,h.y=d.y+o*u.y,h.z=d.z+o*u.z,p.push(h.x,h.y,h.z)}}!function(){for(let e=0;e<s;e++)t(e);t(!1===e?s:0),function(){for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)n.x=t/s,n.y=e/l,r.push(n.x,n.y)}(),function(){for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var n=(l+1)*(t-1)+(e-1),r=(l+1)*t+(e-1),i=(l+1)*t+e,a=(l+1)*(t-1)+e;m.push(n,r,a),m.push(r,i,a)}}()}(),this.setIndex(m),this.setAttribute("position",new _r(p,3)),this.setAttribute("normal",new _r(f,3)),this.setAttribute("uv",new _r(r,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new pc((new Dl[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class fc extends Ar{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const u=[];var r=new Set;const d=new kt,p=new kt;if(null!==e.index){var i=e.attributes.position;const f=e.index;let n=e.groups;0===n.length&&(n=[{start:0,count:f.count,materialIndex:0}]);for(let e=0,t=n.length;e<t;++e){var a=n[e],s=a.start;for(let t=s,e=s+a.count;t<e;t+=3)for(let e=0;e<3;e++){var o=f.getX(t+e),l=f.getX(t+(e+1)%3);d.fromBufferAttribute(i,o),p.fromBufferAttribute(i,l),!0===mc(d,p,r)&&(u.push(d.x,d.y,d.z),u.push(p.x,p.y,p.z))}}}else{var n=e.attributes.position;for(let t=0,e=n.count/3;t<e;t++)for(let e=0;e<3;e++){var c=3*t+e,h=3*t+(e+1)%3;d.fromBufferAttribute(n,c),p.fromBufferAttribute(n,h),!0===mc(d,p,r)&&(u.push(d.x,d.y,d.z),u.push(p.x,p.y,p.z))}}this.setAttribute("position",new _r(u,3))}}}function mc(e,t,n){var r=`${e.x},${e.y},${e.z}-${t.x},${t.y},`+t.z,e=`${t.x},${t.y},${t.z}-${e.x},${e.y},`+e.z;return!0!==n.has(r)&&!0!==n.has(e)&&(n.add(r,e),!0)}Zr,Zr,il,il,sl,sl,al,al,ll,ll,pl,nc,nc,ic,ic,ac,ac,sc,sc,pi,pi,ol,ol,oc,oc,lc,lc,cc,cc,hc,hc,uc,uc,dc,dc,pc,pc,fc;class gc extends sr{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new pr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}gc.prototype.isMeshStandardMaterial=!0;Ho;lo,Si,Kr,Yo,Bs,Gs,fr,Ho;const vc={arraySlice:function(e,t,n){return vc.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){var t=n.length;const r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort(function(e,t){return n[e]-n[t]}),r},sortedArray:function(n,r,i){var a=n.length;const s=new n.constructor(a);for(let e=0,t=0;t!==a;++e){var o=i[e]*r;for(let e=0;e!==r;++e)s[t++]=n[o+e]}return s},flattenJSON:function(t,n,r,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;e=s[i],void 0!==e&&(n.push(s.time),r.push.apply(r,e)),s=t[a++],void 0!==s;);else if(void 0!==e.toArray)for(;e=s[i],void 0!==e&&(n.push(s.time),e.toArray(r,r.length)),s=t[a++],void 0!==s;);else for(;e=s[i],void 0!==e&&(n.push(s.time),r.push(e)),s=t[a++],void 0!==s;);}},subclip:function(e,t,n,r,i=30){const a=e.clone();a.name=t;const s=[];for(let e=0;e<a.tracks.length;++e){const h=a.tracks[e];var o=h.getValueSize();const u=[],d=[];for(let t=0;t<h.times.length;++t){var l=h.times[t]*i;if(!(l<n||r<=l)){u.push(h.times[t]);for(let e=0;e<o;++e)d.push(h.values[t*o+e])}}0!==u.length&&(h.times=vc.convertArray(u,h.times.constructor),h.values=vc.convertArray(d,h.values.constructor),s.push(h))}a.tracks=s;let c=1/0;for(let e=0;e<a.tracks.length;++e)c>a.tracks[e].times[0]&&(c=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*c);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,r=30){var i=n.tracks.length,a=e/(r=r<=0?30:r);for(let e=0;e<i;++e){const m=n.tracks[e],g=m.ValueTypeName;if("bool"!==g&&"string"!==g){const v=t.tracks.find(function(e){return e.name===m.name&&e.ValueTypeName===g});if(void 0!==v){let e=0;var s=m.getValueSize();m.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=s/3);let t=0;var o=v.getValueSize();v.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=o/3);var l=m.times.length-1;let n;if(a<=m.times[0]){var c=e,h=s-e;n=vc.arraySlice(m.values,c,h)}else if(a>=m.times[l]){var l=l*s+e,u=l+s-e;n=vc.arraySlice(m.values,l,u)}else{const x=m.createInterpolant();u=e,s=s-e;x.evaluate(a),n=vc.arraySlice(x.resultBuffer,u,s)}if("quaternion"===g){const y=(new Wt).fromArray(n).normalize().conjugate();y.toArray(n)}var d=v.times.length;for(let e=0;e<d;++e){var p=e*o+t;if("quaternion"===g)Wt.multiplyQuaternionsFlat(v.values,p,n,0,v.values,p);else{var f=o-2*t;for(let e=0;e<f;++e)v.values[p+e]-=n[e]}}}}}return t.blendMode=2501,t}};class xc{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){var n=this.parameterPositions;let r=this._cachedIndex,i=n[r],a=n[r-1];e:{t:{let e;n:{r:if(!(t<i)){for(var s=r+2;;){if(void 0===i){if(t<a)break r;return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,t,a)}if(r===s)break;if(a=i,i=n[++r],t<i)break t}e=n.length;break n}if(t>=a)break e;var o=n[1];t<o&&(r=2,a=o);for(var l=r-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(r===l)break;if(i=a,a=n[--r-1],t>=a)break t}e=r,r=0}for(;r<e;){var c=r+e>>>1;t<n[c]?e=c:r=1+c}if(i=n[r],a=n[r-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,a,t)}this._cachedIndex=r,this.intervalChanged_(r,a,i)}return this.interpolate_(r,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}xc.prototype.beforeStart_=xc.prototype.copySampleValue_,xc.prototype.afterEnd_=xc.prototype.copySampleValue_;class yc extends xc{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ft,endingEnd:ft}}intervalChanged_(e,t,n){var r=this.parameterPositions;let i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case mt:i=e,s=2*t-n;break;case 2402:i=r.length-2,s=t+r[i]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case mt:a=e,o=2*n-t;break;case 2402:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}var l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*c,this._offsetNext=a*c}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p;var g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,y=d*m-d*f;for(let e=0;e!==s;++e)i[e]=g*a[c+e]+v*a[l+e]+x*a[o+e]+y*a[h+e];return i}}class _c extends xc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=(n-t)/(r-t),h=1-c;for(let e=0;e!==s;++e)i[e]=a[l+e]*h+a[o+e]*c;return i}}class bc extends xc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Mc{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=vc.convertArray(t,this.TimeBufferType),this.values=vc.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;var r;return t.toJSON!==this.toJSON?n=t.toJSON(e):(n={name:e.name,times:vc.convertArray(e.times,Array),values:vc.convertArray(e.values,Array)},(r=e.getInterpolation())!==e.DefaultInterpolation&&(n.interpolation=r)),n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new bc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new _c(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new yc(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]+=n}return this}scale(n){if(1!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]*=n}return this}trim(e,t){var n,r=this.times,i=r.length;let a=0,s=i-1;for(;a!==i&&r[a]<e;)++a;for(;-1!==s&&r[s]>t;)--s;return++s,0===a&&s===i||(a>=s&&(s=Math.max(s,1),a=s-1),n=this.getValueSize(),this.times=vc.arraySlice(r,a,s),this.values=vc.arraySlice(this.values,a*n,s*n)),this}validate(){let n=!0;var e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);var t=this.times,r=this.values,i=t.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let a=null;for(let e=0;e!==i;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),n=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),n=!1;break}a=s}if(void 0!==r&&vc.isTypedArray(r))for(let e=0,t=r.length;e!==t;++e){var o=r[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),n=!1;break}}return n}optimize(){const n=vc.arraySlice(this.times),r=vc.arraySlice(this.values),i=this.getValueSize(),a=2302===this.getInterpolation(),s=n.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=n[e];if(l!==n[e+1]&&(1!==e||l!==n[0]))if(a)t=!0;else{var c=e*i,h=c-i,u=c+i;for(let e=0;e!==i;++e){var d=r[c+e];if(d!==r[h+e]||d!==r[u+e]){t=!0;break}}}if(t){if(e!==o){n[o]=n[e];var p=e*i,f=o*i;for(let e=0;e!==i;++e)r[f+e]=r[p+e]}++o}}if(0<s){n[o]=n[s];for(let e=s*i,t=o*i,n=0;n!==i;++n)r[t+n]=r[e+n];++o}return o!==n.length?(this.times=vc.arraySlice(n,0,o),this.values=vc.arraySlice(r,0,o*i)):(this.times=n,this.values=r),this}clone(){var e=vc.arraySlice(this.times,0),t=vc.arraySlice(this.values,0);const n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}Mc.prototype.TimeBufferType=Float32Array,Mc.prototype.ValueBufferType=Float32Array,Mc.prototype.DefaultInterpolation=2301;class wc extends Mc{}wc.prototype.ValueTypeName="bool",wc.prototype.ValueBufferType=Array,wc.prototype.DefaultInterpolation=2300,wc.prototype.InterpolantFactoryMethodLinear=void 0,wc.prototype.InterpolantFactoryMethodSmooth=void 0;class Sc extends Mc{}Sc.prototype.ValueTypeName="color";class Tc extends Mc{}Tc.prototype.ValueTypeName="number";class Ec extends xc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let l=e*s;for(var c=l+s;l!==c;l+=4)Wt.slerpFlat(i,0,a,l-s,a,l,o);return i}}class Lc extends Mc{InterpolantFactoryMethodLinear(e){return new Ec(this.times,this.values,this.getValueSize(),e)}}Lc.prototype.ValueTypeName="quaternion",Lc.prototype.DefaultInterpolation=2301,Lc.prototype.InterpolantFactoryMethodSmooth=void 0;class Ac extends Mc{}Ac.prototype.ValueTypeName="string",Ac.prototype.ValueBufferType=Array,Ac.prototype.DefaultInterpolation=2300,Ac.prototype.InterpolantFactoryMethodLinear=void 0,Ac.prototype.InterpolantFactoryMethodSmooth=void 0;class Rc extends Mc{}const Cc={enabled:!(Rc.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Pc{constructor(e,t,n){const r=this;let i=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,s),a===s&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(n){for(let e=0,t=l.length;e<t;e+=2){const i=l[e];var r=l[e+1];if(i.global&&(i.lastIndex=0),i.test(n))return r}return null}}}const Dc=new Pc;class Nc{constructor(e){this.manager=void 0!==e?e:Dc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(n,r){const i=this;return new Promise(function(e,t){i.load(n,e,r,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}(class extends null{});(class extends null{});class Ic extends Nc{constructor(e){super(e)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Cc.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;const s=It("img");function o(){c(),Cc.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){c(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function c(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class zc extends Nc{constructor(e){super(e)}load(n,r,e,i){const a=new ni,s=new Ic(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<n.length;++e)!function(t){s.load(n[t],function(e){a.images[t]=e,o++,6===o&&(a.needsUpdate=!0,r&&r(a))},void 0,i)}(e);return a}}(class extends null{});class Oc extends Nc{constructor(e){super(e)}load(e,t,n,r){const i=new Ft,a=new Ic(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i}}class Uc extends Xn{constructor(e,t=1){super(),this.type="Light",this.color=new pr(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Uc.prototype.isLight=!0;class Fc extends Uc{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Xn.DefaultUp),this.updateMatrix(),this.groundColor=new pr(t)}copy(e){return Uc.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Fc.prototype.isHemisphereLight=!0;const Hc=new Mn,Bc=new kt,Gc=new kt;class Vc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Pt(512,512),this.map=null,this.mapPass=null,this.matrix=new Mn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new hi,this._frameExtents=new Pt(1,1),this._viewportCount=1,this._viewports=[new Bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Bc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Bc),Gc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Gc),t.updateMatrixWorld(),Hc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Hc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Wc extends Vc{constructor(){super(new ei(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var n=2*St*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Wc.prototype.isSpotLightShadow=!0;class kc extends Uc{constructor(e,t,n=0,r=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(Xn.DefaultUp),this.updateMatrix(),this.target=new Xn,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new Wc}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}kc.prototype.isSpotLight=!0;const jc=new Mn,qc=new kt,Xc=new kt;class Zc extends Vc{constructor(){super(new ei(90,1,.5,500)),this._frameExtents=new Pt(4,2),this._viewportCount=6,this._viewports=[new Bt(2,1,1,1),new Bt(0,1,1,1),new Bt(3,1,1,1),new Bt(1,1,1,1),new Bt(3,0,1,1),new Bt(1,0,1,1)],this._cubeDirections=[new kt(1,0,0),new kt(-1,0,0),new kt(0,0,1),new kt(0,0,-1),new kt(0,1,0),new kt(0,-1,0)],this._cubeUps=[new kt(0,1,0),new kt(0,1,0),new kt(0,1,0),new kt(0,1,0),new kt(0,0,1),new kt(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix;var i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),qc.setFromMatrixPosition(e.matrixWorld),n.position.copy(qc),Xc.copy(n.position),Xc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Xc),n.updateMatrixWorld(),r.makeTranslation(-qc.x,-qc.y,-qc.z),jc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jc)}}Zc.prototype.isPointLightShadow=!0;class Jc extends Uc{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Zc}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Jc.prototype.isPointLight=!0;class Yc extends Vc{constructor(){super(new wi(-5,5,5,-5,.5,500))}}Yc.prototype.isDirectionalLightShadow=!0;class Qc extends Uc{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Xn.DefaultUp),this.updateMatrix(),this.target=new Xn,this.shadow=new Yc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Qc.prototype.isDirectionalLight=!0;class Kc extends Uc{constructor(e,t){super(e,t),this.type="AmbientLight"}}Kc.prototype.isAmbientLight=!0;class $c extends Uc{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}$c.prototype.isRectAreaLight=!0;class eh{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new kt)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var n=e.x,r=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.282095),t.addScaledVector(e[1],.488603*r),t.addScaledVector(e[2],.488603*i),t.addScaledVector(e[3],.488603*n),t.addScaledVector(e[4],n*r*1.092548),t.addScaledVector(e[5],r*i*1.092548),t.addScaledVector(e[6],.315392*(3*i*i-1)),t.addScaledVector(e[7],n*i*1.092548),t.addScaledVector(e[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){var n=e.x,r=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.886227),t.addScaledVector(e[1],1.023328*r),t.addScaledVector(e[2],1.023328*i),t.addScaledVector(e[3],1.023328*n),t.addScaledVector(e[4],.858086*n*r),t.addScaledVector(e[5],.858086*r*i),t.addScaledVector(e[6],.743125*i*i-.247708),t.addScaledVector(e[7],.858086*n*i),t.addScaledVector(e[8],.429043*(n*n-r*r)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,n){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],n);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,n){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],n);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].fromArray(t,n+3*e);return this}toArray(t=[],n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].toArray(t,n+3*e);return t}static getBasisAt(e,t){var n=e.x,r=e.y,e=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*e,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*n*e,t[8]=.546274*(n*n-r*r)}}eh.prototype.isSphericalHarmonics3=!0;class th extends Uc{constructor(e=new eh,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}th.prototype.isLightProbe=!0;(class extends null{});class nh{static decodeText(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);try{return decodeURIComponent(escape(r))}catch(e){return r}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class rh extends Ar{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}rh.prototype.isInstancedBufferGeometry=!0;(class extends null{});(class extends null{});M,w,l,c,C,P,G,De,V,Ne,W,we,Se,e,Ie;th;th;(class extends th{constructor(e,t=1){super(void 0,t);e=(new pr).set(e);this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}).prototype.isAmbientLightProbe=class extends th{constructor(e,t,n=1){super(void 0,n);var r=(new pr).set(e),n=(new pr).set(t),e=new kt(r.r,r.g,r.b),t=new kt(n.r,n.g,n.b),r=Math.sqrt(Math.PI),n=r*Math.sqrt(.75);this.sh.coefficients[0].copy(e).add(t).multiplyScalar(r),this.sh.coefficients[1].copy(e).sub(t).multiplyScalar(n)}}.prototype.isHemisphereLightProbe=class extends Nc{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,n,e,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Cc.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){n&&n(a),i.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){Cc.add(t,e),n&&n(e),i.manager.itemEnd(t)}).catch(function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}.prototype.isImageBitmapLoader=!0;(class extends null{});(class extends Xn{});(class extends null{});var ih="\\[\\]\\.:\\/";const ah=new RegExp("["+ih+"]","g");var sh="[^"+ih+"]",oh="[^"+ih.replace("\\.","")+"]",lh=/((?:WC+[\/:])*)/.source.replace("WC",sh),ch=/(WCOD+)?/.source.replace("WCOD",oh),hh=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",sh),uh=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",sh);const dh=new RegExp("^"+lh+ch+hh+uh+"$"),ph=["material","materials","bones"];class fh{constructor(e,t,n){this.path=t,this.parsedPath=n||fh.parseTrackName(t),this.node=fh.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return new(e&&e.isAnimationObjectGroup?fh.Composite:fh)(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ah,"")}static parseTrackName(e){var t=dh.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r&&(t=n.nodeName.substring(r+1),-1!==ph.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)),null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,r){if(!r||""===r||"."===r||-1===r||r===e.name||r===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(r);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var n=t[e];if(n.name===r||n.uuid===r)return n;n=i(n.children);if(n)return n}return null};e=i(e.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)n[r++]=i[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++]}_setValue_array_setNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let n=this.node;var e=this.parsedPath,r=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(n||(n=fh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(r){let t=e.objectIndex;switch(r){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let e=0;e<n.length;e++)if(n[e].name===t){t=e;break}break;default:if(void 0===n[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[r]}if(void 0!==t){if(void 0===n[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[t]}}var s=n[i];if(void 0!==s){let e=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate);let t=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[a]&&(a=n.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else{e=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+i+" but it wasn't found.",n)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}fh.Composite=class{constructor(e,t,n){n=n||fh.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(n,r){const i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(n,r)}bind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()}unbind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}},fh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},fh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},fh.prototype.GetterByBindingType=[fh.prototype._getValue_direct,fh.prototype._getValue_array,fh.prototype._getValue_arrayElement,fh.prototype._getValue_toArray],fh.prototype.SetterByBindingTypeAndVersioning=[[fh.prototype._setValue_direct,fh.prototype._setValue_direct_setNeedsUpdate,fh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[fh.prototype._setValue_array,fh.prototype._setValue_array_setNeedsUpdate,fh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[fh.prototype._setValue_arrayElement,fh.prototype._setValue_arrayElement_setNeedsUpdate,fh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[fh.prototype._setValue_fromArray,fh.prototype._setValue_fromArray_setNeedsUpdate,fh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];(class extends bt{});new Float32Array(1);ao;(class extends ao{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;(class extends null{});const mh=new kt,gh=new Mn,vh=new Mn;Zo;(class extends null{});(class extends null{});Zo;(class extends null{});(class extends null{});(class extends null{});(class extends null{});(class extends null{});(class extends null{});(class extends null{});(class extends null{});const xh=new Float32Array(1);new Int32Array(xh.buffer);fl.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(fl.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},Il.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},class extends Zo{constructor(e=10,r=10,i=4473924,a=8947848){i=new pr(i),a=new pr(a);var s=r/2,o=e/r,l=e/2;const c=[],h=[];for(let e=0,t=0,n=-l;e<=r;e++,n+=o){c.push(-l,0,n,l,0,n),c.push(n,0,-l,n,0,l);const u=e===s?i:a;u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3}const t=new Ar;t.setAttribute("position",new _r(c,3)),t.setAttribute("color",new _r(h,3));e=new Ho({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends Zo{constructor(e){var t=function t(n){const r=[];n&&n.isBone&&r.push(n);for(let e=0;e<n.children.length;e++)r.push.apply(r,t(n.children[e]));return r}(e);const n=new Ar,r=[],i=[];var a=new pr(0,0,1),s=new pr(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new _r(r,3)),n.setAttribute("color",new _r(i,3));var l=new Ho({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var n=this.bones;const t=this.geometry,r=t.getAttribute("position");vh.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){var i=n[e];i.parent&&i.parent.isBone&&(gh.multiplyMatrices(vh,i.matrixWorld),mh.setFromMatrixPosition(gh),r.setXYZ(t,mh.x,mh.y,mh.z),gh.multiplyMatrices(vh,i.parent.matrixWorld),mh.setFromMatrixPosition(gh),r.setXYZ(t+1,mh.x,mh.y,mh.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Nc.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),nh.extractUrlBase(e)},Nc.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Xt.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Xt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Xt.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Xt.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Xt.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},pn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hi.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Dt.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Dt.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Dt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Dt.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Dt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Dt.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Mn.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Mn.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Mn.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new kt).setFromMatrixColumn(this,3)},Mn.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Mn.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Mn.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Mn.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Mn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Mn.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Mn.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Mn.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Mn.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Mn.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Mn.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Mn.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Mn.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Mn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Mn.prototype.makeFrustum=function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},Mn.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},oi.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Wt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Wt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},bn.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},bn.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},bn.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},ir.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},ir.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},ir.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},ir.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},ir.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},ir.barycoordFromPoint=function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ir.getBarycoord(e,t,n,r,i)},ir.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ir.getNormal(e,t,n,r)},zl.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},zl.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new nc(this,e)},zl.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new lc(this,e)},Pt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Pt.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Pt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},kt.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},kt.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},kt.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},kt.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},kt.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},kt.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},kt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},kt.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},kt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Bt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Bt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Xn.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Xn.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Xn.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Xn.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Xn.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Xn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),qr.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(qr.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Co.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},ei.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Uc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(vr.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===t},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(t)}}}),vr.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?t:r),this},vr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},vr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Ar.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},Ar.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new vr(t,arguments[2])))},Ar.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},Ar.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Ar.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Ar.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},Ar.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Ar.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),ao.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?t:r),this},ao.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},nc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},nc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},nc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},io.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},class qh{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new qh(void 0===this.value.clone?this.value:this.value.clone())}}.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(sr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new pr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Kr.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),to.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},to.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},to.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},to.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},to.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},to.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},to.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},to.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},to.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},to.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},to.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},to.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},to.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},to.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},to.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},to.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},to.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},to.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},to.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},to.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},to.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},to.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},to.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},to.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},to.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(to.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?vt:gt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(ks.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Gt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),ti.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},ti.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},Ot.crossOrigin=void 0,Ot.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Oc;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Ot.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new zc;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Ot.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ot.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"136"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="136");var yh=Xh(792),_h=Xh(870),zi=Xh.n(_h),Oi=Xh(229),ih=Xh.n(Oi),oh=Xh(573),sh=Xh.n(oh),lh=Xh(644),ch=Xh.n(lh),hh=Xh(835),uh=Xh.n(hh),_h=Xh(826),Oi=Xh.n(_h),oh=Xh(316),lh=Xh.n(oh),hh=Xh(898),_h=Xh.n(hh),oh=Xh(64),hh=Xh.n(oh),oh=Xh(640);const bh={vertex:Xh.n(oh)().sourceCode,fragment:[{name:"mandelbrot",source:zi().sourceCode},{name:"mandelbulb",source:ih().sourceCode},{name:"discretebodies",source:sh().sourceCode},{name:"mellowbodies",source:ch().sourceCode},{name:"noise",source:uh().sourceCode},{name:"rainbowflower",source:Oi().sourceCode},{name:"circleapprox",source:lh().sourceCode},{name:"truchet",source:_h().sourceCode},{name:"wave",source:hh().sourceCode}]},Mh=.25,wh=1.2,Sh=["./palettes/magma-palette.png","./palettes/magenteal-palette.png","./palettes/rainbow-palette.png"];let Th=null,Eh=null,Lh=null,Ah=null,Rh=null,Ch=null,Ph=null,Dh=null,Nh=null,Ih=null,zh=null,Oh=0,Uh=null,Fh=null,Hh={textures:null,current:0,reverse:!1,count:0},Bh={linear:1,exponential:1},Gh={pos:new Pt(0,0),down:!1};function Vh(e){Wh("Time",(Date.now()-Uh)/1e3),Ch.render(Rh,Ah),Ih.update()}function Wh(e,t){Nh.material.uniforms[e].value=t}function kh(e){let t=Oh+e;t<0&&(t=Th.length-1),jh(t%Th.length)}function jh(e){console.log("Compiling shader...",[e,Th[e].name]);var t=performance.now();Oh=e,Dh=new Kr({uniforms:zh,fragmentShader:Th[Oh].source,vertexShader:Eh}),null!=Nh&&(Rh.remove(Nh),Nh.geometry.dispose(),Nh.material.dispose(),Nh=null),Nh=new qr(Ph,Dh),Rh.add(Nh);e=performance.now();console.log("Shader compiled in",(e-t).toFixed(3),"ms"),Uh=Date.now(),Bh.exponential=1,Bh.linear=1}!async function(e){Lh=e,null==Lh&&(Lh=document.createElement("canvas"),document.appendChild(Lh)),console.log("DOM loaded."),Th=bh.fragment,Eh=bh.vertex,console.log("Shaders loaded.");const t=new Oc;Hh.textures=[];for(const n of Sh)Hh.textures.push(t.load(n));Hh.count=Hh.textures.length,console.log("Textures loaded."),Rh=new io,Rh.autoUpdate=!1,Ah=new wi(-1,1,1,-1,0,1),Ah.position.z=1,console.log("Scene loaded."),zh={Resolution:{type:"vec2",value:new Pt(window.innerWidth,window.innerHeight)},Offset:{type:"vec2",value:Fh},Zoom:{type:"vec2",value:new Pt(Bh.linear,Bh.exponential)},Time:{type:"float",value:0},Palette:{type:"t",value:Hh.textures[0]},ReversePalette:{type:"bool",value:Hh.reverse},MousePosition:{type:"vec2",value:Gh.pos},MouseLeftDown:{type:"bool",value:!1},MouseRightDown:{type:"bool",value:!1}},console.log("Uniforms loaded."),Ph=new pi(2,2),jh(0),Wh("Zoom",new Pt(Bh.linear,Bh.exponential=.009554277742566964)),Wh("Offset",Fh=new Pt(-.37432304500407854,.6598041393699959)),Ch=new to({antialias:!1,canvas:Lh,powerPerformance:"high-performance",depth:!1}),Ch.setSize(window.innerWidth,window.innerHeight,!1),console.log("Renderer loaded."),window.addEventListener("resize",e=>{Lh.width=window.innerWidth,Lh.height=window.innerHeight,Ch.setSize(Lh.width,Lh.height,!1),Ah.aspect=Lh.width/Lh.height,Ah.updateProjectionMatrix(),Wh("Resolution",new Pt(Lh.width,Lh.height))}),Lh.addEventListener("mousewheel",e=>function(e){console.log(Bh.exponential),e.deltaY<0?(Bh.exponential/=wh,Bh.linear-=Mh):(Bh.exponential*=wh,Bh.linear+=Mh);Wh("Zoom",new Pt(Bh.linear,Bh.exponential))}(e)),Lh.addEventListener("mousemove",e=>function(e){var t=new Pt(e.x,e.y);Gh.down&&((n=new Pt(e.x,e.y)).sub(Gh.pos),function(e){Fh.x-=e.x/Lh.width*Bh.exponential,Fh.y+=e.y/Lh.height*Bh.exponential,Wh("Offset",Fh)}(n));Gh.pos=t;var n=Lh.getBoundingClientRect(),t=e.x/n.width,n=e.y/n.height;Wh("MousePosition",new Pt(t,1-n))}(e)),Lh.addEventListener("mousedown",e=>{Gh.down=!0}),Lh.addEventListener("mouseup",e=>{Gh.down=!1}),window.addEventListener("keydown",e=>function(e){switch(e.code){case"KeyP":!function(e){Hh.current=e%Hh.count,Wh("Palette",Hh.textures[Hh.current])}(Hh.current+1);break;case"KeyR":Hh.reverse=!Hh.reverse,Wh("ReversePalette",Hh.reverse);break;case"ArrowRight":kh(1);break;case"ArrowLeft":kh(-1)}}(e)),console.log("Events loaded."),Ih=new yh,Ih.setMode(0),document.body.appendChild(Ih.domElement),console.log("Stats loaded."),console.log("✅ Engine setup complete, setarting renderer..."),Ch.setAnimationLoop(Vh)}(document.getElementById("main-canvas"))})()})();
//# sourceMappingURL=bundle.js.map